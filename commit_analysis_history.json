[
  {
    "commitHash": "abc123def",
    "commitMessage": "Add user authentication feature",
    "timestamp": "2025-05-28T03:17:58.277Z",
    "user": "john.doe",
    "project": "TestProject",
    "fileChanges": 1,
    "linesAdded": 25,
    "linesDeleted": 5,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.45,
        "reasoning": "The code quality is high due to clear comments, use of secure practices like SHA256 for password hashing, and proper error handling. The developer shows a mid-level understanding with efficient implementation. The complexity is moderate with the addition of token generation. Estimated development time is higher due to the authentication feature. AI may have been used for repetitive tasks like token generation.",
        "responseTime": 1.524,
        "tokensUsed": 842,
        "cost": 0.000562
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.6,
        "estimatedHours": 4.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 3.5,
        "reasoning": "The code quality is good, with a clear and organized structure, appropriate use of libraries, and a well-implemented authentication flow. The developer appears to be at a mid-to-senior level, with a good understanding of security best practices and the ability to implement them. The complexity is moderate, with the addition of token-based authentication adding some additional complexity. The estimated development time is reasonable for the features implemented. The AI percentage is relatively low, as the code appears to be primarily hand-written, with the exception of potentially some boilerplate or utility functions. The estimated hours with AI assistance are lower, as AI tools could help with tasks like generating secure token logic, but the core authentication functionality would still require significant manual development.",
        "responseTime": 3.286,
        "tokensUsed": 1087,
        "cost": 0.00050675
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The code demonstrates a basic understanding of user authentication.  The upgrade from MD5 to SHA256 is a positive, showing awareness of security best practices.  However, the hardcoded secret key is a major flaw, significantly impacting the code quality. The addition of JWT token generation is a good step, but the overall implementation is relatively simple. A mid-level developer would likely produce this code. The complexity is moderate, considering the inclusion of hashing, JWT, and basic user management.  Estimating development time, accounting for planning, implementation, and testing, 2.75 hours seems reasonable.  A significant portion of the code (45.5%) might have been generated by AI (particularly the JWT implementation and the basic structure of the class). Using AI tools, the development time could be significantly reduced to about 1.25 hours, mainly focused on reviewing, security improvements (fixing hardcoded secret key), and testing the generated code.",
        "responseTime": 2.444,
        "tokensUsed": 926,
        "cost": 0.00013492499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is average with some concerns like hardcoded secret key and lack of input validation. Developer level seems mid-level due to basic implementation with room for security improvements. Complexity is moderate with JWT integration but straightforward logic. Estimated hours reflect a small feature with setup and testing. AI percentage is moderate due to standard patterns that could be generated, reducing time with AI assistance.",
        "responseTime": 2.423,
        "tokensUsed": 844,
        "cost": 0.0056500000000000005
      }
    ],
    "averageCodeQuality": 3.825,
    "averageDevLevel": 2.425,
    "averageComplexity": 3.4000000000000004,
    "averageEstimatedHours": 3.5,
    "averageAiPercentage": 31.5,
    "averageEstimatedHoursWithAi": 2.3
  },
  {
    "commitHash": "abc123def",
    "commitMessage": "Add user authentication feature",
    "timestamp": "2025-05-28T19:54:04.952Z",
    "user": "john.doe",
    "project": "TestProject",
    "fileChanges": 1,
    "linesAdded": 25,
    "linesDeleted": 5,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 2.8,
        "estimatedHours": 4.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 3.6,
        "reasoning": "The code quality is high due to clear comments, use of secure hashing algorithm, and proper error handling. The developer level is mid-level as the code structure is well organized but lacks some advanced techniques. The complexity is moderate as it involves user authentication logic. Estimated development time is relatively high due to the addition of user authentication feature. AI percentage is low as the code seems to be mostly hand-written. With AI assistance, the development time could be significantly reduced.",
        "responseTime": 2.872,
        "tokensUsed": 863,
        "cost": 0.0005935000000000001
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.5,
        "estimatedHours": 3.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The code quality is good, with a clear and organized structure, appropriate use of libraries, and a well-designed authentication system. The developer appears to be at a mid-to-senior level, with a good understanding of security best practices and the ability to implement them. The complexity is moderate, with the addition of token-based authentication adding some complexity. The estimated development time is reasonable for the features implemented. The AI percentage is relatively low, as the code shows a good level of custom implementation and problem-solving. The estimated hours with AI assistance are lower, as the AI could help with tasks like token generation and password hashing.",
        "responseTime": 2.664,
        "tokensUsed": 1067,
        "cost": 0.00048175
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The code demonstrates a basic understanding of user authentication.  The upgrade from MD5 to SHA256 is a positive step.  However, using a hardcoded secret key is a major security flaw (reducing the code quality score). The addition of JWT token generation is a good addition.  The developer shows competency but needs improvement in security best practices.  The complexity is moderate, primarily due to the inclusion of JWT.  The AI percentage is estimated at 45.5% because generating the JWT encoding and decoding logic and even the basic structure of the class might have been assisted by AI, while the core logic and security considerations were likely handled by the developer. With AI assistance, focusing on the hardcoded key issue and security considerations would have been faster.",
        "responseTime": 2.956,
        "tokensUsed": 879,
        "cost": 0.00012082499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is average with a shift to SHA256 from MD5, but the hardcoded secret key is a security flaw. Developer level seems mid-tier due to basic JWT implementation and error handling. Complexity is moderate with token generation and user management. Estimated time reflects a small feature with setup and testing. AI percentage is moderate due to standard patterns in JWT usage. AI assistance could reduce debugging and boilerplate time.",
        "responseTime": 4.263,
        "tokensUsed": 854,
        "cost": 0.0058
      }
    ],
    "averageCodeQuality": 3.825,
    "averageDevLevel": 2.3,
    "averageComplexity": 3.125,
    "averageEstimatedHours": 3.5,
    "averageAiPercentage": 29,
    "averageEstimatedHoursWithAi": 2.3375,
    "totalTokens": 3663,
    "totalCost": 0.006996074999999999,
    "avgCostPerModel": 0.0017490187499999998
  },
  {
    "commitHash": "abc123def",
    "commitMessage": "Add user authentication feature",
    "timestamp": "2025-05-28T19:57:38.641Z",
    "user": "john.doe",
    "project": "TestProject",
    "fileChanges": 1,
    "linesAdded": 25,
    "linesDeleted": 5,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.6,
        "estimatedHours": 4.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 3.4,
        "reasoning": "The code quality is high due to clear comments, use of secure practices like SHA256, and efficient implementation of user authentication. The developer shows a mid-level understanding with the improvements made. The complexity is moderate due to token generation and user verification logic. Estimated development time is high due to the addition of authentication features. AI percentage is low as the changes seem developer-driven.",
        "responseTime": 2.265,
        "tokensUsed": 845,
        "cost": 0.0005665
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.5,
        "estimatedHours": 8.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 6,
        "reasoning": "The code quality is good, with a clear and organized structure, appropriate use of libraries, and a well-designed authentication system. The developer appears to be at a mid-to-senior level, with a good understanding of security best practices and the ability to implement them. The complexity is moderate, with the addition of token-based authentication adding some complexity to the codebase. The estimated development time is on the higher side, as implementing a full authentication system can be time-consuming. The AI percentage is relatively low, as the code appears to be primarily written by the developer, with only minor potential AI assistance in areas like code formatting or boilerplate generation. The estimated hours with AI assistance are lower, as AI tools could help streamline certain aspects of the implementation, such as token generation and handling.",
        "responseTime": 3.229,
        "tokensUsed": 1102,
        "cost": 0.0005255
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The code demonstrates a basic understanding of user authentication.  The upgrade from MD5 to SHA256 for password hashing is a positive step.  However, hardcoding the secret key is a major security flaw, significantly lowering the quality score. The addition of JWT token generation shows some familiarity with secure practices. The code is reasonably well-structured but lacks robust error handling and input validation.  A mid-level developer could have written this, but the security oversight suggests some gaps in experience. The complexity is moderate due to the inclusion of hashing, JWT, and basic user management. The estimated time accounts for implementation, testing, and minor debugging. AI could potentially generate significant portions of the code (hashing, JWT generation), thus the high AI percentage.  Using AI tools would reduce development time by making parts of the coding process quicker and allowing the developer to focus on security aspects.",
        "responseTime": 3.111,
        "tokensUsed": 923,
        "cost": 0.00013402499999999996
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 2.8,
        "devLevel": 1.9,
        "complexity": 2.6,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "Code quality is below average due to the hardcoded secret key and lack of input validation or error handling. Developer level seems mid-level with basic understanding of authentication but missing best practices. Complexity is moderate with JWT integration and password hashing. Estimated hours reflect a straightforward feature with some research on JWT. AI percentage is moderate as the structure looks somewhat templated, possibly from tutorials or AI suggestions. Hours with AI reduced due to faster boilerplate generation.",
        "responseTime": 3.091,
        "tokensUsed": 860,
        "cost": 0.005889999999999999
      }
    ],
    "averageCodeQuality": 3.7250000000000005,
    "averageDevLevel": 2.375,
    "averageComplexity": 3.275,
    "averageEstimatedHours": 4.75,
    "averageAiPercentage": 28.875,
    "averageEstimatedHoursWithAi": 3.1875,
    "totalTokens": 3730,
    "totalCost": 0.007116025,
    "avgCostPerModel": 0.00177900625
  },
  {
    "commitHash": "e02dd3335e251e4dd28f18fe01045d83e14f46fb",
    "commitMessage": "Add web interface for commit analysis visualization",
    "timestamp": "2025-05-28T20:52:16.097Z",
    "user": "unknown",
    "project": "unknown",
    "fileChanges": 11,
    "linesAdded": 1911,
    "linesDeleted": 44,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.8,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The code quality is high due to well-structured classes and functions. The developer shows a mid-level proficiency in handling complex code. The complexity is moderate due to the use of token estimation and pricing calculations. The estimated development time is relatively high due to the number of files changed and lines added. The AI percentage is lower as the code seems to involve more manual logic. With AI assistance, the development time could be significantly reduced.",
        "responseTime": 4.86,
        "tokensUsed": 1206,
        "cost": 0.0007590000000000001
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.9,
        "estimatedHours": 25.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 16.7,
        "reasoning": "The commit adds a significant web interface for visualizing commit analysis, which indicates a well-designed and implemented feature. The developer appears to be an experienced mid-level engineer capable of handling complex tasks. The code complexity is moderately high due to the interactive visualization components, but the overall quality is good. The AI assistance is estimated to reduce the development time by about a third, suggesting a good balance between human and AI contributions.",
        "responseTime": 2.335,
        "tokensUsed": 1454,
        "cost": 0.0005355
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.8,
        "estimatedHours": 18.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 14.8,
        "reasoning": "The code demonstrates a good understanding of asynchronous operations and object-oriented programming.  The addition of cost estimation based on token usage shows forethought and planning. The code is well-structured, but the complexity arises from handling multiple AI models and their varying pricing structures, as well as the integration of a web interface (implied by the commit message, but not fully shown in the provided diff).  The developer shows mid-to-senior level skills in software engineering and cost awareness.  A significant portion of the code (especially the model pricing and token estimation) appears to be manually written, suggesting a lower AI contribution than might be expected given the 1900 lines added.  The estimated hours are based on a detailed task analysis including setting up the web interface, integrating different AI APIs, handling token estimation, pricing calculations, and handling potential errors. Using AI could reduce time by approximately 3.7 hours in the context of this commit, primarily by accelerating the implementation of the cost estimation logic and UI components.",
        "responseTime": 3.318,
        "tokensUsed": 1150,
        "cost": 0.000159825
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.8,
        "estimatedHours": 30.5,
        "aiPercentage": 35.7,
        "estimatedHoursWithAi": 18.3,
        "reasoning": "The commit introduces a significant feature with a web interface for commit analysis visualization, adding substantial lines of code (1911 added vs 44 deleted). Code quality is rated high due to structured additions like pricing models and token estimation logic, suggesting attention to detail. Developer level is mid-range, reflecting competence in handling complex integrations. Complexity is moderately high due to the integration of cost and token tracking logic. Estimated hours are based on the volume of changes and feature scope. AI percentage is moderate as some structured data (like MODEL_PRICING) could be AI-generated or templated. AI assistance could reduce development time by automating repetitive tasks.",
        "responseTime": 3.739,
        "tokensUsed": 1239,
        "cost": 0.008175
      }
    ],
    "averageCodeQuality": 4.2,
    "averageDevLevel": 2.6750000000000003,
    "averageComplexity": 3.825,
    "averageEstimatedHours": 19.5,
    "averageAiPercentage": 30.175,
    "averageEstimatedHoursWithAi": 13.075,
    "totalTokens": 5049,
    "totalCost": 0.009629325,
    "avgCostPerModel": 0.00240733125
  },
  {
    "commitHash": "6ddb6b4ea3bc3cfa010c7ca29eb0c3bb9545a3b6",
    "commitMessage": "Transform UI to terminal-style dark theme",
    "timestamp": "2025-05-29T00:03:37.992Z",
    "user": "Marlon Espinosa",
    "project": "unknown",
    "fileChanges": 6,
    "linesAdded": 364,
    "linesDeleted": 100,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.8,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The code quality is high due to well-structured classes and functions. The developer shows a mid-level proficiency in handling complex code. The complexity is moderate due to the use of token estimation and pricing calculations. The estimated development time is relatively high due to the number of files changed and lines added. The AI percentage is lower as the code seems to involve more manual logic. With AI assistance, the development time could be significantly reduced.",
        "responseTime": 2.07,
        "tokensUsed": 1144,
        "cost": 0.000726
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.1,
        "devLevel": 2.8,
        "complexity": 4,
        "estimatedHours": 12.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 9,
        "reasoning": "The commit message indicates a significant transformation of the UI to a terminal-style dark theme, which suggests a well-designed and implemented feature. The number of files changed (6) and lines added (364) with a moderate number of lines deleted (100) implies a substantial codebase change. The developer appears to be an experienced mid-level engineer capable of handling complex UI transformations. The complexity is high due to the need to ensure a consistent and visually appealing dark theme across multiple UI components. The estimated development time is relatively high, but the AI percentage is lower, indicating more manual work. With AI assistance, the development time could be reduced by around 25%.",
        "responseTime": 2.247,
        "tokensUsed": 1349,
        "cost": 0.00056225
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 4,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.8,
        "reasoning": "The commit focuses on a UI transformation, suggesting a well-defined scope.  A code quality of 4.0 reflects a likely well-structured and functional implementation of a dark theme. The developer level is rated 2.2 because while the task is not overly complex, it requires understanding of UI frameworks and theming concepts. The complexity is rated 2.8 due to the number of files changed (6) and lines added (364), suggesting that although the task is not exceptionally complex, it involves a reasonable amount of work.  The estimated development time of 4 hours accounts for the number of lines changed and the need for thorough testing. The AI percentage is set at 30%, assuming some parts (like color palette generation or basic styling) may have been aided by AI but most of the structural changes and implementation required manual effort. With AI assistance, time is reduced by about 1.2 hours, to 2.8 hours, reflecting the time saved on repetitive or less critical aspects of the theme implementation.",
        "responseTime": 2.628,
        "tokensUsed": 1118,
        "cost": 0.00015089999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 40,
        "estimatedHoursWithAi": 1.95,
        "reasoning": "The commit focuses on transforming the UI to a terminal-style dark theme, which suggests a good level of design and implementation effort across 6 files with a significant number of lines added (364) and deleted (100). Code quality is rated at 3.8 due to the structured approach implied by the theme transformation. Developer level is assessed at 2.1, indicating a mid-level engineer with decent proficiency. Complexity is moderate at 3.2 given the UI changes across multiple files. Estimated hours are set at 3.25 due to the scope of changes. AI percentage is estimated at 40.0 as theme styling might leverage AI tools for CSS or design suggestions. With AI assistance, the time could be reduced to 1.95 hours.",
        "responseTime": 2.873,
        "tokensUsed": 1204,
        "cost": 0.00826
      }
    ],
    "averageCodeQuality": 4.025,
    "averageDevLevel": 2.45,
    "averageComplexity": 3.45,
    "averageEstimatedHours": 5.8125,
    "averageAiPercentage": 31.25,
    "averageEstimatedHoursWithAi": 4.0625,
    "totalTokens": 4815,
    "totalCost": 0.00969915,
    "avgCostPerModel": 0.0024247875
  },
  {
    "commitHash": "6ddb6b4ea3bc3cfa010c7ca29eb0c3bb9545a3b6",
    "commitMessage": "Transform UI to terminal-style dark theme",
    "timestamp": "2025-05-29T00:07:18.189Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 6,
    "linesAdded": 364,
    "linesDeleted": 100,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.8,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The code quality is high due to well-structured classes and functions. The developer shows a mid-level proficiency in handling complex code. The complexity is moderate due to the use of token estimation and pricing calculations. The estimated development time is relatively high due to the number of files changed and lines added. The AI percentage is lower as the code seems to involve more manual logic. With AI assistance, the development time could be significantly reduced.",
        "responseTime": 1.915,
        "tokensUsed": 1144,
        "cost": 0.000726
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 4,
        "estimatedHours": 8.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 6.5,
        "reasoning": "The commit message indicates a significant transformation of the UI to a terminal-style dark theme, which suggests a well-designed and implemented feature. The number of files changed (6) and the lines added (364) and deleted (100) indicate a moderate-sized change. The developer appears to be an experienced mid-level engineer capable of handling this level of complexity. The code complexity is high due to the extensive UI changes and the need to ensure a consistent and visually appealing theme across multiple components. The estimated development time is relatively high, but the AI percentage is lower, as the UI transformation likely requires more manual work and design decisions. With AI assistance, the development time could be reduced, but the AI contribution would be limited compared to more code-centric tasks.",
        "responseTime": 2.02,
        "tokensUsed": 1367,
        "cost": 0.0005847500000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The commit focuses on a UI transformation to a dark theme.  While a significant number of lines were added (364), this is likely due to the nature of UI changes which often involve many small modifications.  The deletion of 100 lines suggests refactoring rather than simple addition.  A code quality of 4.0 reflects a well-executed theme change, assuming it's functional and well-structured. The developer level is rated 2.2 as it demonstrates competence in UI development but doesn't necessarily show advanced skills.  The complexity is rated 2.8 because a theme change is usually not highly complex, although managing the interactions between numerous elements could present some moderate challenges.  The estimated time of 3 hours accounts for potential UI debugging and integration testing.  A 25% AI contribution is estimated because AI might have assisted with some repetitive CSS changes or even layout generation, but the creative and design aspects likely demanded manual effort.",
        "responseTime": 2.64,
        "tokensUsed": 1113,
        "cost": 0.0001494
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 40,
        "estimatedHoursWithAi": 1.95,
        "reasoning": "The commit focuses on transforming the UI to a terminal-style dark theme, which suggests a good level of design and implementation skill, hence a code quality score of 3.8. The developer level is assessed as mid-level (2.1) due to the moderate scope of changes across 6 files. Complexity is moderate at 3.2 given the balance of lines added (364) and deleted (100), indicating a focused UI overhaul. Estimated hours are set at 3.25 based on the volume of changes. AI percentage is estimated at 40.0 due to potential use of design tools or templates for UI themes. With AI assistance, the time could be reduced to 1.95 hours.",
        "responseTime": 4.395,
        "tokensUsed": 1195,
        "cost": 0.008125
      }
    ],
    "averageCodeQuality": 4.05,
    "averageDevLevel": 2.375,
    "averageComplexity": 3.45,
    "averageEstimatedHours": 4.5625,
    "averageAiPercentage": 30,
    "averageEstimatedHoursWithAi": 3.3,
    "totalTokens": 4819,
    "totalCost": 0.00958515,
    "avgCostPerModel": 0.0023962875
  },
  {
    "commitHash": "6238e23e35702d3094169e9e9096f256fb2891a2",
    "commitMessage": "Fix automatic extraction of username and project name",
    "timestamp": "2025-05-29T00:20:54.749Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 196,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 4.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 3.15,
        "reasoning": "The code quality is high due to clear and well-structured changes. The developer shows mid-level proficiency in handling the git-related tasks. The complexity is moderate as it involves extracting user and project names from git. Estimated development time is relatively high due to the number of lines added and changes made. AI may have assisted in some parts, but human intervention was likely dominant.",
        "responseTime": 5.946,
        "tokensUsed": 1133,
        "cost": 0.0007105
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.7,
        "estimatedHours": 4.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 3,
        "reasoning": "The code demonstrates a good understanding of Git operations and the ability to extract relevant information from the repository. The implementation is well-structured and handles edge cases effectively. The developer appears to be experienced and capable of working with Git-related tasks. The complexity is moderate, as the code involves several steps to determine the user and project name. The estimated development time is on the higher side due to the need to handle various scenarios, but the use of AI assistance could potentially reduce the time required.",
        "responseTime": 1.816,
        "tokensUsed": 1328,
        "cost": 0.000516
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.2,
        "estimatedHours": 4.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 3.15,
        "reasoning": "The commit demonstrates improved robustness in handling user and project name extraction. The added error handling and fallback mechanisms are good practices.  The code for extracting information from the git config and remote URL is well-structured and efficient. The regular expression used for parsing the remote URL is reasonably concise and effective.  However, it might benefit from additional input validation to handle edge cases more gracefully (this is a minor point). The `dev_level` score reflects the solid understanding of git and JavaScript demonstrated but also some areas where a more senior developer might have implemented more refined error handling or made more optimal choices for some string manipulation. The `complexity` score reflects the moderate complexity of the added logic; it's not overly intricate, but it's more than a simple change. The AI percentage is relatively low because the core logic—parsing git config and remote URLs—requires a good understanding of git and shell commands, which is less suited for AI generation at this time.  AI could've assisted in generating parts of the error handling and string manipulation, which is why there's some AI contribution. The estimated hours consider the time for planning, writing, testing, and debugging the code. With AI, some repetitive tasks and code generation could have been faster.  There's room for improvement with regards to comments explaining complex parts.",
        "responseTime": 2.963,
        "tokensUsed": 1232,
        "cost": 0.00018464999999999996
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "The code quality is rated highly due to clear logic for extracting user and project names with proper fallbacks, though it lacks extensive error handling. Developer level suggests mid-level experience given the structured approach and use of async operations. Complexity is moderate due to regex and multiple fallback mechanisms. Estimated hours reflect the time to write and test the logic. AI percentage is moderate as the code shows some patterns that could be AI-generated, like the regex structure. Hours with AI are reduced due to potential assistance in drafting repetitive error handling.",
        "responseTime": 3.247,
        "tokensUsed": 1159,
        "cost": 0.007545
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.4749999999999996,
    "averageComplexity": 3.4749999999999996,
    "averageEstimatedHours": 4.1875,
    "averageAiPercentage": 28.875,
    "averageEstimatedHoursWithAi": 2.825,
    "totalTokens": 4852,
    "totalCost": 0.00895615,
    "avgCostPerModel": 0.0022390375,
    "codeAnalysis": {
      "totalLines": 3245,
      "codeLines": 2790,
      "commentLines": 0,
      "textLines": 76,
      "blankLines": 252,
      "codePercent": "93.2",
      "commentPercent": "0.0",
      "textPercent": "2.5"
    }
  },
  {
    "commitHash": "0f9c884a7cad52b5a68cf928843604988254e995",
    "commitMessage": "Update README with comprehensive documentation",
    "timestamp": "2025-05-29T00:28:20.186Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 119,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.6,
        "complexity": 3.8,
        "estimatedHours": 2.75,
        "aiPercentage": 27.5,
        "estimatedHoursWithAi": 2.6,
        "reasoning": "The commit updates the README with comprehensive documentation, indicating a high level of attention to detail and clarity, hence the high code quality score. The complexity is rated slightly higher due to the detailed features and analysis included. The estimated hours are reasonable for the amount of documentation added. The AI percentage is relatively low, suggesting most of the content was manually written. The estimated hours with AI is also provided, reflecting potential time savings if AI tools were utilized.",
        "responseTime": 2.853,
        "tokensUsed": 1113,
        "cost": 0.0007155000000000001
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.9,
        "estimatedHours": 2.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit updates the README with comprehensive documentation, which is a positive sign of code quality and developer expertise. The changes are well-organized and provide clear instructions for users, indicating a strong understanding of the project. The complexity is moderate, as the documentation covers various aspects of the web interface and code analysis features. The AI percentage is relatively low, suggesting the documentation was primarily written by the developer. Overall, this commit demonstrates a good level of code quality, developer experience, and efficient use of AI assistance.",
        "responseTime": 1.789,
        "tokensUsed": 1261,
        "cost": 0.0005022500000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.7,
        "estimatedHours": 3,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 2.4,
        "reasoning": "The commit demonstrates good code quality through the addition of comprehensive documentation for a web interface.  The documentation is well-structured and clearly explains the features and functionality.  A developer level of 2.8 is assigned due to the clear understanding and implementation of a web server and user interface elements. The complexity is rated 2.7 because while the task involves multiple components (web server, UI, documentation), the implementation appears straightforward and well-organized. The estimated development time of 3 hours accounts for the substantial amount of documentation written. The AI percentage is lower than the original because the added content is primarily explanatory documentation and not directly generated code. The reduction in time with AI is less significant as AI is less helpful in generating this type of documentation. ",
        "responseTime": 2.204,
        "tokensUsed": 1086,
        "cost": 0.00014107499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.2,
        "reasoning": "The commit focuses on updating README.md with detailed documentation, which shows good attention to detail and clarity in communication, justifying a code quality score of 3.8. The developer level is assessed at 2.4, indicating mid-level expertise due to the structured and comprehensive nature of the documentation. Complexity is moderate at 2.7 as it involves organizing technical information but lacks intricate code changes. Estimated hours are set at 3.25 based on the volume of content added (119 lines). AI percentage is estimated at 30.5% due to the structured format and boilerplate-like sections that could be AI-assisted. With AI, the time is reduced to 2.2 hours due to potential templating or content generation assistance.",
        "responseTime": 3.293,
        "tokensUsed": 1156,
        "cost": 0.007980000000000001
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.65,
    "averageComplexity": 3.0249999999999995,
    "averageEstimatedHours": 2.875,
    "averageAiPercentage": 23.25,
    "averageEstimatedHoursWithAi": 2.3,
    "totalTokens": 4616,
    "totalCost": 0.009338825000000002,
    "avgCostPerModel": 0.0023347062500000005,
    "codeAnalysis": {
      "totalLines": 3485,
      "codeLines": 2903,
      "commentLines": 0,
      "textLines": 169,
      "blankLines": 281,
      "codePercent": "90.6",
      "commentPercent": "0.0",
      "textPercent": "5.3"
    }
  },
  {
    "commitHash": "514b871ec6a7ed94ca00fef4fb0f9efde1916454",
    "commitMessage": "Add comprehensive code comments and documentation",
    "timestamp": "2025-05-29T00:36:08.674Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 7,
    "linesAdded": 667,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The code quality is high due to comprehensive comments and documentation. The developer level is mid-level as shown by the structured approach. The complexity is moderate due to the use of multiple AI models. The estimated development time is higher due to the detailed analysis. The AI percentage is lower as significant manual work is evident. The estimated hours with AI are reduced but still substantial.",
        "responseTime": 3.535,
        "tokensUsed": 1099,
        "cost": 0.0006925
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.9,
        "estimatedHours": 15.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 11,
        "reasoning": "The comprehensive code comments and documentation indicate a high level of code quality and developer expertise. The complexity is moderate to high, requiring significant development time. However, the use of AI tools could reduce the overall development time by approximately 30%.",
        "responseTime": 1.388,
        "tokensUsed": 1270,
        "cost": 0.0004515
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3,
        "estimatedHours": 8.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 6,
        "reasoning": "The commit focuses heavily on adding comments and documentation, which significantly improves code quality (4.2).  The code itself appears to be moderately complex (3.0), suggesting a mid-to-senior level developer (2.8).  Estimating development time is challenging without knowing the initial state, but adding extensive documentation to 7 files suggests a significant time investment (8.5 hours).  While the commit includes new code, the majority of changes appear to be additions of comments and documentation, rather than new functionality, thus low AI percentage (10%). AI assistance would likely speed up the documentation process but not eliminate the need for manual code understanding, resulting in a still significant, but reduced time estimate (6 hours).",
        "responseTime": 2.103,
        "tokensUsed": 1058,
        "cost": 0.00013267499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 3.5,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit focuses on adding comprehensive comments and documentation, significantly improving readability and maintainability, hence a high code quality score. The developer level is mid-range due to the structured approach to documentation. Complexity is moderate to high given the integration of multiple AI models and token estimation logic. Estimated hours reflect the effort to write detailed comments across 7 files. AI percentage is moderate as the structure suggests some templated or generated comments. With AI assistance, time is reduced due to potential automation of comment generation.",
        "responseTime": 2.673,
        "tokensUsed": 1115,
        "cost": 0.007285
      }
    ],
    "averageCodeQuality": 4.2,
    "averageDevLevel": 2.6750000000000003,
    "averageComplexity": 3.5749999999999997,
    "averageEstimatedHours": 7.6875,
    "averageAiPercentage": 23.875,
    "averageEstimatedHoursWithAi": 5.3375,
    "totalTokens": 4542,
    "totalCost": 0.008561675,
    "avgCostPerModel": 0.00214041875,
    "codeAnalysis": {
      "totalLines": 3616,
      "codeLines": 2990,
      "commentLines": 0,
      "textLines": 169,
      "blankLines": 282,
      "codePercent": "89.7",
      "commentPercent": "0.0",
      "textPercent": "5.1"
    }
  },
  {
    "commitHash": "e338a26fe57fd8acab976d14a20f76d08d38bbca",
    "commitMessage": "Fix comment detection in code analyzer",
    "timestamp": "2025-05-29T01:17:32.669Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 104,
    "linesDeleted": 5,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The code quality is high as the commit fixes a specific issue effectively. The developer demonstrates a mid-level understanding by efficiently addressing the problem. The code complexity is moderate due to the changes made in the comment detection logic. Estimated development time is slightly higher due to the number of lines changed. AI likely played a minor role in this commit, reducing the estimated time with AI assistance.",
        "responseTime": 2.321,
        "tokensUsed": 1066,
        "cost": 0.000678
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.6,
        "estimatedHours": 3.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The commit fixes a critical issue in the code analyzer by improving the comment detection logic. The changes are well-structured and demonstrate a good understanding of the codebase. The developer appears to be experienced and capable of handling complex tasks. The code complexity is moderate, with the addition of new conditional checks and handling of multi-line comments. The estimated development time is reasonable for the scope of the changes. While AI assistance could have reduced the development time, the overall implementation seems to be primarily driven by the developer's own expertise.",
        "responseTime": 1.831,
        "tokensUsed": 1325,
        "cost": 0.0005232500000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.4,
        "reasoning": "The commit demonstrates a clear improvement in comment detection, addressing a specific bug.  The code is well-structured and uses clear variable names. The addition of handling JSDoc-style comment continuations is a positive addition.  However, some parts could be slightly more concise.  The developer seems to have a solid grasp of JavaScript and code analysis concepts, placing them in the mid-level range. The complexity is moderate due to the logic involved in parsing comments and handling different scenarios. I estimate around 3.5 hours for a mid-level developer without AI assistance.  I've estimated that 30% of the code may have been generated by an AI tool, primarily the more straightforward additions, with the core logic likely written manually. Using AI could reduce the development time to roughly 2.4 hours.",
        "responseTime": 2.325,
        "tokensUsed": 1072,
        "cost": 0.000137325
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit shows a good understanding of comment detection logic with thoughtful additions like JSDoc-style comment handling. Code quality is above average due to clear intent and structure, though minor inconsistencies (like variable naming 'comment' vs 'comments') slightly lower the score. Developer level suggests mid-level expertise with room for refinement. Complexity is moderate due to the logic around multi-line and single-line comment detection. Estimated hours reflect a focused task with some debugging time. AI percentage is moderate as the code shows personalized logic but follows common patterns that could be AI-assisted. With AI, time could be reduced by leveraging templates or suggestions.",
        "responseTime": 3.324,
        "tokensUsed": 1122,
        "cost": 0.007559999999999999
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.425,
    "averageComplexity": 3.45,
    "averageEstimatedHours": 3.375,
    "averageAiPercentage": 27.5,
    "averageEstimatedHoursWithAi": 2.2875,
    "totalTokens": 4585,
    "totalCost": 0.008898574999999999,
    "avgCostPerModel": 0.0022246437499999997,
    "codeAnalysis": {
      "totalLines": 3715,
      "codeLines": 3082,
      "commentLines": 176,
      "textLines": 169,
      "blankLines": 288,
      "codePercent": "89.9",
      "commentPercent": "5.1",
      "textPercent": "4.9"
    }
  },
  {
    "commitHash": "58c234ad333df917e020e52c4268da6ba4537d6f",
    "commitMessage": "Improve UI alignment and add search functionality to all tables",
    "timestamp": "2025-05-30T01:10:36.437Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 8,
    "linesAdded": 218,
    "linesDeleted": 22,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 8.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 5.95,
        "reasoning": "The commit shows a significant improvement in UI alignment and adds search functionality, indicating attention to detail and user experience. The code changes are well-structured and enhance the overall quality. The developer's level is mid-level due to the complexity of the changes made. The code complexity is moderate due to the addition of search functionality. The estimated development time is relatively high due to the number of files changed and lines added. AI likely contributed around 30% of the code changes, reducing the estimated hours with AI assistance.",
        "responseTime": 2.168,
        "tokensUsed": 1031,
        "cost": 0.0006875
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.7,
        "estimatedHours": 12.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 9,
        "reasoning": "The commit shows a well-structured and organized approach to improving the UI and adding search functionality across multiple tables. The changes are substantial, indicating a good level of development experience. The complexity is moderate, with the addition of search functionality and UI enhancements. The estimated development time is on the higher side, but the use of AI assistance could potentially reduce the time required by a significant margin.",
        "responseTime": 1.948,
        "tokensUsed": 1192,
        "cost": 0.000463
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 8.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 6.375,
        "reasoning": "The commit demonstrates a good understanding of UI/UX principles by improving alignment and adding a valuable search functionality.  The addition of search across multiple tables is a practical enhancement suggesting a mid-level understanding of front-end development and user needs.  The code quality is rated highly because the changes seem focused and well-integrated.  The complexity is moderate; adding search to existing tables is a fairly standard task, however, the higher line count suggests some intricate HTML/JavaScript manipulation. The estimated development time accounts for the number of files changed, the lines added and deleted, and the complexity of implementing consistent search across multiple tables. AI could have assisted in generating boilerplate search functionality (input fields, basic event handling), but most of the implementation (integrating with the existing tables and possibly handling data filtering) likely required manual coding.  The reduction in estimated time with AI assistance reflects the time saved with automated boilerplate code generation.",
        "responseTime": 2.614,
        "tokensUsed": 1144,
        "cost": 0.00015757499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 2.9,
        "estimatedHours": 5.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 3.75,
        "reasoning": "The commit focuses on UI improvements and adding search functionality, which shows attention to user experience (code quality: 3.8). The changes appear structured but not overly complex, suggesting a mid-level developer (dev_level: 2.1). The complexity is moderate due to multiple file changes and integration of search features across tables (complexity: 2.9). Estimated hours reflect the scope of 8 files and 218 lines added (5.25 hours). AI percentage is moderate as the HTML changes seem templated and could be partially generated (30.5%). With AI assistance, the repetitive UI tasks could reduce time significantly (3.75 hours).",
        "responseTime": 3.158,
        "tokensUsed": 1058,
        "cost": 0.00732
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.4499999999999997,
    "averageComplexity": 3.3000000000000003,
    "averageEstimatedHours": 8.6875,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 6.26875,
    "totalTokens": 4425,
    "totalCost": 0.008628075,
    "avgCostPerModel": 0.00215701875,
    "codeAnalysis": {
      "totalLines": 4177,
      "codeLines": 3448,
      "commentLines": 213,
      "textLines": 169,
      "blankLines": 347,
      "codePercent": "90.0",
      "commentPercent": "5.6",
      "textPercent": "4.4"
    }
  },
  {
    "commitHash": "1cb5945d6bca28ad4c5a753203e12b14d5cb281e",
    "commitMessage": "Add GitHub navigation buttons to projects and users tables",
    "timestamp": "2025-05-30T01:10:47.273Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 5,
    "linesAdded": 65,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 2.8,
        "estimatedHours": 3.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 3.15,
        "reasoning": "The code quality is high due to clear and well-structured additions. The developer level is average as the changes involve basic functionality. The complexity is moderate with the addition of GitHub navigation buttons. The estimated hours are higher due to multiple file changes. The AI percentage is low as the changes seem to be manually implemented. Estimated hours with AI would reduce development time significantly.",
        "responseTime": 1.298,
        "tokensUsed": 1052,
        "cost": 0.000669
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.1,
        "estimatedHours": 4.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 3.5,
        "reasoning": "The commit adds GitHub navigation buttons to the projects and users tables, which is a useful feature that improves the user experience. The code quality is good, with clear and well-structured functions. The developer level is mid-to-senior, as the code demonstrates a good understanding of JavaScript and web development best practices. The complexity is moderate, as the changes involve adding new functionality to existing code. The estimated development time is around 4.5 hours, and the AI code percentage is relatively low at 20%, indicating that the developer did most of the work manually. With AI assistance, the estimated development time could be reduced to 3.5 hours.",
        "responseTime": 2.244,
        "tokensUsed": 1334,
        "cost": 0.0005545000000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.7,
        "estimatedHours": 3.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 2.625,
        "reasoning": "The code demonstrates good readability and maintainability.  The addition of the GitHub link functionality is well-implemented, with appropriate error handling for cases where a project name is missing or unknown. The helper functions are concise and effectively encapsulate logic. The developer's understanding of incorporating dynamic elements into HTML and using JavaScript's DOM manipulation is evident.  The complexity is moderate, primarily due to the interaction between JavaScript and HTML. The use of localStorage, however, introduces a minor point of complexity, and the GitHub username hardcoded introduces a minor risk and potential issue. While AI could potentially assist with the basic creation of the link, the implementation requires solid understanding of DOM manipulation, error handling, and efficient use of JavaScript. The AI likely helped in writing parts of the functions, but the structure and integration are primarily human-driven.",
        "responseTime": 2.215,
        "tokensUsed": 1109,
        "cost": 0.00014752499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The code quality is good with clear additions for GitHub navigation buttons, though it lacks error handling for edge cases in the repo URL generation. Developer level seems mid-range due to straightforward logic with some customization like dynamic username retrieval. Complexity is moderate-low as the changes involve basic DOM manipulation and string templating. Estimated hours reflect a small but focused feature addition. AI percentage is moderate as the structure looks somewhat templated, possibly from snippets or tools. With AI, development time could be reduced due to faster boilerplate generation.",
        "responseTime": 2.813,
        "tokensUsed": 1089,
        "cost": 0.007185
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.45,
    "averageComplexity": 2.825,
    "averageEstimatedHours": 3.6875,
    "averageAiPercentage": 21.375,
    "averageEstimatedHoursWithAi": 2.84375,
    "totalTokens": 4584,
    "totalCost": 0.008556025,
    "avgCostPerModel": 0.00213900625,
    "codeAnalysis": {
      "totalLines": 4264,
      "codeLines": 3535,
      "commentLines": 213,
      "textLines": 169,
      "blankLines": 347,
      "codePercent": "90.2",
      "commentPercent": "5.4",
      "textPercent": "4.3"
    }
  },
  {
    "commitHash": "670ec7aee050ae1db2b608a84ab25620570c4e92",
    "commitMessage": "Add organization analytics page and upgrade to latest AI models",
    "timestamp": "2025-05-30T01:35:29.431Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 10,
    "linesAdded": 625,
    "linesDeleted": 21,
    "modelScores": [
      {
        "modelName": "OpenAI o3",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 403 Project `proj_zUo2eqKEklqkdo1UZLJjKaqn` does not have access to model `o3`",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.6,
        "estimatedHours": 8.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 6,
        "reasoning": "High-quality commit with systematic upgrades to latest AI models and comprehensive documentation updates. The developer demonstrates senior-level understanding of API integrations and pricing structures. Moderate-to-complex work involving multiple model configurations, pricing calculations, and maintaining backward compatibility. The structured approach and attention to detail in documentation suggests experienced development with some AI assistance for research and configuration details.",
        "responseTime": 5.689,
        "tokensUsed": 1432,
        "cost": 0
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [429 Too Many Requests] Gemini 2.5 Pro Preview doesn't have a free quota tier. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerDay-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro-exp\",\"location\":\"global\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerMinute-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro-exp\",\"location\":\"global\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerDayPerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"35s\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 15.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 10.25,
        "reasoning": "The commit shows a significant update to AI models and documentation, indicating good code quality with attention to detail in README and code comments. Developer level is mid-range due to the scope of changes and familiarity with updating model integrations. Complexity is moderate-high given the integration of multiple AI models and pricing updates. Estimated hours reflect the effort for updating 10 files with 625 lines added. AI percentage is moderate as some updates might be templated or tool-assisted. With AI, development time could be reduced due to automation of repetitive updates.",
        "responseTime": 2.825,
        "tokensUsed": 1246,
        "cost": 0.007980000000000001
      }
    ],
    "averageCodeQuality": 2.1,
    "averageDevLevel": 1.275,
    "averageComplexity": 1.8,
    "averageEstimatedHours": 6,
    "averageAiPercentage": 13.75,
    "averageEstimatedHoursWithAi": 4.0625,
    "totalTokens": 2678,
    "totalCost": 0.007980000000000001,
    "avgCostPerModel": 0.0019950000000000002,
    "codeAnalysis": {
      "totalLines": 4548,
      "codeLines": 3778,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "90.5",
      "commentPercent": "5.4",
      "textPercent": "4.0"
    }
  },
  {
    "commitHash": "3d406e3251bdbe009861530b9aa560c341c70465",
    "commitMessage": "Configure latest AI models with updated API keys",
    "timestamp": "2025-05-30T01:49:34.472Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 90,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "OpenAI o3",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.1,
        "estimatedHours": 0.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "High quality commit that properly updates model keys to match actual API calls, showing good attention to detail and consistency. The changes are simple string replacements but require understanding of the codebase structure. Senior-level work evidenced by systematic approach to updating all model references consistently. Low AI involvement as this requires domain knowledge of specific model names and API versions.",
        "responseTime": 5.433,
        "tokensUsed": 1312,
        "cost": 0.00588
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.9,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit updates AI model configurations and API keys, indicating a practical understanding of the codebase. Code quality is good with clear, focused changes, though not exceptional due to lack of extensive refactoring or optimization. Developer level suggests mid-level expertise given the familiarity with multiple AI model integrations. Complexity is moderate as it involves straightforward updates to model keys and versions. Estimated hours reflect a reasonable time for research and implementation of these changes. AI percentage is moderate as the structure suggests some templating or tool assistance, but core logic appears manually crafted.",
        "responseTime": 2.927,
        "tokensUsed": 1120,
        "cost": 0.007350000000000001
      }
    ],
    "averageCodeQuality": 2,
    "averageDevLevel": 1.2999999999999998,
    "averageComplexity": 1.25,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.65,
    "totalTokens": 2432,
    "totalCost": 0.01323,
    "avgCostPerModel": 0.0033075,
    "codeAnalysis": {
      "totalLines": 4635,
      "codeLines": 3865,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "90.7",
      "commentPercent": "5.3",
      "textPercent": "4.0"
    }
  },
  {
    "commitHash": "94a094163b137e77a659faf998896ce800d18846",
    "commitMessage": "Implement OpenAI o3 support with new /v1/responses API",
    "timestamp": "2025-05-30T01:52:16.139Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 138,
    "linesDeleted": 8,
    "modelScores": [
      {
        "modelName": "OpenAI o3",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: o3 API error: 401 - {\n  \"error\": {\n    \"message\": \"Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"invalid_api_key\"\n  }\n}",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 3.6,
        "estimatedHours": 4.5,
        "aiPercentage": 75,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "Code implements new API integration with proper error handling and structured request format. However, it lacks comprehensive error handling patterns, input validation, and the diff appears truncated. The highly specific API structure and detailed parameter configuration suggests significant AI assistance. Mid-level developer work with moderate complexity due to API integration requirements.",
        "responseTime": 4.555,
        "tokensUsed": 1222,
        "cost": 0.00543
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [429 Too Many Requests] Gemini 2.5 Pro Preview doesn't have a free quota tier. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerMinute-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro-exp\",\"location\":\"global\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerDayPerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerDay-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"48s\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The code quality is rated at 3.8 due to clear implementation of the new OpenAI o3 API with proper error handling and structured request formatting. The developer level is assessed at 2.4, indicating mid-level expertise, as the commit shows familiarity with API integration and custom configurations. Complexity is scored at 3.6 because of the moderate intricacy in handling a new API endpoint and data structure. Estimated hours are set at 3.25 based on the significant lines added (138) and the need to research/test the new API. AI percentage is estimated at 30.5% due to potential use of AI for boilerplate or API request structure. With AI assistance, the time is reduced to 2.10 hours as it could streamline formatting and error handling.",
        "responseTime": 3.177,
        "tokensUsed": 1125,
        "cost": 0.007905
      }
    ],
    "averageCodeQuality": 1.75,
    "averageDevLevel": 1.125,
    "averageComplexity": 1.8,
    "averageEstimatedHours": 1.9375,
    "averageAiPercentage": 26.375,
    "averageEstimatedHoursWithAi": 1.0875,
    "totalTokens": 2347,
    "totalCost": 0.013335,
    "avgCostPerModel": 0.00333375,
    "codeAnalysis": {
      "totalLines": 4765,
      "codeLines": 3988,
      "commentLines": 230,
      "textLines": 169,
      "blankLines": 378,
      "codePercent": "90.9",
      "commentPercent": "5.2",
      "textPercent": "3.9"
    }
  },
  {
    "commitHash": "c01b049282398fcc387e8cd1714ac36e6150cb5d",
    "commitMessage": "Switch from o3 to o1-pro model",
    "timestamp": "2025-05-30T01:56:12.001Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 104,
    "linesDeleted": 60,
    "modelScores": [
      {
        "modelName": "OpenAI o1-pro",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 0.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "This is a straightforward model configuration update with consistent string replacements across documentation and code. The changes are well-organized and maintain code structure integrity. The systematic nature of updates (README, comments, pricing config) suggests methodical mid-level developer work with minimal complexity. Low AI involvement as this appears to be manual configuration changes rather than generated code.",
        "responseTime": 5.126,
        "tokensUsed": 1410,
        "cost": 0.006174000000000001
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit involves a straightforward model name update from o3 to o1-pro across multiple files, indicating a simple but purposeful change. Code quality is average with no significant improvements or issues introduced. Developer level is mid-range due to the routine nature of the update. Complexity is moderate-low as it involves basic string replacements and configuration updates. Estimated hours reflect a short but manual task across files. AI percentage is moderate as the changes could partially be automated or templated. With AI, the task could be faster via automated find-replace tools.",
        "responseTime": 3.126,
        "tokensUsed": 1215,
        "cost": 0.007845
      }
    ],
    "averageCodeQuality": 1.85,
    "averageDevLevel": 1.125,
    "averageComplexity": 1.225,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.65,
    "totalTokens": 2625,
    "totalCost": 0.014019,
    "avgCostPerModel": 0.00350475,
    "codeAnalysis": {
      "totalLines": 4809,
      "codeLines": 4039,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.1",
      "commentPercent": "5.1",
      "textPercent": "3.8"
    }
  },
  {
    "commitHash": "c01b049282398fcc387e8cd1714ac36e6150cb5d",
    "commitMessage": "Switch from o3 to o1-pro model",
    "timestamp": "2025-05-30T02:00:44.999Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 104,
    "linesDeleted": 60,
    "modelScores": [
      {
        "modelName": "OpenAI o1-pro",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.25,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "This is a straightforward model configuration update with consistent changes across documentation and code. The developer demonstrates good practices by updating all references systematically, including pricing configurations and comments. The change is simple but executed thoroughly, suggesting mid-level experience with attention to detail. Low AI involvement as this appears to be manual find-and-replace work with domain knowledge.",
        "responseTime": 5.509,
        "tokensUsed": 1405,
        "cost": 0.006099
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit involves a straightforward model name update from 'o3' to 'o1-pro' across multiple files, indicating a simple refactoring task. Code quality is average due to the lack of complexity in changes, though documentation is updated consistently. Developer level is mid-range as the task requires basic understanding of codebase structure. Complexity is slightly below moderate given the repetitive nature of updates. Estimated hours reflect a short task for manual updates across files. AI percentage is moderate as the changes could partially be automated or templated. With AI assistance, time could be reduced by automating find-and-replace operations.",
        "responseTime": 3.655,
        "tokensUsed": 1226,
        "cost": 0.00801
      }
    ],
    "averageCodeQuality": 1.85,
    "averageDevLevel": 1.125,
    "averageComplexity": 1.225,
    "averageEstimatedHours": 1.125,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.6875,
    "totalTokens": 2631,
    "totalCost": 0.014109,
    "avgCostPerModel": 0.00352725,
    "codeAnalysis": {
      "totalLines": 4896,
      "codeLines": 4126,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.2",
      "commentPercent": "5.0",
      "textPercent": "3.7"
    }
  },
  {
    "commitHash": "c01b049282398fcc387e8cd1714ac36e6150cb5d",
    "commitMessage": "Switch from o3 to o1-pro model",
    "timestamp": "2025-05-30T02:01:28.366Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 104,
    "linesDeleted": 60,
    "modelScores": [
      {
        "modelName": "OpenAI o1-pro",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.25,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "This is a straightforward model configuration update with consistent changes across documentation and code. The developer demonstrates good practices by updating all references systematically, including pricing configurations and comments. The change is simple but executed thoroughly, suggesting mid-level experience with attention to detail. Low AI involvement as this appears to be manual find-and-replace work with domain knowledge of the pricing structure.",
        "responseTime": 6.023,
        "tokensUsed": 1409,
        "cost": 0.006159
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit involves a straightforward model name update from 'o3' to 'o1-pro' across multiple files, indicating a simple refactoring task. Code quality is average due to the lack of complexity in changes, though documentation updates are clear. Developer level is mid-range as the task requires basic understanding of codebase structure. Complexity is slightly below moderate since it's a find-and-replace operation with minimal logic. Estimated hours reflect a short but manual update process across files. AI percentage is moderate as the repetitive nature of changes could be partially automated. With AI, the task could be faster via automated refactoring tools.",
        "responseTime": 3.473,
        "tokensUsed": 1228,
        "cost": 0.00804
      }
    ],
    "averageCodeQuality": 1.85,
    "averageDevLevel": 1.125,
    "averageComplexity": 1.225,
    "averageEstimatedHours": 1.125,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.6875,
    "totalTokens": 2637,
    "totalCost": 0.014199,
    "avgCostPerModel": 0.00354975,
    "codeAnalysis": {
      "totalLines": 4983,
      "codeLines": 4213,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.4",
      "commentPercent": "4.9",
      "textPercent": "3.7"
    }
  },
  {
    "commitHash": "41089543b4894cb9cf63ed9cff7711d0b2af1e6a",
    "commitMessage": "Update to more accessible AI models - GPT-4 and Gemini 2.5 Flash",
    "timestamp": "2025-05-30T02:05:20.594Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 277,
    "linesDeleted": 16,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.25,
        "aiPercentage": 15.2,
        "estimatedHoursWithAi": 1,
        "reasoning": "This is a straightforward configuration update replacing premium AI models (o1-pro, Gemini Pro) with more accessible alternatives (GPT-4, Gemini Flash). The changes are systematic across documentation and code, showing good consistency. The work involves updating model names, pricing information, and maintaining code structure. While simple in nature, it demonstrates solid understanding of the codebase and attention to detail in keeping all references synchronized.",
        "responseTime": 5.638,
        "tokensUsed": 1452,
        "cost": 0.006516
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 1.8,
        "reasoning": "The commit updates AI model references and pricing in a clear, consistent manner across multiple files, indicating good code quality. The developer shows mid-level proficiency with attention to detail in documentation and code updates. Complexity is moderate-low as the changes are mostly textual replacements. Estimated time reflects the effort to research and update model details. AI percentage is moderate due to the structured nature of updates, suggesting possible use of templates or tools. AI assistance would likely halve the research and update time.",
        "responseTime": 2.792,
        "tokensUsed": 1231,
        "cost": 0.007795
      }
    ],
    "averageCodeQuality": 1.9,
    "averageDevLevel": 1.2,
    "averageComplexity": 1.2000000000000002,
    "averageEstimatedHours": 1.125,
    "averageAiPercentage": 11.425,
    "averageEstimatedHoursWithAi": 0.7,
    "totalTokens": 2683,
    "totalCost": 0.014311,
    "avgCostPerModel": 0.00357775,
    "codeAnalysis": {
      "totalLines": 5070,
      "codeLines": 4300,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.6",
      "commentPercent": "4.8",
      "textPercent": "3.6"
    }
  },
  {
    "commitHash": "41089543b4894cb9cf63ed9cff7711d0b2af1e6a",
    "commitMessage": "Update to more accessible AI models - GPT-4 and Gemini 2.5 Flash",
    "timestamp": "2025-05-30T02:07:14.306Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 277,
    "linesDeleted": 16,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.25,
        "aiPercentage": 15.2,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "This is a straightforward configuration update replacing premium AI models (o1-pro, Gemini Pro) with more accessible alternatives (GPT-4, Gemini Flash). The changes are systematic across documentation and code, showing good consistency. Low complexity as it's primarily text substitution and pricing updates. The methodical approach and comprehensive documentation updates suggest mid-level developer experience. Minimal AI assistance likely needed for such straightforward refactoring.",
        "responseTime": 5.998,
        "tokensUsed": 1455,
        "cost": 0.006561000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit updates model references and pricing in a clear, consistent manner across multiple files, indicating good code quality. The developer shows mid-level proficiency with attention to detail in documentation and code updates. Complexity is moderate-low as the changes are mostly textual replacements and minor data updates. Estimated time reflects a few hours of work for research and implementation. AI percentage is moderate due to the structured nature of updates, suggesting possible use of templates or tools. With AI assistance, time could be reduced by automating model and pricing data updates.",
        "responseTime": 2.905,
        "tokensUsed": 1240,
        "cost": 0.00793
      }
    ],
    "averageCodeQuality": 1.9,
    "averageDevLevel": 1.15,
    "averageComplexity": 1.2000000000000002,
    "averageEstimatedHours": 1.125,
    "averageAiPercentage": 11.425,
    "averageEstimatedHoursWithAi": 0.7125,
    "totalTokens": 2695,
    "totalCost": 0.014491,
    "avgCostPerModel": 0.00362275,
    "codeAnalysis": {
      "totalLines": 5157,
      "codeLines": 4387,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.7",
      "commentPercent": "4.7",
      "textPercent": "3.5"
    }
  },
  {
    "commitHash": "41089543b4894cb9cf63ed9cff7711d0b2af1e6a",
    "commitMessage": "Update to more accessible AI models - GPT-4 and Gemini 2.5 Flash",
    "timestamp": "2025-05-30T02:10:52.937Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 277,
    "linesDeleted": 16,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 2.1,
        "estimatedHours": 1.5,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit is well-structured and clear, indicating a good code quality and a senior level developer. The changes are not complex, mostly updating the AI models used in the tool. No evidence of AI-generated code is present. The estimated development time is relatively short due to the straightforward nature of the changes, and it's unlikely that AI assistance would have significantly reduced the development time.",
        "responseTime": 5.938,
        "tokensUsed": 1227,
        "cost": 0.04113000000000001
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.25,
        "aiPercentage": 15.2,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "This is a straightforward configuration update replacing premium AI models (o1-pro, Gemini Pro) with more accessible alternatives (GPT-4, Gemini Flash). The changes are systematic across documentation and code, showing good consistency. Low complexity as it's primarily string replacements and pricing updates. The methodical nature and consistent documentation updates suggest mid-level developer work with minimal AI assistance needed for such routine configuration changes.",
        "responseTime": 5.848,
        "tokensUsed": 1451,
        "cost": 0.006501
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.6,
        "complexity": 3.8,
        "estimatedHours": 8.5,
        "aiPercentage": 48,
        "estimatedHoursWithAi": 4,
        "reasoning": "The commit introduces a significant refactor to support multiple AI models simultaneously. This involves implementing asynchronous calls, error handling for each model, parsing and aggregating structured results, and updating the test suite to match the new output format. This increases the code complexity from a simple single API call script to a more robust multi-source data processing architecture. The code demonstrates good handling of asynchronous operations and structured data, indicative of a mid-level to senior developer. A minor potential typo in a model key name slightly reduces the code quality score. AI likely assisted in generating boilerplate code, API call wrappers, or test structure updates, reducing the overall development time compared to manual implementation.",
        "responseTime": 14.39,
        "tokensUsed": 1068,
        "cost": 0.00013477499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit updates AI model references and pricing in a clear, consistent manner across multiple files, indicating good code quality. The developer shows mid-level proficiency with attention to detail in documentation and code updates. Complexity is moderate due to straightforward changes with no deep technical challenges. Estimated time reflects the scope of changes across files. AI percentage is moderate as the updates seem structured but not overly automated. AI assistance could reduce time by automating repetitive text replacements.",
        "responseTime": 2.628,
        "tokensUsed": 1224,
        "cost": 0.007690000000000001
      }
    ],
    "averageCodeQuality": 3.875,
    "averageDevLevel": 2.4749999999999996,
    "averageComplexity": 2.675,
    "averageEstimatedHours": 3.625,
    "averageAiPercentage": 23.425,
    "averageEstimatedHoursWithAi": 2.0875,
    "totalTokens": 4970,
    "totalCost": 0.055455775000000006,
    "avgCostPerModel": 0.013863943750000001,
    "codeAnalysis": {
      "totalLines": 5244,
      "codeLines": 4474,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.9",
      "commentPercent": "4.7",
      "textPercent": "3.5"
    }
  },
  {
    "commitHash": "6fadaece054f64d48a1529ad95aec72e53446892",
    "commitMessage": "Switch OpenAI model from GPT-4 to o3-mini for enhanced reasoning",
    "timestamp": "2025-05-30T02:15:39.849Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 2,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 400 Unsupported parameter: 'max_tokens' is not supported with this model. Use 'max_completion_tokens' instead.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 1,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Simple model configuration change with consistent updates across two locations. Good practice maintaining consistency between model parameter and modelKey variable. Low complexity as it's just string replacement, but shows understanding of codebase structure. The commit message indicates awareness of model capabilities (enhanced reasoning), suggesting mid-level developer knowledge of AI models.",
        "responseTime": 5.212,
        "tokensUsed": 944,
        "cost": 0.004620000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4,
        "devLevel": 1.8,
        "complexity": 1,
        "estimatedHours": 0.25,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "This commit involves changing two string literals in an existing file. The change itself is functionally correct within the context of switching a model name. The surrounding code snippet appears reasonably structured for making an API call. Code quality for this specific change is high as it correctly implements the intended modification without introducing issues. The complexity is minimal as it's just a simple text replacement. The estimated development time and time with AI are very low due to the trivial nature of the change. The AI percentage is 0 as this specific, simple change is highly likely a manual edit rather than AI-generated code.",
        "responseTime": 11.356,
        "tokensUsed": 775,
        "cost": 0.00010514999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 0.75,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit involves a straightforward model switch from GPT-4 to o3-mini with minimal changes (2 lines added, 2 deleted). Code quality is average due to the simplicity of the update, lacking deeper refactoring or optimization. Developer level is assessed as mid-level, as the change doesn't demonstrate advanced skills or complex problem-solving. Complexity is very low since it's a direct replacement of strings. Estimated hours are minimal due to the simplicity, and AI percentage is moderate as the change could partially be guided by AI suggestions or documentation. With AI, the task would be even quicker.",
        "responseTime": 3.083,
        "tokensUsed": 849,
        "cost": 0.006085
      }
    ],
    "averageCodeQuality": 2.8499999999999996,
    "averageDevLevel": 1.425,
    "averageComplexity": 1.075,
    "averageEstimatedHours": 0.5,
    "averageAiPercentage": 11.25,
    "averageEstimatedHoursWithAi": 0.1875,
    "totalTokens": 2568,
    "totalCost": 0.010810150000000001,
    "avgCostPerModel": 0.0027025375000000003,
    "codeAnalysis": {
      "totalLines": 5331,
      "codeLines": 4561,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "92.0",
      "commentPercent": "4.6",
      "textPercent": "3.4"
    }
  },
  {
    "commitHash": "6fadaece054f64d48a1529ad95aec72e53446892",
    "commitMessage": "Switch OpenAI model from GPT-4 to o3-mini for enhanced reasoning",
    "timestamp": "2025-05-30T02:17:35.506Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 2,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 400 Unsupported parameter: 'temperature' is not supported with this model.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 1,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Simple model configuration change with consistent updates across two locations. Good practice maintaining consistency between model parameter and modelKey variable. Low complexity as it's a straightforward string replacement. The commit message clearly describes the change and reasoning. Minimal AI involvement likely - this appears to be a deliberate human decision to switch models for better reasoning capabilities.",
        "responseTime": 5.725,
        "tokensUsed": 948,
        "cost": 0.00468
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.6,
        "devLevel": 2.1,
        "complexity": 1.1,
        "estimatedHours": 0.2,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "The commit is a simple substitution of a string literal ('gpt-4' to 'o3-mini') in two places. The complexity of this change is very low, requiring minimal time. While the task itself is junior-level in execution, the context of switching models for 'enhanced reasoning' might suggest a technical decision made by a mid-level developer or higher. The code change is functionally correct within its scope. AI assistance would not significantly impact the development time for such a trivial edit, and the specific string change is unlikely to be AI-generated.",
        "responseTime": 13.673,
        "tokensUsed": 751,
        "cost": 0.00009795
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 1.9,
        "estimatedHours": 0.75,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit involves a straightforward model switch from GPT-4 to o3-mini, indicating a focused and minimal change with no structural or logical complexity. Code quality is rated good due to the clarity of intent and simplicity of the update. Developer level is assessed as mid-level, as the change requires basic familiarity with API configurations but no advanced problem-solving. Complexity is low since it's a direct replacement of strings. Estimated time is minimal due to the small scope, and AI percentage is moderate as the change could partially stem from templated or automated suggestions. With AI assistance, the time would be further reduced due to quick lookup or generation of the model name.",
        "responseTime": 3.541,
        "tokensUsed": 864,
        "cost": 0.00631
      }
    ],
    "averageCodeQuality": 2.9000000000000004,
    "averageDevLevel": 1.5750000000000002,
    "averageComplexity": 1.2000000000000002,
    "averageEstimatedHours": 0.4875,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.2,
    "totalTokens": 2563,
    "totalCost": 0.01108795,
    "avgCostPerModel": 0.0027719875,
    "codeAnalysis": {
      "totalLines": 5418,
      "codeLines": 4648,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "92.1",
      "commentPercent": "4.5",
      "textPercent": "3.4"
    }
  },
  {
    "commitHash": "6fadaece054f64d48a1529ad95aec72e53446892",
    "commitMessage": "Switch OpenAI model from GPT-4 to o3-mini for enhanced reasoning",
    "timestamp": "2025-05-30T02:18:03.916Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 2,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3,
        "devLevel": 2,
        "complexity": 3,
        "estimatedHours": 1,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1,
        "reasoning": "JSON parsing error: Unexpected end of JSON input",
        "responseTime": 7.812,
        "tokensUsed": 1175,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 1,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Simple model configuration change with consistent updates across both model reference and key assignment. Clean, straightforward modification that maintains code consistency. The commit message clearly describes the reasoning (enhanced reasoning capabilities). Low complexity as it's just a parameter change, but demonstrates understanding of the codebase structure. Minimal AI involvement likely - this appears to be a deliberate human decision based on model capabilities rather than AI-generated code.",
        "responseTime": 5.906,
        "tokensUsed": 964,
        "cost": 0.00492
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 2.3,
        "estimatedHours": 0.3,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.2,
        "reasoning": "The commit is a simple string replacement to switch an API model. The change itself is functionally correct and maintains code structure, resulting in high code quality for the modification. The surrounding code complexity is standard API interaction. The developer level is estimated as mid-level, as the change is simple but requires understanding the codebase structure to locate the configuration. Estimated time is very low due to the trivial nature of the edit. AI code percentage is low as the change is just swapping string literals, unlikely to be directly generated, although AI could have assisted in research or locating the code. Estimated hours with AI are only slightly reduced as the manual time is already minimal.",
        "responseTime": 10.446,
        "tokensUsed": 795,
        "cost": 0.00011114999999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 1.9,
        "estimatedHours": 0.75,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit involves a straightforward model switch from GPT-4 to o3-mini, indicating a focused and minimal change with no structural or logical complexity. Code quality is good due to the clarity of the change, but it's a simple update. Developer level is mid-range as it shows familiarity with API usage but doesn't demonstrate advanced problem-solving. Complexity is low since it's a direct replacement of strings. Estimated time is minimal due to the simplicity, and AI percentage is moderate as the change could partially be guided by AI suggestions or documentation tools.",
        "responseTime": 2.839,
        "tokensUsed": 840,
        "cost": 0.00595
      }
    ],
    "averageCodeQuality": 3.8,
    "averageDevLevel": 2.0749999999999997,
    "averageComplexity": 2.25,
    "averageEstimatedHours": 0.7625,
    "averageAiPercentage": 13.875,
    "averageEstimatedHoursWithAi": 0.46249999999999997,
    "totalTokens": 3774,
    "totalCost": 0.01098115,
    "avgCostPerModel": 0.0027452875,
    "codeAnalysis": {
      "totalLines": 5504,
      "codeLines": 4734,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "92.3",
      "commentPercent": "4.4",
      "textPercent": "3.3"
    }
  },
  {
    "commitHash": "806161572dba4b907a6b1fecb55c09d7e21f4b4b",
    "commitMessage": "Enable real-time AI model testing with live API status updates",
    "timestamp": "2025-05-30T02:33:46.327Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 104,
    "linesDeleted": 40,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3,
        "devLevel": 2,
        "complexity": 3,
        "estimatedHours": 1,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1,
        "reasoning": "JSON parsing error: Unexpected end of JSON input",
        "responseTime": 4.98,
        "tokensUsed": 1348,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code shows good architectural improvement by replacing mock data with real API calls, but has incomplete implementation (truncated diff shows syntax error with 'result.statu'). The refactoring from simulation to actual API integration demonstrates solid understanding of async patterns and error handling. However, the incomplete nature and some structural issues suggest mid-level developer work, possibly with AI assistance given the clean but somewhat generic patterns.",
        "responseTime": 5.823,
        "tokensUsed": 1166,
        "cost": 0.005466
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.2,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit replaces simulated API calls with actual fetch requests, demonstrating use of modern async/await patterns. However, the presence of a clear typo ('statu' instead of 'status') and a nonsensical comment ('# Truncate for API limits') significantly reduces code quality and suggests a lack of careful review. The implementation doesn't fully deliver 'real-time' per-model updates as suggested by the title, instead processing results in a batch. This indicates a mid-level developer capable of implementing features but possibly lacking attention to detail. The complexity is moderate due to handling asynchronous network requests and data transformation. The task involves standard patterns highly generatable by AI tools, suggesting partial AI assistance, but the errors point to human modification or integration. AI assistance would likely reduce the coding time significantly.",
        "responseTime": 12.667,
        "tokensUsed": 1093,
        "cost": 0.00014227499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "The code quality is rated at 3.8 due to the clear transition from simulated testing to real API integration, showing good practice in replacing mock data with actual functionality. The developer level is assessed at 2.2, indicating a mid-level skill set, as the commit demonstrates competence in handling API calls but lacks advanced error handling or optimization. Complexity is moderate at 3.2, given the straightforward API integration with basic error handling. Estimated hours are 3.25 for manual implementation of the changes. AI percentage is estimated at 30.5% due to the structured and somewhat formulaic approach to the fetch request setup, which could be AI-assisted. With AI, the development time could drop to 2.0 hours due to faster boilerplate generation.",
        "responseTime": 3.334,
        "tokensUsed": 1065,
        "cost": 0.0075650000000000005
      }
    ],
    "averageCodeQuality": 3.3,
    "averageDevLevel": 2.15,
    "averageComplexity": 3.0999999999999996,
    "averageEstimatedHours": 2.5625,
    "averageAiPercentage": 35.25,
    "averageEstimatedHoursWithAi": 1.3125,
    "totalTokens": 4672,
    "totalCost": 0.013173275000000002,
    "avgCostPerModel": 0.0032933187500000004,
    "codeAnalysis": {
      "totalLines": 6059,
      "codeLines": 5223,
      "commentLines": 246,
      "textLines": 169,
      "blankLines": 421,
      "codePercent": "92.6",
      "commentPercent": "4.4",
      "textPercent": "3.0"
    }
  },
  {
    "commitHash": "806161572dba4b907a6b1fecb55c09d7e21f4b4b",
    "commitMessage": "Enable real-time AI model testing with live API status updates",
    "timestamp": "2025-05-30T02:40:38.300Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 104,
    "linesDeleted": 40,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3,
        "devLevel": 2,
        "complexity": 3,
        "estimatedHours": 1,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1,
        "reasoning": "JSON parsing error: Unexpected end of JSON input",
        "responseTime": 6.731,
        "tokensUsed": 1487,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.5,
        "devLevel": 1.8,
        "complexity": 2.8,
        "estimatedHours": 3.5,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Code has a clear syntax error - truncated line 'status: result.statu' indicates incomplete implementation. The refactoring from mock data to real API calls is straightforward but shows incomplete error handling and testing. Pattern suggests AI assistance with human oversight that missed the truncation error.",
        "responseTime": 5.141,
        "tokensUsed": 1289,
        "cost": 0.005643
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit replaces simulated model testing with a real API call using fetch and async/await, incorporating basic error handling with try/catch. This pattern is typical for frontend interactions with APIs. Code quality is good structurally but penalized for the incomplete data mapping line (`result.statu`) visible in the provided diff snippet, which would cause an error. The logic complexity is moderate, involving asynchronous operations and data transformation. The code structure is common boilerplate for API calls, suggesting potential AI assistance.",
        "responseTime": 14.022,
        "tokensUsed": 1127,
        "cost": 0.000126375
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality impacted by incomplete diff (cut off mid-line) and potential typo in 'statu' instead of 'status'. Structure shows decent error handling with try-catch and API integration. Developer level suggests mid-level due to practical API fetch implementation but lacks advanced patterns. Complexity is moderate with 2 files changed and real-time API integration. Estimated time reflects moderate effort for API setup and testing logic. AI percentage is moderate due to standard fetch patterns that could be AI-assisted.",
        "responseTime": 6.108,
        "tokensUsed": 1137,
        "cost": 0.007325
      }
    ],
    "averageCodeQuality": 3.0999999999999996,
    "averageDevLevel": 2.05,
    "averageComplexity": 3,
    "averageEstimatedHours": 2.5625,
    "averageAiPercentage": 36.375,
    "averageEstimatedHoursWithAi": 1.4375,
    "totalTokens": 5040,
    "totalCost": 0.013094374999999998,
    "avgCostPerModel": 0.0032735937499999996,
    "codeAnalysis": {
      "totalLines": 6165,
      "codeLines": 5323,
      "commentLines": 246,
      "textLines": 169,
      "blankLines": 427,
      "codePercent": "92.8",
      "commentPercent": "4.3",
      "textPercent": "2.9"
    }
  },
  {
    "commitHash": "bec80275b483e36ff7e4608548febc1c1d857f62",
    "commitMessage": "Improve AI model scoring consistency and fix status display",
    "timestamp": "2025-05-30T02:42:19.591Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 37,
    "linesDeleted": 18,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3,
        "devLevel": 2,
        "complexity": 3,
        "estimatedHours": 1,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1,
        "reasoning": "JSON parsing error: Unexpected end of JSON input",
        "responseTime": 6.29,
        "tokensUsed": 1695,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Well-structured improvement to AI prompt engineering. Clean code with clear documentation structure, detailed scoring criteria, and proper JSON formatting. Shows mid-level understanding of prompt optimization and system design. Moderate complexity due to comprehensive criteria definition and structured approach.",
        "responseTime": 11.035,
        "tokensUsed": 1716,
        "cost": 0.009863999999999998
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.3,
        "complexity": 1.5,
        "estimatedHours": 0.75,
        "aiPercentage": 70,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "Updates AI prompt with detailed, objective scoring criteria, improving clarity. Simple code change to a string literal.",
        "responseTime": 10.909,
        "tokensUsed": 1016,
        "cost": 0.00009329999999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit improves AI model scoring by introducing objective criteria, which shows attention to consistency and clarity. Code quality is good with no apparent syntax errors or typos, though the changes are mostly textual updates to prompts rather than complex logic. Developer level reflects mid-level skills due to clear structure and purposeful modifications. Complexity is moderate as it involves updating logic in a single file with straightforward changes. Estimated time accounts for understanding the context and implementing these updates. AI percentage is moderate as the changes show human-driven intent with possible AI assistance in formatting or phrasing.",
        "responseTime": 3.549,
        "tokensUsed": 1359,
        "cost": 0.008565
      }
    ],
    "averageCodeQuality": 3.875,
    "averageDevLevel": 2.225,
    "averageComplexity": 2.45,
    "averageEstimatedHours": 1.5625,
    "averageAiPercentage": 31.25,
    "averageEstimatedHoursWithAi": 1.125,
    "totalTokens": 5786,
    "totalCost": 0.0185223,
    "avgCostPerModel": 0.004630575,
    "codeAnalysis": {
      "totalLines": 6252,
      "codeLines": 5410,
      "commentLines": 246,
      "textLines": 169,
      "blankLines": 427,
      "codePercent": "92.9",
      "commentPercent": "4.2",
      "textPercent": "2.9"
    }
  },
  {
    "commitHash": "bec80275b483e36ff7e4608548febc1c1d857f62",
    "commitMessage": "Improve AI model scoring consistency and fix status display",
    "timestamp": "2025-05-30T02:46:01.267Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 37,
    "linesDeleted": 18,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 4.106,
        "tokensUsed": 1695,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Well-structured improvement to AI prompt engineering with clear formatting, detailed scoring criteria, and proper JSON structure. Shows good understanding of prompt optimization and systematic thinking. Minor complexity from restructuring prompt logic.",
        "responseTime": 8.697,
        "tokensUsed": 1610,
        "cost": 0.008274
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.8,
        "devLevel": 2.3,
        "complexity": 1.8,
        "estimatedHours": 2,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Commit primarily updates the AI prompt to include objective scoring criteria definitions. Code changes are simple string modifications and text file updates (README, package.json version). Quality is high due to clean implementation of these simple changes. Complexity is low. Developer level reflects task design rather than complex implementation.",
        "responseTime": 12.102,
        "tokensUsed": 1073,
        "cost": 0.0001104
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit improves AI model scoring by introducing objective criteria, which shows attention to consistency and clarity. Code quality is good with no apparent syntax errors or typos, though the changes are mostly textual updates to prompts rather than complex logic. Developer level reflects mid-level skills due to clear structure and purposeful modifications. Complexity is moderate as it involves straightforward updates to a single file with minimal integration points. Estimated time accounts for understanding the context and implementing the detailed criteria. AI percentage is moderate as the structured format and detailed prompts suggest possible AI assistance in drafting.",
        "responseTime": 2.806,
        "tokensUsed": 1359,
        "cost": 0.008565
      }
    ],
    "averageCodeQuality": 3.2,
    "averageDevLevel": 1.7249999999999999,
    "averageComplexity": 1.775,
    "averageEstimatedHours": 1.625,
    "averageAiPercentage": 20,
    "averageEstimatedHoursWithAi": 1.125,
    "totalTokens": 5737,
    "totalCost": 0.0169494,
    "avgCostPerModel": 0.00423735,
    "codeAnalysis": {
      "totalLines": 6345,
      "codeLines": 5500,
      "commentLines": 248,
      "textLines": 169,
      "blankLines": 428,
      "codePercent": "93.0",
      "commentPercent": "4.2",
      "textPercent": "2.9"
    }
  },
  {
    "commitHash": "682eb94fd88e87f0269c5c328de8f4ff40598912",
    "commitMessage": "Fix o3-mini error handling to show proper error state instead of defaults",
    "timestamp": "2025-05-30T02:47:28.308Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 12,
    "linesDeleted": 6,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 3.805,
        "tokensUsed": 1449,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 0.75,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean error handling improvement with proper empty response check and meaningful error messages. Code follows good practices with clear comments and appropriate fallback values. Simple but well-executed change addressing a specific model issue.",
        "responseTime": 4.551,
        "tokensUsed": 1209,
        "cost": 0.005079
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.3,
        "complexity": 1.5,
        "estimatedHours": 0.25,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.2,
        "reasoning": "The commit adds a specific check for empty model responses (identified as an 'o3-mini issue') and improves the error handling logic. Instead of returning arbitrary default scores (3.0, 2.0, etc.) on failure, it now correctly returns 0.0 for scoring metrics, representing an inability to score. The reasoning string is also enhanced to include partial response data if available. The code change is simple but effectively addresses a specific edge case and refines error reporting accuracy. Code quality is high for this small change; complexity is low as it's confined to a single function with minimal new logic. Developer level reflects thoughtful error handling for system robustness.",
        "responseTime": 7.443,
        "tokensUsed": 1023,
        "cost": 0.000125775
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 1.8,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code quality is high with proper error handling for empty responses and meaningful error messages. No syntax errors or typos observed. Developer level assessed as mid-level due to straightforward logic and good practices in error handling. Complexity is low as the change is focused on a single file with simple conditional checks. Estimated time reflects a quick fix, and AI percentage is moderate due to structured but not overly unique patterns.",
        "responseTime": 2.413,
        "tokensUsed": 1086,
        "cost": 0.00691
      }
    ],
    "averageCodeQuality": 3.2249999999999996,
    "averageDevLevel": 1.6749999999999998,
    "averageComplexity": 1.35,
    "averageEstimatedHours": 0.625,
    "averageAiPercentage": 16.25,
    "averageEstimatedHoursWithAi": 0.55,
    "totalTokens": 4767,
    "totalCost": 0.012114775000000001,
    "avgCostPerModel": 0.0030286937500000003,
    "codeAnalysis": {
      "totalLines": 6432,
      "codeLines": 5587,
      "commentLines": 248,
      "textLines": 169,
      "blankLines": 428,
      "codePercent": "93.1",
      "commentPercent": "4.1",
      "textPercent": "2.8"
    }
  },
  {
    "commitHash": "9689e8803aa98817de3550403d9e91e93e8aa9e0",
    "commitMessage": "Fix pagination display for cost table",
    "timestamp": "2025-05-30T21:20:00.683Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 1296,
    "linesDeleted": 57,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 7.006,
        "tokensUsed": 1607,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 1.4,
        "complexity": 2.2,
        "estimatedHours": 3.5,
        "aiPercentage": 85,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit message 'Fix pagination display for cost table' doesn't match the actual changes, which are adding historical commit analysis data to a JSON file. This is primarily data insertion (962 new JSON entries) rather than code logic. The large line addition ratio (1296 added vs 57 deleted) suggests automated/AI-generated content. The work appears to be basic data manipulation rather than complex programming logic.",
        "responseTime": 6.34,
        "tokensUsed": 1429,
        "cost": 0.006351000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.8,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The analysis is based on the visible diff, which shows adding a large JSON block to a history file, and the commit metadata (4 files changed, significant lines added/deleted). The visible change is simple data addition, but the commit title 'Fix pagination display for cost table' implies significant logic changes in the other 3 files (not shown in the diff). Scoring reflects the likely complexity of a pagination fix involving data handling (implied by adding history data) and multiple file changes, combined with the quality of the visible, well-formatted JSON. Code quality is rated assuming the unseen pagination logic is reasonably clean, reflecting the fix nature. Developer level and complexity align with typical multi-file pagination implementations. AI percentage is an estimate for assistance on the unseen logic; the visible diff (adding data) is likely manual or scripted.",
        "responseTime": 20.026,
        "tokensUsed": 1203,
        "cost": 0.00015052499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The commit addresses pagination display issues in a cost table, involving a significant number of lines added (1296) across 4 files, indicating a moderate scope of changes. Code quality is rated well due to systematic updates and consistency as partially reflected in the diff, though not fully visible. Developer level suggests mid-level expertise with good practices inferred from the context. Complexity is moderate given the number of files and lines changed, likely involving UI logic and data handling. Estimated hours reflect the effort for such a task, while AI percentage is low as the changes seem human-driven based on the specific focus on pagination fixes.",
        "responseTime": 3.329,
        "tokensUsed": 1279,
        "cost": 0.008305
      }
    ],
    "averageCodeQuality": 2.5999999999999996,
    "averageDevLevel": 1.525,
    "averageComplexity": 2.0999999999999996,
    "averageEstimatedHours": 2.5,
    "averageAiPercentage": 32.5,
    "averageEstimatedHoursWithAi": 1.625,
    "totalTokens": 5518,
    "totalCost": 0.014806525000000001,
    "avgCostPerModel": 0.0037016312500000002,
    "codeAnalysis": {
      "totalLines": 6706,
      "codeLines": 5813,
      "commentLines": 261,
      "textLines": 169,
      "blankLines": 463,
      "codePercent": "93.1",
      "commentPercent": "4.2",
      "textPercent": "2.7"
    }
  },
  {
    "commitHash": "d19262a06f4f1d114038520271fe5bdfadd39b9c",
    "commitMessage": "Add date/time display and sort commits by latest first",
    "timestamp": "2025-05-30T21:23:17.407Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 92,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 6.92,
        "tokensUsed": 1669,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 2.3,
        "estimatedHours": 2.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.8,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit adds historical analysis data to an existing JSON file with consistent schema. Developer shows mid-level understanding of data structure maintenance. Moderate complexity due to handling structured data with multiple nested objects and maintaining JSON integrity. Low AI percentage as this appears to be manual data compilation and organization work.",
        "responseTime": 5.145,
        "tokensUsed": 1472,
        "cost": 0.00624
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Adds date/time display using the moment library, including timezone handling. Implements sorting of commits by timestamp. Extracts sorting logic into a separate function (good practice). The changes involve parsing, formatting, sorting, and modifying the rendering logic, representing moderate complexity.",
        "responseTime": 8.34,
        "tokensUsed": 1062,
        "cost": 0.00010732499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 70,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "The commit primarily involves adding date/time display and sorting commits, which appears to be a moderate update to a JSON file with a significant number of lines added (92) compared to deletions (2). Code quality is decent with no visible syntax errors or typos in the diff, though the structure is mostly data-driven rather than complex logic. Developer level is mid-range due to the straightforward nature of the changes without advanced patterns. Complexity is moderate given the number of lines added and the integration of timestamp data. High AI percentage is inferred from the structured, repetitive nature of the JSON data additions, suggesting automated generation. Estimated time reflects a quick task, further reduced with AI assistance.",
        "responseTime": 3.028,
        "tokensUsed": 1355,
        "cost": 0.008805
      }
    ],
    "averageCodeQuality": 2.85,
    "averageDevLevel": 1.55,
    "averageComplexity": 2.05,
    "averageEstimatedHours": 1.8125,
    "averageAiPercentage": 35.125,
    "averageEstimatedHoursWithAi": 0.95,
    "totalTokens": 5558,
    "totalCost": 0.015152325000000001,
    "avgCostPerModel": 0.0037880812500000003,
    "codeAnalysis": {
      "totalLines": 6796,
      "codeLines": 5901,
      "commentLines": 262,
      "textLines": 169,
      "blankLines": 464,
      "codePercent": "93.2",
      "commentPercent": "4.1",
      "textPercent": "2.7"
    }
  },
  {
    "commitHash": "92a7a01834065d83b8a458bc26b93254ba4166df",
    "commitMessage": "Fix commit details navigation with sorted commits",
    "timestamp": "2025-05-30T21:28:01.589Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 95,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 4.179,
        "tokensUsed": 1648,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4,
        "devLevel": 2,
        "complexity": 2.2,
        "estimatedHours": 1.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1.2,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit adds a single entry to an existing JSON history file with consistent schema. Mid-level understanding shown in maintaining data integrity. Moderate complexity due to nested object structure but straightforward data entry task. Low AI percentage as this appears to be manual data compilation work with human-specific analysis content.",
        "responseTime": 4.518,
        "tokensUsed": 1450,
        "cost": 0.006198
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1,
        "estimatedHours": 0.1,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.08,
        "reasoning": "The provided diff only shows the addition of a structured data entry to a JSON history file. This part of the commit is well-formatted and maintains the existing data structure, indicating high quality for a data update. The task itself is simple (adding data to an array), requiring a junior-level understanding of JSON. The complexity is minimal as it's just data addition with no logic. Estimating time and AI percentage solely on this visible change, it's a quick manual task with very little likely AI involvement beyond potentially formatting assistance. Note: The commit message suggests code changes related to navigation and sorting in a second file, which are not present in the provided diff and therefore cannot be scored.",
        "responseTime": 9.856,
        "tokensUsed": 1167,
        "cost": 0.00013905
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4,
        "devLevel": 2.1,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit involves adding structured JSON data with consistent formatting and schema, indicating good code quality with no visible errors or typos. Developer level assessed as mid-level due to competent handling of data structure maintenance without advanced patterns. Complexity is moderate due to the structured nature of JSON data and the need to maintain integrity across nested objects. Estimated time reflects a straightforward data addition task, with low AI involvement as the work appears to be manual data compilation.",
        "responseTime": 2.56,
        "tokensUsed": 1286,
        "cost": 0.00799
      }
    ],
    "averageCodeQuality": 3.125,
    "averageDevLevel": 1.4,
    "averageComplexity": 1.425,
    "averageEstimatedHours": 0.9,
    "averageAiPercentage": 11.25,
    "averageEstimatedHoursWithAi": 0.6950000000000001,
    "totalTokens": 5551,
    "totalCost": 0.014327050000000001,
    "avgCostPerModel": 0.0035817625000000002,
    "codeAnalysis": {
      "totalLines": 6891,
      "codeLines": 5990,
      "commentLines": 264,
      "textLines": 169,
      "blankLines": 468,
      "codePercent": "93.3",
      "commentPercent": "4.1",
      "textPercent": "2.6"
    }
  },
  {
    "commitHash": "d8b0b040cffff02b1b0ed53fdf9f87b1a67d0b1c",
    "commitMessage": "Optimize code analysis display with stacked progress bar",
    "timestamp": "2025-05-30T21:34:54.333Z",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 162,
    "linesDeleted": 43,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 6.087,
        "tokensUsed": 1650,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Clean JSON data addition with proper structure and consistent formatting. The commit primarily adds a single entry to an existing JSON history file, maintaining the established schema. Simple data entry task with good attention to detail in preserving the nested object structure. Junior to mid-level work as it involves understanding the data format but no complex logic or architecture decisions.",
        "responseTime": 4.329,
        "tokensUsed": 1453,
        "cost": 0.006183
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 1.2,
        "complexity": 1.1,
        "estimatedHours": 0.1,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "Analysis is based solely on the provided diff, which shows a simple addition of an entry to a JSON data array. This is a basic data manipulation task with minimal complexity, indicative of a junior-level contribution for this specific change. Code quality of the JSON snippet is good, assuming the full entry is valid JSON. Assumes the core code changes implementing the stacked progress bar were in files not included in the provided diff, making this analysis limited to the data update shown.",
        "responseTime": 7.596,
        "tokensUsed": 1109,
        "cost": 0.00012119999999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "Code quality is high with clean JSON structure and consistent formatting in the commit history file; no syntax errors or typos observed. Developer level assessed as mid-level due to straightforward data entry with good practices in maintaining schema integrity. Complexity is moderate due to nested JSON structure and multiple file changes (4 files), though the logic appears relatively simple. Estimated hours reflect the scope of changes (162 lines added, 43 deleted). AI percentage is low as the work appears manual with human-specific content in the commit data.",
        "responseTime": 2.695,
        "tokensUsed": 1303,
        "cost": 0.008215
      }
    ],
    "averageCodeQuality": 3.2249999999999996,
    "averageDevLevel": 1.25,
    "averageComplexity": 1.275,
    "averageEstimatedHours": 1.025,
    "averageAiPercentage": 11.25,
    "averageEstimatedHoursWithAi": 0.8375,
    "totalTokens": 5515,
    "totalCost": 0.0145192,
    "avgCostPerModel": 0.0036298,
    "codeAnalysis": {
      "totalLines": 6973,
      "codeLines": 6074,
      "commentLines": 263,
      "textLines": 169,
      "blankLines": 467,
      "codePercent": "93.4",
      "commentPercent": "4.0",
      "textPercent": "2.6"
    }
  }
]