[
  {
    "commitHash": "6ddb6b4ea3bc3cfa010c7ca29eb0c3bb9545a3b6",
    "commitMessage": "Transform UI to terminal-style dark theme",
    "timestamp": "2025-05-28T14:35:18-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 6,
    "linesAdded": 364,
    "linesDeleted": 100,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.8,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The code quality is high due to well-structured classes and functions. The developer shows a mid-level proficiency in handling complex code. The complexity is moderate due to the use of token estimation and pricing calculations. The estimated development time is relatively high due to the number of files changed and lines added. The AI percentage is lower as the code seems to involve more manual logic. With AI assistance, the development time could be significantly reduced.",
        "responseTime": 1.915,
        "tokensUsed": 1144,
        "cost": 0.000726
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 4,
        "estimatedHours": 8.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 6.5,
        "reasoning": "The commit message indicates a significant transformation of the UI to a terminal-style dark theme, which suggests a well-designed and implemented feature. The number of files changed (6) and the lines added (364) and deleted (100) indicate a moderate-sized change. The developer appears to be an experienced mid-level engineer capable of handling this level of complexity. The code complexity is high due to the extensive UI changes and the need to ensure a consistent and visually appealing theme across multiple components. The estimated development time is relatively high, but the AI percentage is lower, as the UI transformation likely requires more manual work and design decisions. With AI assistance, the development time could be reduced, but the AI contribution would be limited compared to more code-centric tasks.",
        "responseTime": 2.02,
        "tokensUsed": 1367,
        "cost": 0.0005847500000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The commit focuses on a UI transformation to a dark theme.  While a significant number of lines were added (364), this is likely due to the nature of UI changes which often involve many small modifications.  The deletion of 100 lines suggests refactoring rather than simple addition.  A code quality of 4.0 reflects a well-executed theme change, assuming it's functional and well-structured. The developer level is rated 2.2 as it demonstrates competence in UI development but doesn't necessarily show advanced skills.  The complexity is rated 2.8 because a theme change is usually not highly complex, although managing the interactions between numerous elements could present some moderate challenges.  The estimated time of 3 hours accounts for potential UI debugging and integration testing.  A 25% AI contribution is estimated because AI might have assisted with some repetitive CSS changes or even layout generation, but the creative and design aspects likely demanded manual effort.",
        "responseTime": 2.64,
        "tokensUsed": 1113,
        "cost": 0.0001494
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 40,
        "estimatedHoursWithAi": 1.95,
        "reasoning": "The commit focuses on transforming the UI to a terminal-style dark theme, which suggests a good level of design and implementation skill, hence a code quality score of 3.8. The developer level is assessed as mid-level (2.1) due to the moderate scope of changes across 6 files. Complexity is moderate at 3.2 given the balance of lines added (364) and deleted (100), indicating a focused UI overhaul. Estimated hours are set at 3.25 based on the volume of changes. AI percentage is estimated at 40.0 due to potential use of design tools or templates for UI themes. With AI assistance, the time could be reduced to 1.95 hours.",
        "responseTime": 4.395,
        "tokensUsed": 1195,
        "cost": 0.008125
      }
    ],
    "averageCodeQuality": 4.05,
    "averageDevLevel": 2.375,
    "averageComplexity": 3.45,
    "averageEstimatedHours": 4.5625,
    "averageAiPercentage": 30,
    "averageEstimatedHoursWithAi": 3.3,
    "totalTokens": 4819,
    "totalCost": 0.00958515,
    "avgCostPerModel": 0.0023962875,
    "analyzedAt": "2025-05-29T00:07:18.189Z"
  },
  {
    "commitHash": "6238e23e35702d3094169e9e9096f256fb2891a2",
    "commitMessage": "Fix automatic extraction of username and project name",
    "timestamp": "2025-05-28T17:14:51-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 196,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 4.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 3.15,
        "reasoning": "The code quality is high due to clear and well-structured changes. The developer shows mid-level proficiency in handling the git-related tasks. The complexity is moderate as it involves extracting user and project names from git. Estimated development time is relatively high due to the number of lines added and changes made. AI may have assisted in some parts, but human intervention was likely dominant.",
        "responseTime": 5.946,
        "tokensUsed": 1133,
        "cost": 0.0007105
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.7,
        "estimatedHours": 4.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 3,
        "reasoning": "The code demonstrates a good understanding of Git operations and the ability to extract relevant information from the repository. The implementation is well-structured and handles edge cases effectively. The developer appears to be experienced and capable of working with Git-related tasks. The complexity is moderate, as the code involves several steps to determine the user and project name. The estimated development time is on the higher side due to the need to handle various scenarios, but the use of AI assistance could potentially reduce the time required.",
        "responseTime": 1.816,
        "tokensUsed": 1328,
        "cost": 0.000516
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.2,
        "estimatedHours": 4.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 3.15,
        "reasoning": "The commit demonstrates improved robustness in handling user and project name extraction. The added error handling and fallback mechanisms are good practices.  The code for extracting information from the git config and remote URL is well-structured and efficient. The regular expression used for parsing the remote URL is reasonably concise and effective.  However, it might benefit from additional input validation to handle edge cases more gracefully (this is a minor point). The `dev_level` score reflects the solid understanding of git and JavaScript demonstrated but also some areas where a more senior developer might have implemented more refined error handling or made more optimal choices for some string manipulation. The `complexity` score reflects the moderate complexity of the added logic; it's not overly intricate, but it's more than a simple change. The AI percentage is relatively low because the core logic—parsing git config and remote URLs—requires a good understanding of git and shell commands, which is less suited for AI generation at this time.  AI could've assisted in generating parts of the error handling and string manipulation, which is why there's some AI contribution. The estimated hours consider the time for planning, writing, testing, and debugging the code. With AI, some repetitive tasks and code generation could have been faster.  There's room for improvement with regards to comments explaining complex parts.",
        "responseTime": 2.963,
        "tokensUsed": 1232,
        "cost": 0.00018464999999999996
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "The code quality is rated highly due to clear logic for extracting user and project names with proper fallbacks, though it lacks extensive error handling. Developer level suggests mid-level experience given the structured approach and use of async operations. Complexity is moderate due to regex and multiple fallback mechanisms. Estimated hours reflect the time to write and test the logic. AI percentage is moderate as the code shows some patterns that could be AI-generated, like the regex structure. Hours with AI are reduced due to potential assistance in drafting repetitive error handling.",
        "responseTime": 3.247,
        "tokensUsed": 1159,
        "cost": 0.007545
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.4749999999999996,
    "averageComplexity": 3.4749999999999996,
    "averageEstimatedHours": 4.1875,
    "averageAiPercentage": 28.875,
    "averageEstimatedHoursWithAi": 2.825,
    "totalTokens": 4852,
    "totalCost": 0.00895615,
    "avgCostPerModel": 0.0022390375,
    "codeAnalysis": {
      "totalLines": 3245,
      "codeLines": 2790,
      "commentLines": 0,
      "textLines": 76,
      "blankLines": 252,
      "codePercent": "93.2",
      "commentPercent": "0.0",
      "textPercent": "2.5"
    },
    "analyzedAt": "2025-05-29T00:20:54.749Z"
  },
  {
    "commitHash": "0f9c884a7cad52b5a68cf928843604988254e995",
    "commitMessage": "Update README with comprehensive documentation",
    "timestamp": "2025-05-28T17:28:09-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 119,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.6,
        "complexity": 3.8,
        "estimatedHours": 2.75,
        "aiPercentage": 27.5,
        "estimatedHoursWithAi": 2.6,
        "reasoning": "The commit updates the README with comprehensive documentation, indicating a high level of attention to detail and clarity, hence the high code quality score. The complexity is rated slightly higher due to the detailed features and analysis included. The estimated hours are reasonable for the amount of documentation added. The AI percentage is relatively low, suggesting most of the content was manually written. The estimated hours with AI is also provided, reflecting potential time savings if AI tools were utilized.",
        "responseTime": 2.853,
        "tokensUsed": 1113,
        "cost": 0.0007155000000000001
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.9,
        "estimatedHours": 2.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit updates the README with comprehensive documentation, which is a positive sign of code quality and developer expertise. The changes are well-organized and provide clear instructions for users, indicating a strong understanding of the project. The complexity is moderate, as the documentation covers various aspects of the web interface and code analysis features. The AI percentage is relatively low, suggesting the documentation was primarily written by the developer. Overall, this commit demonstrates a good level of code quality, developer experience, and efficient use of AI assistance.",
        "responseTime": 1.789,
        "tokensUsed": 1261,
        "cost": 0.0005022500000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.7,
        "estimatedHours": 3,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 2.4,
        "reasoning": "The commit demonstrates good code quality through the addition of comprehensive documentation for a web interface.  The documentation is well-structured and clearly explains the features and functionality.  A developer level of 2.8 is assigned due to the clear understanding and implementation of a web server and user interface elements. The complexity is rated 2.7 because while the task involves multiple components (web server, UI, documentation), the implementation appears straightforward and well-organized. The estimated development time of 3 hours accounts for the substantial amount of documentation written. The AI percentage is lower than the original because the added content is primarily explanatory documentation and not directly generated code. The reduction in time with AI is less significant as AI is less helpful in generating this type of documentation. ",
        "responseTime": 2.204,
        "tokensUsed": 1086,
        "cost": 0.00014107499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.2,
        "reasoning": "The commit focuses on updating README.md with detailed documentation, which shows good attention to detail and clarity in communication, justifying a code quality score of 3.8. The developer level is assessed at 2.4, indicating mid-level expertise due to the structured and comprehensive nature of the documentation. Complexity is moderate at 2.7 as it involves organizing technical information but lacks intricate code changes. Estimated hours are set at 3.25 based on the volume of content added (119 lines). AI percentage is estimated at 30.5% due to the structured format and boilerplate-like sections that could be AI-assisted. With AI, the time is reduced to 2.2 hours due to potential templating or content generation assistance.",
        "responseTime": 3.293,
        "tokensUsed": 1156,
        "cost": 0.007980000000000001
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.65,
    "averageComplexity": 3.0249999999999995,
    "averageEstimatedHours": 2.875,
    "averageAiPercentage": 23.25,
    "averageEstimatedHoursWithAi": 2.3,
    "totalTokens": 4616,
    "totalCost": 0.009338825000000002,
    "avgCostPerModel": 0.0023347062500000005,
    "codeAnalysis": {
      "totalLines": 3485,
      "codeLines": 2903,
      "commentLines": 0,
      "textLines": 169,
      "blankLines": 281,
      "codePercent": "90.6",
      "commentPercent": "0.0",
      "textPercent": "5.3"
    },
    "analyzedAt": "2025-05-29T00:28:20.186Z"
  },
  {
    "commitHash": "514b871ec6a7ed94ca00fef4fb0f9efde1916454",
    "commitMessage": "Add comprehensive code comments and documentation",
    "timestamp": "2025-05-28T17:35:56-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 7,
    "linesAdded": 667,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The code quality is high due to comprehensive comments and documentation. The developer level is mid-level as shown by the structured approach. The complexity is moderate due to the use of multiple AI models. The estimated development time is higher due to the detailed analysis. The AI percentage is lower as significant manual work is evident. The estimated hours with AI are reduced but still substantial.",
        "responseTime": 3.535,
        "tokensUsed": 1099,
        "cost": 0.0006925
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.9,
        "estimatedHours": 15.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 11,
        "reasoning": "The comprehensive code comments and documentation indicate a high level of code quality and developer expertise. The complexity is moderate to high, requiring significant development time. However, the use of AI tools could reduce the overall development time by approximately 30%.",
        "responseTime": 1.388,
        "tokensUsed": 1270,
        "cost": 0.0004515
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3,
        "estimatedHours": 8.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 6,
        "reasoning": "The commit focuses heavily on adding comments and documentation, which significantly improves code quality (4.2).  The code itself appears to be moderately complex (3.0), suggesting a mid-to-senior level developer (2.8).  Estimating development time is challenging without knowing the initial state, but adding extensive documentation to 7 files suggests a significant time investment (8.5 hours).  While the commit includes new code, the majority of changes appear to be additions of comments and documentation, rather than new functionality, thus low AI percentage (10%). AI assistance would likely speed up the documentation process but not eliminate the need for manual code understanding, resulting in a still significant, but reduced time estimate (6 hours).",
        "responseTime": 2.103,
        "tokensUsed": 1058,
        "cost": 0.00013267499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 3.5,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit focuses on adding comprehensive comments and documentation, significantly improving readability and maintainability, hence a high code quality score. The developer level is mid-range due to the structured approach to documentation. Complexity is moderate to high given the integration of multiple AI models and token estimation logic. Estimated hours reflect the effort to write detailed comments across 7 files. AI percentage is moderate as the structure suggests some templated or generated comments. With AI assistance, time is reduced due to potential automation of comment generation.",
        "responseTime": 2.673,
        "tokensUsed": 1115,
        "cost": 0.007285
      }
    ],
    "averageCodeQuality": 4.2,
    "averageDevLevel": 2.6750000000000003,
    "averageComplexity": 3.5749999999999997,
    "averageEstimatedHours": 7.6875,
    "averageAiPercentage": 23.875,
    "averageEstimatedHoursWithAi": 5.3375,
    "totalTokens": 4542,
    "totalCost": 0.008561675,
    "avgCostPerModel": 0.00214041875,
    "codeAnalysis": {
      "totalLines": 3616,
      "codeLines": 2990,
      "commentLines": 0,
      "textLines": 169,
      "blankLines": 282,
      "codePercent": "89.7",
      "commentPercent": "0.0",
      "textPercent": "5.1"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:18:46.147Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:18:55.772Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:18:57.895Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-29T00:36:08.674Z"
  },
  {
    "commitHash": "e338a26fe57fd8acab976d14a20f76d08d38bbca",
    "commitMessage": "Fix comment detection in code analyzer",
    "timestamp": "2025-05-28T17:48:12-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 104,
    "linesDeleted": 5,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The code quality is high as the commit fixes a specific issue effectively. The developer demonstrates a mid-level understanding by efficiently addressing the problem. The code complexity is moderate due to the changes made in the comment detection logic. Estimated development time is slightly higher due to the number of lines changed. AI likely played a minor role in this commit, reducing the estimated time with AI assistance.",
        "responseTime": 2.321,
        "tokensUsed": 1066,
        "cost": 0.000678
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.6,
        "estimatedHours": 3.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The commit fixes a critical issue in the code analyzer by improving the comment detection logic. The changes are well-structured and demonstrate a good understanding of the codebase. The developer appears to be experienced and capable of handling complex tasks. The code complexity is moderate, with the addition of new conditional checks and handling of multi-line comments. The estimated development time is reasonable for the scope of the changes. While AI assistance could have reduced the development time, the overall implementation seems to be primarily driven by the developer's own expertise.",
        "responseTime": 1.831,
        "tokensUsed": 1325,
        "cost": 0.0005232500000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.4,
        "reasoning": "The commit demonstrates a clear improvement in comment detection, addressing a specific bug.  The code is well-structured and uses clear variable names. The addition of handling JSDoc-style comment continuations is a positive addition.  However, some parts could be slightly more concise.  The developer seems to have a solid grasp of JavaScript and code analysis concepts, placing them in the mid-level range. The complexity is moderate due to the logic involved in parsing comments and handling different scenarios. I estimate around 3.5 hours for a mid-level developer without AI assistance.  I've estimated that 30% of the code may have been generated by an AI tool, primarily the more straightforward additions, with the core logic likely written manually. Using AI could reduce the development time to roughly 2.4 hours.",
        "responseTime": 2.325,
        "tokensUsed": 1072,
        "cost": 0.000137325
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit shows a good understanding of comment detection logic with thoughtful additions like JSDoc-style comment handling. Code quality is above average due to clear intent and structure, though minor inconsistencies (like variable naming 'comment' vs 'comments') slightly lower the score. Developer level suggests mid-level expertise with room for refinement. Complexity is moderate due to the logic around multi-line and single-line comment detection. Estimated hours reflect a focused task with some debugging time. AI percentage is moderate as the code shows personalized logic but follows common patterns that could be AI-assisted. With AI, time could be reduced by leveraging templates or suggestions.",
        "responseTime": 3.324,
        "tokensUsed": 1122,
        "cost": 0.007559999999999999
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.425,
    "averageComplexity": 3.45,
    "averageEstimatedHours": 3.375,
    "averageAiPercentage": 27.5,
    "averageEstimatedHoursWithAi": 2.2875,
    "totalTokens": 4585,
    "totalCost": 0.008898574999999999,
    "avgCostPerModel": 0.0022246437499999997,
    "codeAnalysis": {
      "totalLines": 3715,
      "codeLines": 3082,
      "commentLines": 176,
      "textLines": 169,
      "blankLines": 288,
      "codePercent": "89.9",
      "commentPercent": "5.1",
      "textPercent": "4.9"
    },
    "analyzedAt": "2025-05-29T01:17:32.669Z"
  },
  {
    "commitHash": "58c234ad333df917e020e52c4268da6ba4537d6f",
    "commitMessage": "Improve UI alignment and add search functionality to all tables",
    "timestamp": "2025-05-29T17:59:44-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 8,
    "linesAdded": 218,
    "linesDeleted": 22,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 8.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 5.95,
        "reasoning": "The commit shows a significant improvement in UI alignment and adds search functionality, indicating attention to detail and user experience. The code changes are well-structured and enhance the overall quality. The developer's level is mid-level due to the complexity of the changes made. The code complexity is moderate due to the addition of search functionality. The estimated development time is relatively high due to the number of files changed and lines added. AI likely contributed around 30% of the code changes, reducing the estimated hours with AI assistance.",
        "responseTime": 2.168,
        "tokensUsed": 1031,
        "cost": 0.0006875
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.7,
        "estimatedHours": 12.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 9,
        "reasoning": "The commit shows a well-structured and organized approach to improving the UI and adding search functionality across multiple tables. The changes are substantial, indicating a good level of development experience. The complexity is moderate, with the addition of search functionality and UI enhancements. The estimated development time is on the higher side, but the use of AI assistance could potentially reduce the time required by a significant margin.",
        "responseTime": 1.948,
        "tokensUsed": 1192,
        "cost": 0.000463
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 8.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 6.375,
        "reasoning": "The commit demonstrates a good understanding of UI/UX principles by improving alignment and adding a valuable search functionality.  The addition of search across multiple tables is a practical enhancement suggesting a mid-level understanding of front-end development and user needs.  The code quality is rated highly because the changes seem focused and well-integrated.  The complexity is moderate; adding search to existing tables is a fairly standard task, however, the higher line count suggests some intricate HTML/JavaScript manipulation. The estimated development time accounts for the number of files changed, the lines added and deleted, and the complexity of implementing consistent search across multiple tables. AI could have assisted in generating boilerplate search functionality (input fields, basic event handling), but most of the implementation (integrating with the existing tables and possibly handling data filtering) likely required manual coding.  The reduction in estimated time with AI assistance reflects the time saved with automated boilerplate code generation.",
        "responseTime": 2.614,
        "tokensUsed": 1144,
        "cost": 0.00015757499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.1,
        "complexity": 2.9,
        "estimatedHours": 5.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 3.75,
        "reasoning": "The commit focuses on UI improvements and adding search functionality, which shows attention to user experience (code quality: 3.8). The changes appear structured but not overly complex, suggesting a mid-level developer (dev_level: 2.1). The complexity is moderate due to multiple file changes and integration of search features across tables (complexity: 2.9). Estimated hours reflect the scope of 8 files and 218 lines added (5.25 hours). AI percentage is moderate as the HTML changes seem templated and could be partially generated (30.5%). With AI assistance, the repetitive UI tasks could reduce time significantly (3.75 hours).",
        "responseTime": 3.158,
        "tokensUsed": 1058,
        "cost": 0.00732
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.4499999999999997,
    "averageComplexity": 3.3000000000000003,
    "averageEstimatedHours": 8.6875,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 6.26875,
    "totalTokens": 4425,
    "totalCost": 0.008628075,
    "avgCostPerModel": 0.00215701875,
    "codeAnalysis": {
      "totalLines": 4177,
      "codeLines": 3448,
      "commentLines": 213,
      "textLines": 169,
      "blankLines": 347,
      "codePercent": "90.0",
      "commentPercent": "5.6",
      "textPercent": "4.4"
    },
    "analyzedAt": "2025-05-30T01:10:36.437Z"
  },
  {
    "commitHash": "1cb5945d6bca28ad4c5a753203e12b14d5cb281e",
    "commitMessage": "Add GitHub navigation buttons to projects and users tables",
    "timestamp": "2025-05-29T18:10:26-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 5,
    "linesAdded": 65,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-3.5 Turbo",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 2.8,
        "estimatedHours": 3.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 3.15,
        "reasoning": "The code quality is high due to clear and well-structured additions. The developer level is average as the changes involve basic functionality. The complexity is moderate with the addition of GitHub navigation buttons. The estimated hours are higher due to multiple file changes. The AI percentage is low as the changes seem to be manually implemented. Estimated hours with AI would reduce development time significantly.",
        "responseTime": 1.298,
        "tokensUsed": 1052,
        "cost": 0.000669
      },
      {
        "modelName": "Claude 3 Haiku",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 3.1,
        "estimatedHours": 4.5,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 3.5,
        "reasoning": "The commit adds GitHub navigation buttons to the projects and users tables, which is a useful feature that improves the user experience. The code quality is good, with clear and well-structured functions. The developer level is mid-to-senior, as the code demonstrates a good understanding of JavaScript and web development best practices. The complexity is moderate, as the changes involve adding new functionality to existing code. The estimated development time is around 4.5 hours, and the AI code percentage is relatively low at 20%, indicating that the developer did most of the work manually. With AI assistance, the estimated development time could be reduced to 3.5 hours.",
        "responseTime": 2.244,
        "tokensUsed": 1334,
        "cost": 0.0005545000000000001
      },
      {
        "modelName": "Gemini 1.5 Flash",
        "provider": "Google",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.7,
        "estimatedHours": 3.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 2.625,
        "reasoning": "The code demonstrates good readability and maintainability.  The addition of the GitHub link functionality is well-implemented, with appropriate error handling for cases where a project name is missing or unknown. The helper functions are concise and effectively encapsulate logic. The developer's understanding of incorporating dynamic elements into HTML and using JavaScript's DOM manipulation is evident.  The complexity is moderate, primarily due to the interaction between JavaScript and HTML. The use of localStorage, however, introduces a minor point of complexity, and the GitHub username hardcoded introduces a minor risk and potential issue. While AI could potentially assist with the basic creation of the link, the implementation requires solid understanding of DOM manipulation, error handling, and efficient use of JavaScript. The AI likely helped in writing parts of the functions, but the structure and integration are primarily human-driven.",
        "responseTime": 2.215,
        "tokensUsed": 1109,
        "cost": 0.00014752499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The code quality is good with clear additions for GitHub navigation buttons, though it lacks error handling for edge cases in the repo URL generation. Developer level seems mid-range due to straightforward logic with some customization like dynamic username retrieval. Complexity is moderate-low as the changes involve basic DOM manipulation and string templating. Estimated hours reflect a small but focused feature addition. AI percentage is moderate as the structure looks somewhat templated, possibly from snippets or tools. With AI, development time could be reduced due to faster boilerplate generation.",
        "responseTime": 2.813,
        "tokensUsed": 1089,
        "cost": 0.007185
      }
    ],
    "averageCodeQuality": 4.1000000000000005,
    "averageDevLevel": 2.45,
    "averageComplexity": 2.825,
    "averageEstimatedHours": 3.6875,
    "averageAiPercentage": 21.375,
    "averageEstimatedHoursWithAi": 2.84375,
    "totalTokens": 4584,
    "totalCost": 0.008556025,
    "avgCostPerModel": 0.00213900625,
    "codeAnalysis": {
      "totalLines": 4264,
      "codeLines": 3535,
      "commentLines": 213,
      "textLines": 169,
      "blankLines": 347,
      "codePercent": "90.2",
      "commentPercent": "5.4",
      "textPercent": "4.3"
    },
    "analyzedAt": "2025-05-30T01:10:47.273Z"
  },
  {
    "commitHash": "670ec7aee050ae1db2b608a84ab25620570c4e92",
    "commitMessage": "Add organization analytics page and upgrade to latest AI models",
    "timestamp": "2025-05-29T18:35:16-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 10,
    "linesAdded": 625,
    "linesDeleted": 21,
    "modelScores": [
      {
        "modelName": "OpenAI o3",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 403 Project `proj_zUo2eqKEklqkdo1UZLJjKaqn` does not have access to model `o3`",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.7,
        "complexity": 3.6,
        "estimatedHours": 8.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 6,
        "reasoning": "High-quality commit with systematic upgrades to latest AI models and comprehensive documentation updates. The developer demonstrates senior-level understanding of API integrations and pricing structures. Moderate-to-complex work involving multiple model configurations, pricing calculations, and maintaining backward compatibility. The structured approach and attention to detail in documentation suggests experienced development with some AI assistance for research and configuration details.",
        "responseTime": 5.689,
        "tokensUsed": 1432,
        "cost": 0
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [429 Too Many Requests] Gemini 2.5 Pro Preview doesn't have a free quota tier. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerDay-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro-exp\",\"location\":\"global\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerMinute-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro-exp\",\"location\":\"global\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerDayPerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"35s\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 15.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 10.25,
        "reasoning": "The commit shows a significant update to AI models and documentation, indicating good code quality with attention to detail in README and code comments. Developer level is mid-range due to the scope of changes and familiarity with updating model integrations. Complexity is moderate-high given the integration of multiple AI models and pricing updates. Estimated hours reflect the effort for updating 10 files with 625 lines added. AI percentage is moderate as some updates might be templated or tool-assisted. With AI, development time could be reduced due to automation of repetitive updates.",
        "responseTime": 2.825,
        "tokensUsed": 1246,
        "cost": 0.007980000000000001
      }
    ],
    "averageCodeQuality": 2.1,
    "averageDevLevel": 1.275,
    "averageComplexity": 1.8,
    "averageEstimatedHours": 6,
    "averageAiPercentage": 13.75,
    "averageEstimatedHoursWithAi": 4.0625,
    "totalTokens": 2678,
    "totalCost": 0.007980000000000001,
    "avgCostPerModel": 0.0019950000000000002,
    "codeAnalysis": {
      "totalLines": 4548,
      "codeLines": 3778,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "90.5",
      "commentPercent": "5.4",
      "textPercent": "4.0"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:19:00.758Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T01:35:29.431Z"
  },
  {
    "commitHash": "3d406e3251bdbe009861530b9aa560c341c70465",
    "commitMessage": "Configure latest AI models with updated API keys",
    "timestamp": "2025-05-29T18:49:22-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 90,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "OpenAI o3",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.8,
        "complexity": 2.1,
        "estimatedHours": 0.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "High quality commit that properly updates model keys to match actual API calls, showing good attention to detail and consistency. The changes are simple string replacements but require understanding of the codebase structure. Senior-level work evidenced by systematic approach to updating all model references consistently. Low AI involvement as this requires domain knowledge of specific model names and API versions.",
        "responseTime": 5.433,
        "tokensUsed": 1312,
        "cost": 0.00588
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.9,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit updates AI model configurations and API keys, indicating a practical understanding of the codebase. Code quality is good with clear, focused changes, though not exceptional due to lack of extensive refactoring or optimization. Developer level suggests mid-level expertise given the familiarity with multiple AI model integrations. Complexity is moderate as it involves straightforward updates to model keys and versions. Estimated hours reflect a reasonable time for research and implementation of these changes. AI percentage is moderate as the structure suggests some templating or tool assistance, but core logic appears manually crafted.",
        "responseTime": 2.927,
        "tokensUsed": 1120,
        "cost": 0.007350000000000001
      }
    ],
    "averageCodeQuality": 2,
    "averageDevLevel": 1.2999999999999998,
    "averageComplexity": 1.25,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.65,
    "totalTokens": 2432,
    "totalCost": 0.01323,
    "avgCostPerModel": 0.0033075,
    "codeAnalysis": {
      "totalLines": 4635,
      "codeLines": 3865,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "90.7",
      "commentPercent": "5.3",
      "textPercent": "4.0"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:26:25.360Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T01:49:34.472Z"
  },
  {
    "commitHash": "94a094163b137e77a659faf998896ce800d18846",
    "commitMessage": "Implement OpenAI o3 support with new /v1/responses API",
    "timestamp": "2025-05-29T18:52:05-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 138,
    "linesDeleted": 8,
    "modelScores": [
      {
        "modelName": "OpenAI o3",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: o3 API error: 401 - {\n  \"error\": {\n    \"message\": \"Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.\",\n    \"type\": \"invalid_request_error\",\n    \"param\": null,\n    \"code\": \"invalid_api_key\"\n  }\n}",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 3.6,
        "estimatedHours": 4.5,
        "aiPercentage": 75,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "Code implements new API integration with proper error handling and structured request format. However, it lacks comprehensive error handling patterns, input validation, and the diff appears truncated. The highly specific API structure and detailed parameter configuration suggests significant AI assistance. Mid-level developer work with moderate complexity due to API integration requirements.",
        "responseTime": 4.555,
        "tokensUsed": 1222,
        "cost": 0.00543
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [429 Too Many Requests] Gemini 2.5 Pro Preview doesn't have a free quota tier. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{\"@type\":\"type.googleapis.com/google.rpc.QuotaFailure\",\"violations\":[{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerMinute-FreeTier\",\"quotaDimensions\":{\"model\":\"gemini-2.5-pro-exp\",\"location\":\"global\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_requests\",\"quotaId\":\"GenerateRequestsPerDayPerProjectPerModel-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}},{\"quotaMetric\":\"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\",\"quotaId\":\"GenerateContentInputTokensPerModelPerDay-FreeTier\",\"quotaDimensions\":{\"location\":\"global\",\"model\":\"gemini-2.5-pro-exp\"}}]},{\"@type\":\"type.googleapis.com/google.rpc.Help\",\"links\":[{\"description\":\"Learn more about Gemini API quotas\",\"url\":\"https://ai.google.dev/gemini-api/docs/rate-limits\"}]},{\"@type\":\"type.googleapis.com/google.rpc.RetryInfo\",\"retryDelay\":\"48s\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The code quality is rated at 3.8 due to clear implementation of the new OpenAI o3 API with proper error handling and structured request formatting. The developer level is assessed at 2.4, indicating mid-level expertise, as the commit shows familiarity with API integration and custom configurations. Complexity is scored at 3.6 because of the moderate intricacy in handling a new API endpoint and data structure. Estimated hours are set at 3.25 based on the significant lines added (138) and the need to research/test the new API. AI percentage is estimated at 30.5% due to potential use of AI for boilerplate or API request structure. With AI assistance, the time is reduced to 2.10 hours as it could streamline formatting and error handling.",
        "responseTime": 3.177,
        "tokensUsed": 1125,
        "cost": 0.007905
      }
    ],
    "averageCodeQuality": 1.75,
    "averageDevLevel": 1.125,
    "averageComplexity": 1.8,
    "averageEstimatedHours": 1.9375,
    "averageAiPercentage": 26.375,
    "averageEstimatedHoursWithAi": 1.0875,
    "totalTokens": 2347,
    "totalCost": 0.013335,
    "avgCostPerModel": 0.00333375,
    "codeAnalysis": {
      "totalLines": 4765,
      "codeLines": 3988,
      "commentLines": 230,
      "textLines": 169,
      "blankLines": 378,
      "codePercent": "90.9",
      "commentPercent": "5.2",
      "textPercent": "3.9"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:36.033Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T01:52:16.139Z"
  },
  {
    "commitHash": "c01b049282398fcc387e8cd1714ac36e6150cb5d",
    "commitMessage": "Switch from o3 to o1-pro model",
    "timestamp": "2025-05-29T18:56:00-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 104,
    "linesDeleted": 60,
    "modelScores": [
      {
        "modelName": "OpenAI o1-pro",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 0.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "This is a straightforward model configuration update with consistent string replacements across documentation and code. The changes are well-organized and maintain code structure integrity. The systematic nature of updates (README, comments, pricing config) suggests methodical mid-level developer work with minimal complexity. Low AI involvement as this appears to be manual configuration changes rather than generated code.",
        "responseTime": 5.126,
        "tokensUsed": 1410,
        "cost": 0.006174000000000001
      },
      {
        "modelName": "Gemini 2.5 Pro Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit involves a straightforward model name update from o3 to o1-pro across multiple files, indicating a simple but purposeful change. Code quality is average with no significant improvements or issues introduced. Developer level is mid-range due to the routine nature of the update. Complexity is moderate-low as it involves basic string replacements and configuration updates. Estimated hours reflect a short but manual task across files. AI percentage is moderate as the changes could partially be automated or templated. With AI, the task could be faster via automated find-replace tools.",
        "responseTime": 3.126,
        "tokensUsed": 1215,
        "cost": 0.007845
      }
    ],
    "averageCodeQuality": 1.85,
    "averageDevLevel": 1.125,
    "averageComplexity": 1.225,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 11.375,
    "averageEstimatedHoursWithAi": 0.65,
    "totalTokens": 2625,
    "totalCost": 0.014019,
    "avgCostPerModel": 0.00350475,
    "codeAnalysis": {
      "totalLines": 4809,
      "codeLines": 4039,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.1",
      "commentPercent": "5.1",
      "textPercent": "3.8"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:39.810Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:45.266Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:50.681Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:54.391Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:28:07.308Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:28:10.695Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:36:42.472Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T01:56:12.001Z"
  },
  {
    "commitHash": "41089543b4894cb9cf63ed9cff7711d0b2af1e6a",
    "commitMessage": "Update to more accessible AI models - GPT-4 and Gemini 2.5 Flash",
    "timestamp": "2025-05-29T19:05:08-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 277,
    "linesDeleted": 16,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 401 Incorrect API key provided: sk-proj-********************************************************************************************************************************************************AMkA. You can find your API key at https://platform.openai.com/account/api-keys.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.25,
        "aiPercentage": 15.2,
        "estimatedHoursWithAi": 1,
        "reasoning": "This is a straightforward configuration update replacing premium AI models (o1-pro, Gemini Pro) with more accessible alternatives (GPT-4, Gemini Flash). The changes are systematic across documentation and code, showing good consistency. The work involves updating model names, pricing information, and maintaining code structure. While simple in nature, it demonstrates solid understanding of the codebase and attention to detail in keeping all references synchronized.",
        "responseTime": 5.638,
        "tokensUsed": 1452,
        "cost": 0.006516
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-04-17:generateContent: [400 Bad Request] API key expired. Please renew the API key. [{\"@type\":\"type.googleapis.com/google.rpc.ErrorInfo\",\"reason\":\"API_KEY_INVALID\",\"domain\":\"googleapis.com\",\"metadata\":{\"service\":\"generativelanguage.googleapis.com\"}},{\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-US\",\"message\":\"API key expired. Please renew the API key.\"}]",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 1.8,
        "reasoning": "The commit updates AI model references and pricing in a clear, consistent manner across multiple files, indicating good code quality. The developer shows mid-level proficiency with attention to detail in documentation and code updates. Complexity is moderate-low as the changes are mostly textual replacements. Estimated time reflects the effort to research and update model details. AI percentage is moderate due to the structured nature of updates, suggesting possible use of templates or tools. AI assistance would likely halve the research and update time.",
        "responseTime": 2.792,
        "tokensUsed": 1231,
        "cost": 0.007795
      }
    ],
    "averageCodeQuality": 1.9,
    "averageDevLevel": 1.2,
    "averageComplexity": 1.2000000000000002,
    "averageEstimatedHours": 1.125,
    "averageAiPercentage": 11.425,
    "averageEstimatedHoursWithAi": 0.7,
    "totalTokens": 2683,
    "totalCost": 0.014311,
    "avgCostPerModel": 0.00357775,
    "codeAnalysis": {
      "totalLines": 5070,
      "codeLines": 4300,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "91.6",
      "commentPercent": "4.8",
      "textPercent": "3.6"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:59.481Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:28:03.258Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:36:37.882Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T02:05:20.594Z"
  },
  {
    "commitHash": "6fadaece054f64d48a1529ad95aec72e53446892",
    "commitMessage": "Switch OpenAI model from GPT-4 to o3-mini for enhanced reasoning",
    "timestamp": "2025-05-29T19:15:19-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 2,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: 400 Unsupported parameter: 'max_tokens' is not supported with this model. Use 'max_completion_tokens' instead.",
        "responseTime": 0,
        "tokensUsed": 0,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 1,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Simple model configuration change with consistent updates across two locations. Good practice maintaining consistency between model parameter and modelKey variable. Low complexity as it's just string replacement, but shows understanding of codebase structure. The commit message indicates awareness of model capabilities (enhanced reasoning), suggesting mid-level developer knowledge of AI models.",
        "responseTime": 5.212,
        "tokensUsed": 944,
        "cost": 0.004620000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4,
        "devLevel": 1.8,
        "complexity": 1,
        "estimatedHours": 0.25,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "This commit involves changing two string literals in an existing file. The change itself is functionally correct within the context of switching a model name. The surrounding code snippet appears reasonably structured for making an API call. Code quality for this specific change is high as it correctly implements the intended modification without introducing issues. The complexity is minimal as it's just a simple text replacement. The estimated development time and time with AI are very low due to the trivial nature of the change. The AI percentage is 0 as this specific, simple change is highly likely a manual edit rather than AI-generated code.",
        "responseTime": 11.356,
        "tokensUsed": 775,
        "cost": 0.00010514999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 0.75,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit involves a straightforward model switch from GPT-4 to o3-mini with minimal changes (2 lines added, 2 deleted). Code quality is average due to the simplicity of the update, lacking deeper refactoring or optimization. Developer level is assessed as mid-level, as the change doesn't demonstrate advanced skills or complex problem-solving. Complexity is very low since it's a direct replacement of strings. Estimated hours are minimal due to the simplicity, and AI percentage is moderate as the change could partially be guided by AI suggestions or documentation. With AI, the task would be even quicker.",
        "responseTime": 3.083,
        "tokensUsed": 849,
        "cost": 0.006085
      }
    ],
    "averageCodeQuality": 2.8499999999999996,
    "averageDevLevel": 1.425,
    "averageComplexity": 1.075,
    "averageEstimatedHours": 0.5,
    "averageAiPercentage": 11.25,
    "averageEstimatedHoursWithAi": 0.1875,
    "totalTokens": 2568,
    "totalCost": 0.010810150000000001,
    "avgCostPerModel": 0.0027025375000000003,
    "codeAnalysis": {
      "totalLines": 5331,
      "codeLines": 4561,
      "commentLines": 227,
      "textLines": 169,
      "blankLines": 374,
      "codePercent": "92.0",
      "commentPercent": "4.6",
      "textPercent": "3.4"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:26:32.088Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:26:39.561Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:26:48.196Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:26:59.804Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:28:18.237Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:46:55.131Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T02:15:39.849Z"
  },
  {
    "commitHash": "806161572dba4b907a6b1fecb55c09d7e21f4b4b",
    "commitMessage": "Enable real-time AI model testing with live API status updates",
    "timestamp": "2025-05-29T19:33:28-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 104,
    "linesDeleted": 40,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3,
        "devLevel": 2,
        "complexity": 3,
        "estimatedHours": 1,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1,
        "reasoning": "JSON parsing error: Unexpected end of JSON input",
        "responseTime": 4.98,
        "tokensUsed": 1348,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.25,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code shows good architectural improvement by replacing mock data with real API calls, but has incomplete implementation (truncated diff shows syntax error with 'result.statu'). The refactoring from simulation to actual API integration demonstrates solid understanding of async patterns and error handling. However, the incomplete nature and some structural issues suggest mid-level developer work, possibly with AI assistance given the clean but somewhat generic patterns.",
        "responseTime": 5.823,
        "tokensUsed": 1166,
        "cost": 0.005466
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.2,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit replaces simulated API calls with actual fetch requests, demonstrating use of modern async/await patterns. However, the presence of a clear typo ('statu' instead of 'status') and a nonsensical comment ('# Truncate for API limits') significantly reduces code quality and suggests a lack of careful review. The implementation doesn't fully deliver 'real-time' per-model updates as suggested by the title, instead processing results in a batch. This indicates a mid-level developer capable of implementing features but possibly lacking attention to detail. The complexity is moderate due to handling asynchronous network requests and data transformation. The task involves standard patterns highly generatable by AI tools, suggesting partial AI assistance, but the errors point to human modification or integration. AI assistance would likely reduce the coding time significantly.",
        "responseTime": 12.667,
        "tokensUsed": 1093,
        "cost": 0.00014227499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.25,
        "aiPercentage": 30.5,
        "estimatedHoursWithAi": 2,
        "reasoning": "The code quality is rated at 3.8 due to the clear transition from simulated testing to real API integration, showing good practice in replacing mock data with actual functionality. The developer level is assessed at 2.2, indicating a mid-level skill set, as the commit demonstrates competence in handling API calls but lacks advanced error handling or optimization. Complexity is moderate at 3.2, given the straightforward API integration with basic error handling. Estimated hours are 3.25 for manual implementation of the changes. AI percentage is estimated at 30.5% due to the structured and somewhat formulaic approach to the fetch request setup, which could be AI-assisted. With AI, the development time could drop to 2.0 hours due to faster boilerplate generation.",
        "responseTime": 3.334,
        "tokensUsed": 1065,
        "cost": 0.0075650000000000005
      }
    ],
    "averageCodeQuality": 3.3,
    "averageDevLevel": 2.15,
    "averageComplexity": 3.0999999999999996,
    "averageEstimatedHours": 2.5625,
    "averageAiPercentage": 35.25,
    "averageEstimatedHoursWithAi": 1.3125,
    "totalTokens": 4672,
    "totalCost": 0.013173275000000002,
    "avgCostPerModel": 0.0032933187500000004,
    "codeAnalysis": {
      "totalLines": 6059,
      "codeLines": 5223,
      "commentLines": 246,
      "textLines": 169,
      "blankLines": 421,
      "codePercent": "92.6",
      "commentPercent": "4.4",
      "textPercent": "3.0"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:10.714Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:15.165Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:28:14.888Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:46:43.964Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T02:33:46.327Z"
  },
  {
    "commitHash": "bec80275b483e36ff7e4608548febc1c1d857f62",
    "commitMessage": "Improve AI model scoring consistency and fix status display",
    "timestamp": "2025-05-29T19:42:03-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 37,
    "linesDeleted": 18,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3,
        "devLevel": 2,
        "complexity": 3,
        "estimatedHours": 1,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 1,
        "reasoning": "JSON parsing error: Unexpected end of JSON input",
        "responseTime": 6.29,
        "tokensUsed": 1695,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Well-structured improvement to AI prompt engineering. Clean code with clear documentation structure, detailed scoring criteria, and proper JSON formatting. Shows mid-level understanding of prompt optimization and system design. Moderate complexity due to comprehensive criteria definition and structured approach.",
        "responseTime": 11.035,
        "tokensUsed": 1716,
        "cost": 0.009863999999999998
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.3,
        "complexity": 1.5,
        "estimatedHours": 0.75,
        "aiPercentage": 70,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "Updates AI prompt with detailed, objective scoring criteria, improving clarity. Simple code change to a string literal.",
        "responseTime": 10.909,
        "tokensUsed": 1016,
        "cost": 0.00009329999999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit improves AI model scoring by introducing objective criteria, which shows attention to consistency and clarity. Code quality is good with no apparent syntax errors or typos, though the changes are mostly textual updates to prompts rather than complex logic. Developer level reflects mid-level skills due to clear structure and purposeful modifications. Complexity is moderate as it involves updating logic in a single file with straightforward changes. Estimated time accounts for understanding the context and implementing these updates. AI percentage is moderate as the changes show human-driven intent with possible AI assistance in formatting or phrasing.",
        "responseTime": 3.549,
        "tokensUsed": 1359,
        "cost": 0.008565
      }
    ],
    "averageCodeQuality": 3.875,
    "averageDevLevel": 2.225,
    "averageComplexity": 2.45,
    "averageEstimatedHours": 1.5625,
    "averageAiPercentage": 31.25,
    "averageEstimatedHoursWithAi": 1.125,
    "totalTokens": 5786,
    "totalCost": 0.0185223,
    "avgCostPerModel": 0.004630575,
    "codeAnalysis": {
      "totalLines": 6252,
      "codeLines": 5410,
      "commentLines": 246,
      "textLines": 169,
      "blankLines": 427,
      "codePercent": "92.9",
      "commentPercent": "4.2",
      "textPercent": "2.9"
    },
    "analyzedAt": "2025-05-30T02:42:19.591Z"
  },
  {
    "commitHash": "682eb94fd88e87f0269c5c328de8f4ff40598912",
    "commitMessage": "Fix o3-mini error handling to show proper error state instead of defaults",
    "timestamp": "2025-05-29T19:47:15-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 12,
    "linesDeleted": 6,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 3.805,
        "tokensUsed": 1449,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 0.75,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean error handling improvement with proper empty response check and meaningful error messages. Code follows good practices with clear comments and appropriate fallback values. Simple but well-executed change addressing a specific model issue.",
        "responseTime": 4.551,
        "tokensUsed": 1209,
        "cost": 0.005079
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.3,
        "complexity": 1.5,
        "estimatedHours": 0.25,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.2,
        "reasoning": "The commit adds a specific check for empty model responses (identified as an 'o3-mini issue') and improves the error handling logic. Instead of returning arbitrary default scores (3.0, 2.0, etc.) on failure, it now correctly returns 0.0 for scoring metrics, representing an inability to score. The reasoning string is also enhanced to include partial response data if available. The code change is simple but effectively addresses a specific edge case and refines error reporting accuracy. Code quality is high for this small change; complexity is low as it's confined to a single function with minimal new logic. Developer level reflects thoughtful error handling for system robustness.",
        "responseTime": 7.443,
        "tokensUsed": 1023,
        "cost": 0.000125775
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 1.8,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code quality is high with proper error handling for empty responses and meaningful error messages. No syntax errors or typos observed. Developer level assessed as mid-level due to straightforward logic and good practices in error handling. Complexity is low as the change is focused on a single file with simple conditional checks. Estimated time reflects a quick fix, and AI percentage is moderate due to structured but not overly unique patterns.",
        "responseTime": 2.413,
        "tokensUsed": 1086,
        "cost": 0.00691
      }
    ],
    "averageCodeQuality": 3.2249999999999996,
    "averageDevLevel": 1.6749999999999998,
    "averageComplexity": 1.35,
    "averageEstimatedHours": 0.625,
    "averageAiPercentage": 16.25,
    "averageEstimatedHoursWithAi": 0.55,
    "totalTokens": 4767,
    "totalCost": 0.012114775000000001,
    "avgCostPerModel": 0.0030286937500000003,
    "codeAnalysis": {
      "totalLines": 6432,
      "codeLines": 5587,
      "commentLines": 248,
      "textLines": 169,
      "blankLines": 428,
      "codePercent": "93.1",
      "commentPercent": "4.1",
      "textPercent": "2.8"
    },
    "analyzedAt": "2025-05-30T02:47:28.308Z"
  },
  {
    "commitHash": "9689e8803aa98817de3550403d9e91e93e8aa9e0",
    "commitMessage": "Fix pagination display for cost table",
    "timestamp": "2025-05-30T14:19:34-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 1296,
    "linesDeleted": 57,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 7.006,
        "tokensUsed": 1607,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 1.4,
        "complexity": 2.2,
        "estimatedHours": 3.5,
        "aiPercentage": 85,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit message 'Fix pagination display for cost table' doesn't match the actual changes, which are adding historical commit analysis data to a JSON file. This is primarily data insertion (962 new JSON entries) rather than code logic. The large line addition ratio (1296 added vs 57 deleted) suggests automated/AI-generated content. The work appears to be basic data manipulation rather than complex programming logic.",
        "responseTime": 6.34,
        "tokensUsed": 1429,
        "cost": 0.006351000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.8,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The analysis is based on the visible diff, which shows adding a large JSON block to a history file, and the commit metadata (4 files changed, significant lines added/deleted). The visible change is simple data addition, but the commit title 'Fix pagination display for cost table' implies significant logic changes in the other 3 files (not shown in the diff). Scoring reflects the likely complexity of a pagination fix involving data handling (implied by adding history data) and multiple file changes, combined with the quality of the visible, well-formatted JSON. Code quality is rated assuming the unseen pagination logic is reasonably clean, reflecting the fix nature. Developer level and complexity align with typical multi-file pagination implementations. AI percentage is an estimate for assistance on the unseen logic; the visible diff (adding data) is likely manual or scripted.",
        "responseTime": 20.026,
        "tokensUsed": 1203,
        "cost": 0.00015052499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The commit addresses pagination display issues in a cost table, involving a significant number of lines added (1296) across 4 files, indicating a moderate scope of changes. Code quality is rated well due to systematic updates and consistency as partially reflected in the diff, though not fully visible. Developer level suggests mid-level expertise with good practices inferred from the context. Complexity is moderate given the number of files and lines changed, likely involving UI logic and data handling. Estimated hours reflect the effort for such a task, while AI percentage is low as the changes seem human-driven based on the specific focus on pagination fixes.",
        "responseTime": 3.329,
        "tokensUsed": 1279,
        "cost": 0.008305
      }
    ],
    "averageCodeQuality": 2.5999999999999996,
    "averageDevLevel": 1.525,
    "averageComplexity": 2.0999999999999996,
    "averageEstimatedHours": 2.5,
    "averageAiPercentage": 32.5,
    "averageEstimatedHoursWithAi": 1.625,
    "totalTokens": 5518,
    "totalCost": 0.014806525000000001,
    "avgCostPerModel": 0.0037016312500000002,
    "codeAnalysis": {
      "totalLines": 6706,
      "codeLines": 5813,
      "commentLines": 261,
      "textLines": 169,
      "blankLines": 463,
      "codePercent": "93.1",
      "commentPercent": "4.2",
      "textPercent": "2.7"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:19.817Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T21:20:00.683Z"
  },
  {
    "commitHash": "d19262a06f4f1d114038520271fe5bdfadd39b9c",
    "commitMessage": "Add date/time display and sort commits by latest first",
    "timestamp": "2025-05-30T14:23:00-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 92,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 6.92,
        "tokensUsed": 1669,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 2.3,
        "estimatedHours": 2.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.8,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit adds historical analysis data to an existing JSON file with consistent schema. Developer shows mid-level understanding of data structure maintenance. Moderate complexity due to handling structured data with multiple nested objects and maintaining JSON integrity. Low AI percentage as this appears to be manual data compilation and organization work.",
        "responseTime": 5.145,
        "tokensUsed": 1472,
        "cost": 0.00624
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Adds date/time display using the moment library, including timezone handling. Implements sorting of commits by timestamp. Extracts sorting logic into a separate function (good practice). The changes involve parsing, formatting, sorting, and modifying the rendering logic, representing moderate complexity.",
        "responseTime": 8.34,
        "tokensUsed": 1062,
        "cost": 0.00010732499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 70,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "The commit primarily involves adding date/time display and sorting commits, which appears to be a moderate update to a JSON file with a significant number of lines added (92) compared to deletions (2). Code quality is decent with no visible syntax errors or typos in the diff, though the structure is mostly data-driven rather than complex logic. Developer level is mid-range due to the straightforward nature of the changes without advanced patterns. Complexity is moderate given the number of lines added and the integration of timestamp data. High AI percentage is inferred from the structured, repetitive nature of the JSON data additions, suggesting automated generation. Estimated time reflects a quick task, further reduced with AI assistance.",
        "responseTime": 3.028,
        "tokensUsed": 1355,
        "cost": 0.008805
      }
    ],
    "averageCodeQuality": 2.85,
    "averageDevLevel": 1.55,
    "averageComplexity": 2.05,
    "averageEstimatedHours": 1.8125,
    "averageAiPercentage": 35.125,
    "averageEstimatedHoursWithAi": 0.95,
    "totalTokens": 5558,
    "totalCost": 0.015152325000000001,
    "avgCostPerModel": 0.0037880812500000003,
    "codeAnalysis": {
      "totalLines": 6796,
      "codeLines": 5901,
      "commentLines": 262,
      "textLines": 169,
      "blankLines": 464,
      "codePercent": "93.2",
      "commentPercent": "4.1",
      "textPercent": "2.7"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:23.911Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-30T21:23:17.407Z"
  },
  {
    "commitHash": "92a7a01834065d83b8a458bc26b93254ba4166df",
    "commitMessage": "Fix commit details navigation with sorted commits",
    "timestamp": "2025-05-30T14:27:44-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 95,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 4.179,
        "tokensUsed": 1648,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4,
        "devLevel": 2,
        "complexity": 2.2,
        "estimatedHours": 1.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1.2,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit adds a single entry to an existing JSON history file with consistent schema. Mid-level understanding shown in maintaining data integrity. Moderate complexity due to nested object structure but straightforward data entry task. Low AI percentage as this appears to be manual data compilation work with human-specific analysis content.",
        "responseTime": 4.518,
        "tokensUsed": 1450,
        "cost": 0.006198
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1,
        "estimatedHours": 0.1,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.08,
        "reasoning": "The provided diff only shows the addition of a structured data entry to a JSON history file. This part of the commit is well-formatted and maintains the existing data structure, indicating high quality for a data update. The task itself is simple (adding data to an array), requiring a junior-level understanding of JSON. The complexity is minimal as it's just data addition with no logic. Estimating time and AI percentage solely on this visible change, it's a quick manual task with very little likely AI involvement beyond potentially formatting assistance. Note: The commit message suggests code changes related to navigation and sorting in a second file, which are not present in the provided diff and therefore cannot be scored.",
        "responseTime": 9.856,
        "tokensUsed": 1167,
        "cost": 0.00013905
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4,
        "devLevel": 2.1,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit involves adding structured JSON data with consistent formatting and schema, indicating good code quality with no visible errors or typos. Developer level assessed as mid-level due to competent handling of data structure maintenance without advanced patterns. Complexity is moderate due to the structured nature of JSON data and the need to maintain integrity across nested objects. Estimated time reflects a straightforward data addition task, with low AI involvement as the work appears to be manual data compilation.",
        "responseTime": 2.56,
        "tokensUsed": 1286,
        "cost": 0.00799
      }
    ],
    "averageCodeQuality": 3.125,
    "averageDevLevel": 1.4,
    "averageComplexity": 1.425,
    "averageEstimatedHours": 0.9,
    "averageAiPercentage": 11.25,
    "averageEstimatedHoursWithAi": 0.6950000000000001,
    "totalTokens": 5551,
    "totalCost": 0.014327050000000001,
    "avgCostPerModel": 0.0035817625000000002,
    "codeAnalysis": {
      "totalLines": 6891,
      "codeLines": 5990,
      "commentLines": 264,
      "textLines": 169,
      "blankLines": 468,
      "codePercent": "93.3",
      "commentPercent": "4.1",
      "textPercent": "2.6"
    },
    "analyzedAt": "2025-05-30T21:28:01.589Z"
  },
  {
    "commitHash": "d8b0b040cffff02b1b0ed53fdf9f87b1a67d0b1c",
    "commitMessage": "Optimize code analysis display with stacked progress bar",
    "timestamp": "2025-05-30T14:34:41-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 162,
    "linesDeleted": 43,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 6.087,
        "tokensUsed": 1650,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Clean JSON data addition with proper structure and consistent formatting. The commit primarily adds a single entry to an existing JSON history file, maintaining the established schema. Simple data entry task with good attention to detail in preserving the nested object structure. Junior to mid-level work as it involves understanding the data format but no complex logic or architecture decisions.",
        "responseTime": 4.329,
        "tokensUsed": 1453,
        "cost": 0.006183
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 1.2,
        "complexity": 1.1,
        "estimatedHours": 0.1,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "Analysis is based solely on the provided diff, which shows a simple addition of an entry to a JSON data array. This is a basic data manipulation task with minimal complexity, indicative of a junior-level contribution for this specific change. Code quality of the JSON snippet is good, assuming the full entry is valid JSON. Assumes the core code changes implementing the stacked progress bar were in files not included in the provided diff, making this analysis limited to the data update shown.",
        "responseTime": 7.596,
        "tokensUsed": 1109,
        "cost": 0.00012119999999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "Code quality is high with clean JSON structure and consistent formatting in the commit history file; no syntax errors or typos observed. Developer level assessed as mid-level due to straightforward data entry with good practices in maintaining schema integrity. Complexity is moderate due to nested JSON structure and multiple file changes (4 files), though the logic appears relatively simple. Estimated hours reflect the scope of changes (162 lines added, 43 deleted). AI percentage is low as the work appears manual with human-specific content in the commit data.",
        "responseTime": 2.695,
        "tokensUsed": 1303,
        "cost": 0.008215
      }
    ],
    "averageCodeQuality": 3.2249999999999996,
    "averageDevLevel": 1.25,
    "averageComplexity": 1.275,
    "averageEstimatedHours": 1.025,
    "averageAiPercentage": 11.25,
    "averageEstimatedHoursWithAi": 0.8375,
    "totalTokens": 5515,
    "totalCost": 0.0145192,
    "avgCostPerModel": 0.0036298,
    "codeAnalysis": {
      "totalLines": 6973,
      "codeLines": 6074,
      "commentLines": 263,
      "textLines": 169,
      "blankLines": 467,
      "codePercent": "93.4",
      "commentPercent": "4.0",
      "textPercent": "2.6"
    },
    "analyzedAt": "2025-05-30T21:34:54.333Z"
  },
  {
    "commitHash": "928d32273d882066adb286337f5f29736c167e04",
    "commitMessage": "Optimize analysis layout with side-by-side grid",
    "timestamp": "2025-05-30T14:38:19-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 190,
    "linesDeleted": 51,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 6.214,
        "tokensUsed": 1658,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.3,
        "complexity": 1.8,
        "estimatedHours": 1.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit primarily adds historical analysis data to an existing JSON file while maintaining consistent schema. Simple data entry task with good attention to detail, but involves understanding the data format and structure. Minor complexity due to nested objects and multiple model score entries.",
        "responseTime": 4.341,
        "tokensUsed": 1451,
        "cost": 0.006057
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit refactors the layout of the analysis view in a Svelte component using a responsive grid system (Carbon Svelte). It wraps existing elements in Grid/Column components with responsive breakpoints, achieving a side-by-side layout on larger screens. A new data entry is added to a JSON history file, and a minor debug log is added. The code demonstrates good use of a component library for UI layout, which is a standard mid-level task. Complexity is moderate due to the UI refactoring and integration of the grid system. Quality is good, though a console.log remains. Some AI assistance is plausible for generating grid structure boilerplate.",
        "responseTime": 11.157,
        "tokensUsed": 1147,
        "cost": 0.00013305
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2.1,
        "reasoning": "The commit involves a clean update to a JSON file with proper structure and formatting, maintaining the existing schema. No syntax errors or typos are evident in the provided diff. The changes are relatively straightforward, indicating a mid-level developer with attention to detail but no complex logic or architectural decisions. Complexity is moderate due to the number of lines added (190) across 3 files, though the visible diff shows simple data entry. AI assistance seems likely for formatting consistency, but the content appears human-driven.",
        "responseTime": 2.668,
        "tokensUsed": 1308,
        "cost": 0.00822
      }
    ],
    "averageCodeQuality": 3.0999999999999996,
    "averageDevLevel": 1.3499999999999999,
    "averageComplexity": 1.925,
    "averageEstimatedHours": 1.8125,
    "averageAiPercentage": 23.75,
    "averageEstimatedHoursWithAi": 1.0875,
    "totalTokens": 5564,
    "totalCost": 0.01441005,
    "avgCostPerModel": 0.0036025125,
    "codeAnalysis": {
      "totalLines": 7060,
      "codeLines": 6161,
      "commentLines": 263,
      "textLines": 169,
      "blankLines": 467,
      "codePercent": "93.4",
      "commentPercent": "4.0",
      "textPercent": "2.6"
    },
    "analyzedAt": "2025-05-30T21:38:38.387Z"
  },
  {
    "commitHash": "071b9db46940e96deb5bc9b23b8573dfef2ccc4d",
    "commitMessage": "Fix commit details header alignment and styling",
    "timestamp": "2025-05-30T14:43:22-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 121,
    "linesDeleted": 15,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 6.106,
        "tokensUsed": 1657,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.5,
        "devLevel": 1.2,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit is primarily adding historical analysis data to an existing JSON file while maintaining consistent schema. This is a simple data entry task with good attention to detail in maintaining the JSON structure. Low complexity due to being mostly data addition rather than logic implementation.",
        "responseTime": 3.965,
        "tokensUsed": 1450,
        "cost": 0.006066
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.8,
        "devLevel": 1.3,
        "complexity": 1.2,
        "estimatedHours": 0.1,
        "aiPercentage": 95,
        "estimatedHoursWithAi": 0.08,
        "reasoning": "Analysis based strictly on the provided diff, which shows the addition of a new entry to a JSON history file. The added JSON is syntactically correct and well-formatted, contributing to high code quality for data structure. The change involves simple data appending, reflecting low developer level and complexity. Estimated hours are minimal for this data update task. The AI percentage is high as the added content comprises analysis results generated by AI models.",
        "responseTime": 21.19,
        "tokensUsed": 1101,
        "cost": 0.00011925
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit focuses on styling and alignment fixes for a header, with a significant number of lines added (121) compared to deletions (15), suggesting thoughtful restructuring or detailed CSS adjustments. Code quality is high with no visible errors or typos in the provided diff, though minor issues might exist in unshown parts. Developer level is mid-range due to the nature of styling changes which require good practices but not advanced architecture. Complexity is moderate given the number of files changed (3) and the balance of additions/deletions, indicating some integration effort. Estimated time reflects a focused styling task, with AI assistance likely for some boilerplate or formatting, reducing the overall effort.",
        "responseTime": 3.429,
        "tokensUsed": 1342,
        "cost": 0.00873
      }
    ],
    "averageCodeQuality": 3.325,
    "averageDevLevel": 1.075,
    "averageComplexity": 1.3,
    "averageEstimatedHours": 0.65,
    "averageAiPercentage": 35,
    "averageEstimatedHoursWithAi": 0.4575,
    "totalTokens": 5550,
    "totalCost": 0.01491525,
    "avgCostPerModel": 0.0037288125,
    "codeAnalysis": {
      "totalLines": 7147,
      "codeLines": 6248,
      "commentLines": 263,
      "textLines": 169,
      "blankLines": 467,
      "codePercent": "93.5",
      "commentPercent": "3.9",
      "textPercent": "2.5"
    },
    "analyzedAt": "2025-05-30T21:43:54.926Z"
  },
  {
    "commitHash": "725237bc483afe291f4c6f168b6b505d1853df7e",
    "commitMessage": "Fix comprehensive table column widths for single-line headers",
    "timestamp": "2025-05-30T14:46:38-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 147,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 14.189,
        "tokensUsed": 1664,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.8,
        "devLevel": 1.2,
        "complexity": 1.3,
        "estimatedHours": 0.25,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit adds historical analysis data to an existing JSON file while maintaining consistent schema. This is a simple data entry task with minimal complexity - just appending structured data to an array. High code quality due to proper JSON formatting and consistent field structure.",
        "responseTime": 3.828,
        "tokensUsed": 1458,
        "cost": 0.006090000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit primarily adds CSS rules to control table column widths within a media query, addressing a specific layout issue for single-line headers on wider screens. It also includes a simple data addition to a JSON history file. Code quality is decent, though the frequent use of `!important` in the CSS is a minor detraction. The task is a typical mid-level front-end layout fix. Complexity is moderate due to the intricacies of consistent table styling. The repetitive nature of the CSS rules makes it a candidate for significant AI assistance.",
        "responseTime": 14.193,
        "tokensUsed": 1124,
        "cost": 0.000125475
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.5,
        "devLevel": 1.3,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The commit primarily involves adding structured JSON data to an existing file with proper formatting and schema consistency. There are no visible syntax errors or structural issues in the provided diff. The changes are straightforward, reflecting a junior to mid-level developer skill set due to the simplicity of the task. Complexity is low as it involves minimal logic or integration, focusing on data entry. Estimated time is minimal due to the repetitive nature of the update, and AI assistance appears low based on the structured but manual nature of the JSON additions.",
        "responseTime": 2.721,
        "tokensUsed": 1318,
        "cost": 0.0083
      }
    ],
    "averageCodeQuality": 3.25,
    "averageDevLevel": 1.2,
    "averageComplexity": 1.55,
    "averageEstimatedHours": 0.875,
    "averageAiPercentage": 16.375,
    "averageEstimatedHoursWithAi": 0.4125,
    "totalTokens": 5564,
    "totalCost": 0.014515475,
    "avgCostPerModel": 0.00362886875,
    "codeAnalysis": {
      "totalLines": 7234,
      "codeLines": 6335,
      "commentLines": 263,
      "textLines": 169,
      "blankLines": 467,
      "codePercent": "93.6",
      "commentPercent": "3.9",
      "textPercent": "2.5"
    },
    "analyzedAt": "2025-05-30T21:47:01.075Z"
  },
  {
    "commitHash": "a84fd6183688bf00981cdb388ce1d5a4f40f0846",
    "commitMessage": "Add GitHub navigation links to tables and commit details",
    "timestamp": "2025-05-30T14:53:12-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 5,
    "linesAdded": 198,
    "linesDeleted": 12,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 5.179,
        "tokensUsed": 1662,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 2.1,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean JSON data addition with proper structure and formatting. The commit primarily adds historical analysis data to existing JSON file while maintaining consistent schema. Code quality is high due to proper JSON formatting and field consistency. Complexity is moderate as it involves 5 files and UI navigation features beyond just data entry. Developer level appears mid-junior based on straightforward implementation patterns.",
        "responseTime": 4.566,
        "tokensUsed": 1467,
        "cost": 0.006273
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 55,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Implements GitHub link navigation by adding URLs to analysis data, rendering links in the webview table, and handling clicks via extension commands using standard VS Code APIs. Changes span multiple files (analysis, extension, webview UI/logic), leading to moderate complexity. Code quality appears high based on the provided diff, utilizing standard patterns for extension development.",
        "responseTime": 15.327,
        "tokensUsed": 1082,
        "cost": 0.00011309999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.5,
        "devLevel": 2,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit adds GitHub navigation links to tables and commit details, involving 5 files with a significant number of lines added (198) compared to deletions (12), indicating a focused feature addition. Code quality is high due to the structured JSON data addition in the diff, with no visible syntax errors or typos. Developer level is mid-range as the changes appear to follow good practices but do not exhibit advanced architectural patterns. Complexity is moderate due to the number of files changed and the integration of navigation links. Estimated time reflects a reasonable effort for implementing and testing the feature. AI percentage is moderate as the structured JSON format and repetitive data patterns suggest some AI assistance, though unique implementation details are likely human-driven.",
        "responseTime": 3.539,
        "tokensUsed": 1354,
        "cost": 0.00887
      }
    ],
    "averageCodeQuality": 3.3,
    "averageDevLevel": 1.5,
    "averageComplexity": 1.85,
    "averageEstimatedHours": 1.875,
    "averageAiPercentage": 27.5,
    "averageEstimatedHoursWithAi": 1.125,
    "totalTokens": 5565,
    "totalCost": 0.015256099999999998,
    "avgCostPerModel": 0.0038140249999999995,
    "codeAnalysis": {
      "totalLines": 7362,
      "codeLines": 6454,
      "commentLines": 267,
      "textLines": 169,
      "blankLines": 472,
      "codePercent": "93.7",
      "commentPercent": "3.9",
      "textPercent": "2.5"
    },
    "analyzedAt": "2025-05-30T21:53:36.420Z"
  },
  {
    "commitHash": "8ee4336e7c8acf0f4bdb766d4578bd5f315aaf61",
    "commitMessage": "Fix GitHub URL generation with correct repository configuration",
    "timestamp": "2025-05-30T15:38:26-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 179,
    "linesDeleted": 13,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 5.435,
        "tokensUsed": 1647,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.3,
        "devLevel": 1.7,
        "complexity": 2.2,
        "estimatedHours": 1.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean JSON structure addition with proper formatting and consistent schema. The commit appears to be primarily data entry and configuration updates for GitHub URL generation. Code quality is high due to proper JSON formatting and field consistency. Developer level is junior-to-mid based on straightforward implementation patterns. Low AI percentage indicated by consistent human patterns and project-specific context.",
        "responseTime": 5.844,
        "tokensUsed": 1478,
        "cost": 0.006678
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit correctly implements dynamic GitHub URL generation by fetching repo configuration and updating the git store. Code quality is generally good, though error/loading states for fetches in initializeGitStore could be more explicit. Developer level appears mid-range, using standard patterns but the store structure mixes history and config fetching. Complexity is moderate involving API calls, state management, and component updates.",
        "responseTime": 10.669,
        "tokensUsed": 1099,
        "cost": 0.00011774999999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4,
        "devLevel": 1.8,
        "complexity": 2.8,
        "estimatedHours": 2,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Code quality is high with proper JSON structure and formatting in the commit data addition, though minor issues could exist in unshown files. Developer level appears mid-junior due to straightforward implementation of navigation links and data updates. Complexity is moderate with 4 files changed and a mix of UI and data modifications. Estimated time reflects a focused task of moderate scope. AI percentage is estimated low-moderate based on structured but not overly templated content.",
        "responseTime": 2.874,
        "tokensUsed": 1287,
        "cost": 0.008015000000000001
      }
    ],
    "averageCodeQuality": 3,
    "averageDevLevel": 1.45,
    "averageComplexity": 2.0999999999999996,
    "averageEstimatedHours": 1.5625,
    "averageAiPercentage": 22.625,
    "averageEstimatedHoursWithAi": 0.9375,
    "totalTokens": 5511,
    "totalCost": 0.014810750000000001,
    "avgCostPerModel": 0.0037026875000000002,
    "codeAnalysis": {
      "totalLines": 7528,
      "codeLines": 6600,
      "commentLines": 279,
      "textLines": 169,
      "blankLines": 480,
      "codePercent": "93.6",
      "commentPercent": "4.0",
      "textPercent": "2.4"
    },
    "analyzedAt": "2025-05-30T22:38:44.634Z"
  },
  {
    "commitHash": "3b1c2283e905adddd38cbed9a0927add8b0e4701",
    "commitMessage": "Replace 'View Details' button text with eye icon",
    "timestamp": "2025-05-31T05:04:00-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 97,
    "linesDeleted": 6,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Empty response from model (Empty response)",
        "responseTime": 4.933,
        "tokensUsed": 1651,
        "cost": 0
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.4,
        "complexity": 1.8,
        "estimatedHours": 1,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Simple UI change replacing text with icon. Clean implementation with proper JSON structure in history file. Low complexity as it's primarily a visual/UX improvement. Junior-level work due to straightforward nature of text-to-icon replacement. Moderate AI assistance likely for icon implementation patterns.",
        "responseTime": 5.19,
        "tokensUsed": 1439,
        "cost": 0.006021
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.3,
        "devLevel": 1.9,
        "complexity": 2,
        "estimatedHours": 1,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "The commit involves replacing 'View Details' text with an eye icon in UI components. The code changes are straightforward, implementing standard practices like using an icon component (likely from a library), adding necessary styling (`cursor: pointer`), and including accessibility features (`aria-label`). The large number of added lines is primarily due to data entry in the JSON history file, not complex logic. Code quality is good due to clean implementation and accessibility consideration. Developer level reflects a standard junior/mid-level UI task. Complexity is low as the logic is minimal. AI percentage reflects the blend of promptable UI code changes and manual data entry.",
        "responseTime": 14.574,
        "tokensUsed": 1155,
        "cost": 0.00013567499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Code quality is decent with no apparent syntax errors or typos in the commit message or diff, though the change (replacing button text with an icon) is relatively straightforward. Developer level is mid-range due to the simplicity of the task and lack of complex architecture or error handling. Complexity is moderate given 3 files changed and a reasonable number of lines added (97) versus deleted (6), indicating some integration but not high intricacy. Estimated hours reflect a simple UI update task. AI percentage is low as the change appears human-driven with specific context for a UI tweak.",
        "responseTime": 2.971,
        "tokensUsed": 1316,
        "cost": 0.00842
      }
    ],
    "averageCodeQuality": 3,
    "averageDevLevel": 1.275,
    "averageComplexity": 1.575,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 18.75,
    "averageEstimatedHoursWithAi": 0.75,
    "totalTokens": 5561,
    "totalCost": 0.014576675,
    "avgCostPerModel": 0.00364416875,
    "codeAnalysis": {
      "totalLines": 7615,
      "codeLines": 6687,
      "commentLines": 279,
      "textLines": 169,
      "blankLines": 480,
      "codePercent": "93.7",
      "commentPercent": "3.9",
      "textPercent": "2.4"
    },
    "analyzedAt": "2025-05-31T12:04:20.474Z"
  },
  {
    "commitHash": "5ac23561ea162ba4f1bc1dad909aa45273efbce8",
    "commitMessage": "Fix OpenAI o3-mini model empty response issue",
    "timestamp": "2025-05-31T05:17:52-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 5,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit introduces a minor yet clean update by adding model pricing details for 'o3-mini' and increasing the token limit, which addresses the empty response issue. There are no syntax errors or structural problems, and the change is straightforward with minimal integration complexity. This indicates a mid-level developer approach executed efficiently, with likely minimal AI assistance.",
        "responseTime": 10.552,
        "tokensUsed": 2142,
        "cost": 0.36252
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 0.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "Clean, well-formatted code with proper commenting and consistent structure. The fix addresses a specific API limitation by adding pricing configuration and increasing token limits. Simple configuration changes requiring basic understanding of the OpenAI API. No syntax errors or structural issues observed.",
        "responseTime": 4.722,
        "tokensUsed": 1088,
        "cost": 0.004872
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 0.75,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit is very simple, involving basic configuration updates (pricing data) and a parameter change (max_completion_tokens) in a single file. The added code is syntactically correct and clean. The developer level is assessed as junior based on the fundamental nature of the changes presented in this specific commit. Complexity is low due to the single file and straightforward modifications. AI assistance is plausible for diagnosing the 'empty response' issue and suggesting potential areas to modify (like tokens or config), but the implementation itself is too specific and simple for high AI generation.",
        "responseTime": 10.876,
        "tokensUsed": 876,
        "cost": 0.00011047499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The code is clean with no syntax errors or typos, and the changes are well-structured. However, the scope is very limited, involving only minor updates to configuration values and a single parameter adjustment. Developer level is assessed as mid-junior due to the simplicity of the changes with no advanced patterns or error handling. Complexity is low as it involves minimal logic and a single file. Development time is short due to the straightforward nature of the updates, and AI assistance is estimated to be moderate due to the standard pattern of parameter tweaking.",
        "responseTime": 2.671,
        "tokensUsed": 1002,
        "cost": 0.00677
      }
    ],
    "averageCodeQuality": 4.275,
    "averageDevLevel": 1.8499999999999999,
    "averageComplexity": 1.575,
    "averageEstimatedHours": 0.8125,
    "averageAiPercentage": 23.75,
    "averageEstimatedHoursWithAi": 0.4375,
    "totalTokens": 5108,
    "totalCost": 0.374272475,
    "avgCostPerModel": 0.09356811875,
    "codeAnalysis": {
      "totalLines": 7706,
      "codeLines": 6778,
      "commentLines": 279,
      "textLines": 169,
      "blankLines": 480,
      "codePercent": "93.8",
      "commentPercent": "3.9",
      "textPercent": "2.3"
    },
    "analyzedAt": "2025-05-31T12:18:12.411Z"
  },
  {
    "commitHash": "92aba0c2421025d418651078461178a4dc61555e",
    "commitMessage": "Add user details page with charts and statistics",
    "timestamp": "2025-05-31T14:51:14-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 5,
    "linesAdded": 670,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 6,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 3,
        "reasoning": "The commit introduces a user details page featuring charts and statistics, spanning five files with 670 lines added, which indicates a non-trivial implementation. The code appears clean with no obvious syntax or structural issues, reflecting solid code quality. The integration of charts and statistics points to moderate complexity that fits a mid-level developer's work. Moreover, the work seems primarily human-written with minimal AI intervention, as evidenced by a low AI percentage estimate and a correspondingly reduced development time when assisted by AI.",
        "responseTime": 11.739,
        "tokensUsed": 2123,
        "cost": 0.30863999999999997
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 4,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 2,
        "reasoning": "Clean JSON structure with proper formatting and consistent data patterns. The commit adds substantial functionality (670 lines) for user details page with charts and statistics. Code shows good organization with proper nested objects and consistent field naming. However, the large line addition suggests likely AI assistance for generating boilerplate chart/statistics code. Mid-level complexity due to multiple components (5 files) and data visualization integration.",
        "responseTime": 5.622,
        "tokensUsed": 1417,
        "cost": 0.006231
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.8,
        "devLevel": 2.3,
        "complexity": 3.5,
        "estimatedHours": 6,
        "aiPercentage": 40,
        "estimatedHoursWithAi": 3.5,
        "reasoning": "Analysis is based on the commit message, file count, and line counts provided, as the code diff for this specific commit was not available. The scores reflect the estimated complexity and effort for a feature of this description and size, inferring standard development practices. A 'user details page with charts and statistics' typically involves UI components, data fetching, processing, and visualization logic across multiple files, suggesting moderate complexity and requiring mid-level development skills. The significant line count (670) implies a substantial amount of code, likely involving generated or boilerplate code, making AI assistance plausible.",
        "responseTime": 19.947,
        "tokensUsed": 1150,
        "cost": 0.00013394999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 3.5,
        "estimatedHours": 10,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 8,
        "reasoning": "The commit adds a user details page with charts and statistics, involving 5 files and a significant number of lines added (670). Code quality is high with no apparent syntax errors or structural issues in the provided diff snippet, though minor issues could exist in the full codebase. Developer level is mid-range due to the implementation of a feature with moderate complexity. Complexity is rated moderate-high due to multiple files and integration of UI elements like charts. Estimated hours reflect the effort for a feature of this scope. AI percentage is low as the work appears to be primarily human-driven with unique feature implementation.",
        "responseTime": 3.186,
        "tokensUsed": 1285,
        "cost": 0.008295
      }
    ],
    "averageCodeQuality": 4,
    "averageDevLevel": 2.225,
    "averageComplexity": 3.15,
    "averageEstimatedHours": 6.5,
    "averageAiPercentage": 33.75,
    "averageEstimatedHoursWithAi": 4.125,
    "totalTokens": 5975,
    "totalCost": 0.32329994999999995,
    "avgCostPerModel": 0.08082498749999999,
    "codeAnalysis": {
      "totalLines": 8183,
      "codeLines": 7192,
      "commentLines": 305,
      "textLines": 169,
      "blankLines": 517,
      "codePercent": "93.8",
      "commentPercent": "4.0",
      "textPercent": "2.2"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "abnormal",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:21:13.684Z",
        "reason": "Manual status change"
      },
      {
        "previousStatus": "abnormal",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T05:27:27.656Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-05-31T21:51:42.761Z"
  },
  {
    "commitHash": "88c694cc5c61545d3a9cd062daa077fac1e2ee42",
    "commitMessage": "Enhance UI consistency and add Alerts page for outlier commits",
    "timestamp": "2025-06-01T00:03:55-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 16,
    "linesAdded": 1855,
    "linesDeleted": 424,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 3.8,
        "estimatedHours": 6,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 3,
        "reasoning": "The commit introduces UI consistency enhancements and a dedicated Alerts page, affecting 16 files and involving significant additions and deletions. The changes appear clean and well-organized, indicating a clear understanding of design and implementation best practices. The level of modifications suggests that the developer is at a mid-level, handling design consistency across multiple components. Due to the range and scope of changes, the work seems moderately complex with an estimated manual effort of around 6 hours that could potentially be reduced to roughly 3 hours with minimal AI assistance.",
        "responseTime": 8.072,
        "tokensUsed": 2053,
        "cost": 0.29508
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 2.1,
        "complexity": 3.8,
        "estimatedHours": 12,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 8.5,
        "reasoning": "Large-scale UI changes across 16 files with significant line additions (1855+) suggest substantial feature implementation. The commit removes historical data from JSON file, indicating data management changes. High file count and line changes indicate complex UI consistency work and new alerts functionality. Pattern suggests moderate AI assistance for UI component generation and styling consistency.",
        "responseTime": 6.238,
        "tokensUsed": 1384,
        "cost": 0.0059640000000000006
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 20,
        "aiPercentage": 55,
        "estimatedHoursWithAi": 14.5,
        "reasoning": "The commit adds a new 'Alerts' page with table display and enhances UI consistency across multiple files. Code quality is generally good, utilizing standard React patterns and hooks. Developer level is mid-to-senior, capable of implementing a new feature and managing state/data display. Complexity is high due to adding a new page, fetching/displaying data, and broad UI changes across 16 files. Estimated time reflects the scope of adding a significant feature. AI likely assisted in generating component boilerplate, table structure, and data fetching logic.",
        "responseTime": 19.143,
        "tokensUsed": 1128,
        "cost": 0.00012644999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 2.2,
        "complexity": 3.8,
        "estimatedHours": 20,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 14,
        "reasoning": "Code quality is rated at 3.5 due to the large scope of changes (16 files, 1855 lines added) with no visible syntax errors or typos in the provided diff snippet, though minor issues may exist in unshown files. Developer level is mid-range at 2.2, reflecting competent handling of UI consistency and feature addition, but lacking evidence of advanced architectural patterns. Complexity is high at 3.8 due to the significant number of files changed and lines modified, indicating integration across multiple components. Estimated hours are set at 20.0 given the volume of work, while AI percentage is moderate at 30.0 as the commit shows a mix of structured updates and potential AI assistance in repetitive UI tasks. Estimated hours with AI are reduced to 14.0 accordingly.",
        "responseTime": 7.657,
        "tokensUsed": 1312,
        "cost": 0.00886
      }
    ],
    "averageCodeQuality": 3.575,
    "averageDevLevel": 2.3,
    "averageComplexity": 3.75,
    "averageEstimatedHours": 14.5,
    "averageAiPercentage": 40,
    "averageEstimatedHoursWithAi": 10,
    "totalTokens": 5877,
    "totalCost": 0.31003045,
    "avgCostPerModel": 0.0775076125,
    "codeAnalysis": {
      "totalLines": 9602,
      "codeLines": 8338,
      "commentLines": 424,
      "textLines": 169,
      "blankLines": 671,
      "codePercent": "93.4",
      "commentPercent": "4.7",
      "textPercent": "1.9"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-01T06:22:44.683Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-06-01T06:20:30.816Z"
  },
  {
    "commitHash": "f99efcc0571986e52a475a63337167248459c31a",
    "commitMessage": "Add project details page with comprehensive analytics",
    "timestamp": "2025-05-31T22:10:51-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 706,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 1.7,
        "complexity": 2,
        "estimatedHours": 4,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit introduces a new project details page with a clean HTML structure, linked stylesheets, and Chart.js for analytics. The code appears well-organized with no visible syntax errors, reflecting a good level of quality. However, the implementation is relatively basic and straightforward, indicative of a junior developer using standard patterns and minimal error-handling. The added functionality is moderately simple, leading to an estimate of 4 hours of work manually, which could be reduced to around 2 hours with AI assistance.",
        "responseTime": 8.361,
        "tokensUsed": 2124,
        "cost": 0.32039999999999996
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 1.8,
        "complexity": 2.4,
        "estimatedHours": 4.5,
        "aiPercentage": 75,
        "estimatedHoursWithAi": 2,
        "reasoning": "HTML structure is incomplete (cuts off mid-element), basic frontend patterns with standard navigation and layout. Large line count (706) suggests mostly boilerplate/template code. Uses external CDN for Chart.js indicating analytics features. Quality reduced due to incomplete diff and basic implementation patterns typical of AI-generated frontend templates.",
        "responseTime": 6.473,
        "tokensUsed": 1357,
        "cost": 0.005919
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Implements a new frontend page with multiple data fetching points and chart visualizations using Chart.js. Code quality is fair with standard structures but basic error handling. Developer level appears mid-range based on common patterns used. Complexity is moderate-high due to multiple data integrations and rendering requirements. Estimated time reflects significant code generation likely assisted by AI for boilerplate and charting logic.",
        "responseTime": 33.024,
        "tokensUsed": 1096,
        "cost": 0.00011752499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is good with proper HTML structure and no visible syntax errors or typos in the provided snippet; minor deduction for lack of visible error handling or advanced features. Developer level suggests mid-level skills due to organized layout and use of external libraries like Chart.js. Complexity is moderate given the creation of a new detailed page with multiple sections and integration of analytics tools. Estimated hours reflect the effort for a new page with structured content. AI percentage is moderate due to standard patterns and library usage that could be AI-assisted.",
        "responseTime": 3.399,
        "tokensUsed": 1209,
        "cost": 0.007755
      }
    ],
    "averageCodeQuality": 3.625,
    "averageDevLevel": 2,
    "averageComplexity": 2.75,
    "averageEstimatedHours": 3.6875,
    "averageAiPercentage": 42.625,
    "averageEstimatedHoursWithAi": 1.8125,
    "totalTokens": 5786,
    "totalCost": 0.334191525,
    "avgCostPerModel": 0.08354788125,
    "codeAnalysis": {
      "totalLines": 9700,
      "codeLines": 8436,
      "commentLines": 424,
      "textLines": 169,
      "blankLines": 671,
      "codePercent": "93.4",
      "commentPercent": "4.7",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-01T06:24:24.470Z"
  },
  {
    "commitHash": "d39a26abf6b9ff4659e690757005cc4ea8512f91",
    "commitMessage": "Improve UI alignment and enhance commit details with token pricing",
    "timestamp": "2025-06-01T00:48:12-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 7,
    "linesAdded": 469,
    "linesDeleted": 77,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.1,
        "devLevel": 2.2,
        "complexity": 2.6,
        "estimatedHours": 3,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit introduces clear and well-structured improvements in handling commit analysis records by checking for existing entries before updating or inserting new ones. The code is clean and functional, though error handling could be enhanced, which slightly reduces the score. The logic involves typical data updates and JSON file writes, indicating moderate complexity and mid-level developer decisions. While the structure is standard enough to suggest some AI assistance in the routine aspects, the implementation remains custom enough to score around 25% AI involvement.",
        "responseTime": 10.59,
        "tokensUsed": 2232,
        "cost": 0.33894
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 2.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Clean code with proper error handling and duplicate checking. Good architectural decision to separate initial commit creation from analysis updates. Code follows consistent patterns with meaningful variable names. The logic for handling existing vs new entries shows solid mid-level thinking. Minor complexity from database operations and status management, but overall straightforward implementation.",
        "responseTime": 5.196,
        "tokensUsed": 1442,
        "cost": 0.0061259999999999995
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.3,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Clean implementation of database update/initialization logic (Code Quality 3.7), demonstrating competence with standard Node.js patterns (Dev Level 2.3). Complexity (3.4) reflects changes across 7 files for backend persistence and implied UI/data enhancements. The clean, standard code structure suggests moderate AI assistance (AI% 45.5), leading to an estimated development time with AI (1.25h) significantly lower than estimated manual time (2.30h), derived based on the likely acceleration factor at this AI percentage.",
        "responseTime": 56.612,
        "tokensUsed": 1119,
        "cost": 0.00012375
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is good with clear structure and logic for handling existing commit updates, though minor issues like lack of extensive error handling for file operations are noted. Developer level reflects mid-level competence with logical updates and decent architecture. Complexity is moderate due to multiple logical checks and data structure management across 7 files. Estimated hours account for the significant lines added (469) and integration of new fields. AI percentage is moderate as the code shows some standardized patterns but retains unique logic implementation.",
        "responseTime": 2.855,
        "tokensUsed": 1240,
        "cost": 0.00784
      }
    ],
    "averageCodeQuality": 3.95,
    "averageDevLevel": 2.275,
    "averageComplexity": 3,
    "averageEstimatedHours": 2.825,
    "averageAiPercentage": 33.875,
    "averageEstimatedHoursWithAi": 1.4375,
    "totalTokens": 6033,
    "totalCost": 0.35302975000000003,
    "avgCostPerModel": 0.08825743750000001,
    "codeAnalysis": {
      "totalLines": 9843,
      "codeLines": 8562,
      "commentLines": 431,
      "textLines": 169,
      "blankLines": 681,
      "codePercent": "93.5",
      "commentPercent": "4.7",
      "textPercent": "1.8"
    },
    "analyzedAt": "2025-06-01T06:49:15.869Z"
  },
  {
    "commitHash": "74bd93cfa64cfdfbb7c4c75191bc0b4d3964c952",
    "commitMessage": "Ensure consistent model card alignment with reserved badge space",
    "timestamp": "2025-06-01T00:58:19-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 6,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.3,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit makes a small, clear improvement to UI consistency by ensuring an empty badge container reserves space. The code changes in both JavaScript and CSS are minimal and clean, with no syntax errors or architectural issues. The fix is straightforward in scope, involving only two files with minor logic and styling adjustments, making it a low-complexity change that a junior developer could implement manually in about an hour, or even faster with AI assistance.",
        "responseTime": 9.019,
        "tokensUsed": 1969,
        "cost": 0.31002
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 0.75,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean, focused UI fix with proper CSS spacing techniques. Code is well-structured with no syntax errors. However, this is a straightforward layout alignment issue requiring basic HTML/CSS knowledge. The solution is simple but effective - removing conditional rendering and adding min-height for consistent spacing.",
        "responseTime": 4.533,
        "tokensUsed": 1185,
        "cost": 0.005223
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 2.4,
        "estimatedHours": 1.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit addresses a UI layout shift issue by removing conditional rendering in JS and reserving vertical space using CSS `min-height`. The approach is standard for this type of problem. Code quality is good overall, but the CSS includes a redundant `:empty` rule setting the same `min-height` already applied to the main class, which is a minor imperfection. The complexity is low moderate, involving coordinated changes in two frontend files to fix a visual inconsistency. The patterns used are common and easily generatable by AI.",
        "responseTime": 24.942,
        "tokensUsed": 937,
        "cost": 0.00011077499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "Code is clean with no syntax errors or typos; changes are minimal and well-structured. Developer level is mid-range due to straightforward CSS and JS modifications without advanced patterns. Complexity is low as it involves only 2 files with simple styling and conditional logic removal. Estimated time is short due to the small scope; AI percentage is moderate as the changes follow common patterns but show human intent in specific styling choices.",
        "responseTime": 2.612,
        "tokensUsed": 1034,
        "cost": 0.006670000000000001
      }
    ],
    "averageCodeQuality": 4.1,
    "averageDevLevel": 1.925,
    "averageComplexity": 1.7999999999999998,
    "averageEstimatedHours": 1.125,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 0.8125,
    "totalTokens": 5125,
    "totalCost": 0.322023775,
    "avgCostPerModel": 0.08050594375,
    "codeAnalysis": {
      "totalLines": 9983,
      "codeLines": 8683,
      "commentLines": 438,
      "textLines": 169,
      "blankLines": 693,
      "codePercent": "93.5",
      "commentPercent": "4.7",
      "textPercent": "1.8"
    },
    "analyzedAt": "2025-06-01T06:59:58.513Z"
  },
  {
    "commitHash": "5e60634b56e281230f89f1f14675fe59346c08ea",
    "commitMessage": "Remove outer border from progress bar container",
    "timestamp": "2025-06-01T01:46:00-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 0,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.7,
        "devLevel": 1.3,
        "complexity": 1,
        "estimatedHours": 0.25,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "This commit involves a straightforward removal of a border style from a CSS progress bar, resulting in a very minor change with no syntax errors or complex logic. The simplicity of the change suggests a junior-level modification, with low overall complexity and minimal development time. Even with AI assistance, the change would require only a fraction of the manual time.",
        "responseTime": 11.668,
        "tokensUsed": 1838,
        "cost": 0.3225
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.5,
        "devLevel": 1.2,
        "complexity": 1.1,
        "estimatedHours": 0.1,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "Simple CSS border removal with clean execution. No syntax errors or issues. Very basic change requiring minimal skill - just deleting one line. Extremely low complexity with single file, single line modification. Human-written given the simplicity and context-specific nature of UI styling decisions.",
        "responseTime": 4.756,
        "tokensUsed": 875,
        "cost": 0.004305
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.8,
        "devLevel": 2.3,
        "complexity": 1.2,
        "estimatedHours": 0.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.4,
        "reasoning": "The change involves removing a single line of standard CSS. Code quality is high as there are no visible errors or syntax issues in the diff. Developer level is difficult to assess from such a simple change, but the use of CSS variables suggests potentially mid-level practices in the project structure (score is a guess). Complexity is very low due to the single file and single line modification with no logical changes. Estimated development time is minimal, covering identification of the rule, deletion, and basic verification. AI percentage is low as removing a specific line is a direct manual edit, although AI could potentially help locate the relevant CSS rule. Estimated hours with AI are slightly lower, reflecting potential minimal time savings in finding the code.",
        "responseTime": 15.101,
        "tokensUsed": 765,
        "cost": 0.00011137499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 0.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "The change is a simple removal of a single CSS property with no syntax errors or structural issues, resulting in a high code quality score. The developer level is rated as junior due to the basic nature of the change with no advanced patterns or architecture involved. Complexity is low as it involves only one line deletion in a single file with no logic or integration points. Estimated time is minimal due to the simplicity of the task. AI percentage is moderate as the change is straightforward and could involve some AI assistance for quick CSS adjustments.",
        "responseTime": 2.433,
        "tokensUsed": 820,
        "cost": 0.00583
      }
    ],
    "averageCodeQuality": 4.625,
    "averageDevLevel": 1.575,
    "averageComplexity": 1.2,
    "averageEstimatedHours": 0.275,
    "averageAiPercentage": 12.5,
    "averageEstimatedHoursWithAi": 0.18750000000000003,
    "totalTokens": 4298,
    "totalCost": 0.33274637500000004,
    "avgCostPerModel": 0.08318659375000001,
    "codeAnalysis": {
      "totalLines": 10089,
      "codeLines": 8794,
      "commentLines": 438,
      "textLines": 169,
      "blankLines": 688,
      "codePercent": "93.5",
      "commentPercent": "4.7",
      "textPercent": "1.8"
    },
    "analyzedAt": "2025-06-01T07:53:27.086Z"
  },
  {
    "commitHash": "934c3b583a4db7af09100e3cea1dcd02557d2e93",
    "commitMessage": "Fix gap between sidebar and main content definitively",
    "timestamp": "2025-06-01T19:26:44-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 8,
    "linesDeleted": 6,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.3,
        "devLevel": 1.8,
        "complexity": 1.7,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit fixes a layout gap by replacing a border with a box-shadow and updating the positioning of the main content area. The CSS changes are clean, free of syntax errors, and well-structured, reflecting a simple, straightforward fix likely handled by a junior or early mid-level developer. The overall change is minimal, limited to a single stylesheet with few lines modified, leading to a low complexity score. The task could realistically take about 1 hour to complete manually, with potential for reducing that time to 0.5 hours with AI assistance.",
        "responseTime": 8.822,
        "tokensUsed": 1838,
        "cost": 0.28271999999999997
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.1,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Clean CSS refactoring with proper positioning changes. Replaced border with box-shadow (good technique), switched from flex/margin layout to fixed positioning. Code is syntactically correct with consistent formatting. Mid-level approach showing understanding of CSS layout systems and visual rendering differences between borders and shadows. Simple scope limited to layout adjustments in single CSS file.",
        "responseTime": 5.737,
        "tokensUsed": 1181,
        "cost": 0.005415
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.1,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit addresses a layout issue by switching the positioning strategy for the main content from flex/margin-based to fixed positioning relative to the sidebar. Code quality is good; the CSS syntax is correct and follows standard patterns. Developer level is mid-level as it requires a solid understanding of CSS layout models (flex vs fixed) and their interactions. Complexity is rated as moderate-to-high because changing the fundamental positioning strategy for major layout elements can have non-obvious side effects on scrolling, stacking contexts, and child elements, potentially requiring further adjustments elsewhere. The specific pattern of using fixed positioning for sidebar and main content is common, making it likely that AI assistance could have been used to suggest the approach or generate the initial CSS rules.",
        "responseTime": 15.334,
        "tokensUsed": 958,
        "cost": 0.000129225
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Code quality is high with clean CSS changes, no syntax errors, and a clear intent to fix layout issues by replacing border with box-shadow and adjusting positioning. Developer level is mid-range due to straightforward styling fixes without advanced patterns or architecture. Complexity is low as it involves a single file with simple CSS modifications. Estimated time reflects a quick fix for an experienced developer. AI percentage is moderate due to standard CSS patterns that could be partially AI-assisted.",
        "responseTime": 4.62,
        "tokensUsed": 1022,
        "cost": 0.00669
      }
    ],
    "averageCodeQuality": 4.2,
    "averageDevLevel": 2.075,
    "averageComplexity": 2.175,
    "averageEstimatedHours": 1.6875,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 0.8125,
    "totalTokens": 4999,
    "totalCost": 0.29495422499999996,
    "avgCostPerModel": 0.07373855624999999,
    "codeAnalysis": {
      "totalLines": 10853,
      "codeLines": 9447,
      "commentLines": 482,
      "textLines": 169,
      "blankLines": 755,
      "codePercent": "93.6",
      "commentPercent": "4.8",
      "textPercent": "1.7"
    },
    "analyzedAt": "2025-06-02T01:27:58.125Z"
  },
  {
    "commitHash": "2020774c8d1ab8037831b3c7f05547011c61b8a6",
    "commitMessage": "Fix spacing between sidebar and main content",
    "timestamp": "2025-06-01T18:11:06-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 13,
    "linesDeleted": 1,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The commit makes minor CSS adjustments to fix spacing issues by adding properties such as margin, padding, and positioning. The changes are syntactically correct and well-structured, with no apparent errors. The modifications are simple and limited to styling in one file, suggesting a junior-level or basic fix with low overall complexity. The task could likely be completed in around an hour manually, and even faster with AI assistance.",
        "responseTime": 11.461,
        "tokensUsed": 1995,
        "cost": 0.31067999999999996
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Clean CSS changes with proper syntax and consistent formatting. Changes are straightforward layout fixes (margin resets, positioning, overflow handling) typical of junior-to-mid level work. Low complexity as it's purely CSS styling adjustments. Human-like incremental fixes rather than AI-generated patterns.",
        "responseTime": 4.879,
        "tokensUsed": 1259,
        "cost": 0.0055650000000000005
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit addresses a layout issue by applying standard CSS practices for full-height flexbox containers (`html, body` reset, `height: 100vh`, `display: flex`). It correctly uses `flex-shrink: 0;` on the header, indicating a good understanding of flexbox. The addition of `position: relative;` to `.app-container` and `main` is slightly unusual without context for absolute positioning, but not necessarily an error. The complexity is moderate leaning towards complex as it involves coordinating multiple CSS properties across several elements to fix a layout issue, which requires understanding how these properties interact. The pattern is common enough that AI assistance is likely, but the specific application shows some human curation. Estimated time reflects debugging/identifying the layout issue and applying the fix.",
        "responseTime": 17.858,
        "tokensUsed": 997,
        "cost": 0.0001317
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "Code quality is high with clean CSS changes, no syntax errors, and proper formatting. Developer level is mid-junior due to straightforward styling fixes without advanced patterns or architecture. Complexity is low as it involves simple CSS property adjustments in one file. Estimated time is minimal due to the small scope of changes. AI percentage is moderate as the changes are basic and could be partially assisted by tools like code suggestions.",
        "responseTime": 2.673,
        "tokensUsed": 1068,
        "cost": 0.00685
      }
    ],
    "averageCodeQuality": 4.075,
    "averageDevLevel": 1.925,
    "averageComplexity": 2.05,
    "averageEstimatedHours": 1.5625,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 0.6875,
    "totalTokens": 5319,
    "totalCost": 0.3232267,
    "avgCostPerModel": 0.080806675,
    "codeAnalysis": {
      "totalLines": 11172,
      "codeLines": 9661,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.1",
      "commentPercent": "4.7",
      "textPercent": "2.2"
    },
    "analyzedAt": "2025-06-02T01:36:25.448Z"
  },
  {
    "commitHash": "086092211ca09fb25e9477e2ef4b7ba3fdfc378b",
    "commitMessage": "Fix sidebar and header layout for proper full-height display",
    "timestamp": "2025-06-01T18:03:53-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 14,
    "linesAdded": 150,
    "linesDeleted": 9,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.5,
        "complexity": 2.5,
        "estimatedHours": 2.75,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit shows clean, well-organized changes. The addition of error handling in the analytics fetch function and the asynchronous logout function demonstrates thoughtful coding practices. Despite touching 14 files, most changes are straightforward script insertions and minor logic enhancements, indicating moderate overall complexity. The modifications appear to have been implemented manually with little reliance on AI.",
        "responseTime": 7.052,
        "tokensUsed": 1939,
        "cost": 0.27005999999999997
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 2.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Clean code with proper error handling and authentication patterns. Good separation of concerns with auth-utils.js inclusion across multiple files. Proper HTTP status checking and redirect logic. Mid-level developer work shown through consistent authentication implementation and async/await usage. Moderate complexity due to multiple file coordination and authentication flow integration.",
        "responseTime": 4.902,
        "tokensUsed": 1425,
        "cost": 0.006099
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit addresses layout issues across multiple files (inferred from commit message and file count/lines) and includes supporting JavaScript changes for authentication. The visible JS changes implement standard patterns (adding auth headers, basic 401 handling, async logout with API call) characteristic of a mid-level developer. Code quality is good for the visible parts, though error handling is basic. Complexity is moderate due to changes across 14 files and likely requiring careful coordination of layout elements (CSS/HTML) and testing across pages. The standard nature of the JS patterns suggests potential AI assistance, but layout fixes often require significant manual iteration, leading to a moderate AI percentage. The time estimates reflect the effort involved in diagnosing, implementing, and testing layout changes along with the minor JS updates.",
        "responseTime": 15.206,
        "tokensUsed": 1204,
        "cost": 0.000149475
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is good with proper error handling (e.g., 401 redirect, try-catch in logout), but minor issues like missing newline at file ends exist. Developer level reflects mid-level competence with decent auth header usage and API integration. Complexity is moderate due to changes across 14 files but mostly straightforward updates. Estimated time accounts for testing across multiple pages. AI percentage is low-moderate due to consistent human-like error handling patterns.",
        "responseTime": 4.275,
        "tokensUsed": 1219,
        "cost": 0.007655
      }
    ],
    "averageCodeQuality": 3.9750000000000005,
    "averageDevLevel": 2.35,
    "averageComplexity": 2.875,
    "averageEstimatedHours": 2.75,
    "averageAiPercentage": 30.125,
    "averageEstimatedHoursWithAi": 1.4375,
    "totalTokens": 5787,
    "totalCost": 0.283963475,
    "avgCostPerModel": 0.07099086875,
    "codeAnalysis": {
      "totalLines": 11259,
      "codeLines": 9748,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.1",
      "commentPercent": "4.7",
      "textPercent": "2.2"
    },
    "analyzedAt": "2025-06-02T01:36:43.178Z"
  },
  {
    "commitHash": "24fb3a8748980150578df52b9fff393a15ffb5af",
    "commitMessage": "Make Analytics the home page and fix login redirect",
    "timestamp": "2025-06-01T17:19:08-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 12,
    "linesAdded": 30,
    "linesDeleted": 24,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.3,
        "devLevel": 1.5,
        "complexity": 1.8,
        "estimatedHours": 2,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit makes straightforward modifications to the navigation links in multiple HTML files, switching the home page from Commits to Analytics and fixing a login redirect issue. The changes are clean and free from syntax errors, representing a basic bug fix and UI adjustment typical of junior-level work. Although the commit touches several files, the underlying logic remains simple, so the overall complexity is low. The estimated manual work is around 2 hours, with AI likely reducing the effort by about half.",
        "responseTime": 13.561,
        "tokensUsed": 2695,
        "cost": 0.44664
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "Clean HTML navigation changes with consistent structure across files. Simple reordering and link updates show junior-level work - straightforward navigation restructuring without complex logic. No syntax errors, proper HTML structure maintained, but represents basic front-end modifications requiring minimal technical skill.",
        "responseTime": 4.502,
        "tokensUsed": 1399,
        "cost": 0.005840999999999999
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 3,
        "reasoning": "The visible diff shows clean and simple HTML navigation updates across multiple files. The complexity comes from applying this change consistently to 12 files and the implied login redirect fix mentioned in the commit message (not visible in the diff). The visible changes are boilerplate, easily assisted by AI or simple find/replace, suggesting a moderate AI percentage. The development level is judged slightly above junior due to the multi-file nature of the task and the second 'fix login redirect' item.",
        "responseTime": 9.909,
        "tokensUsed": 1112,
        "cost": 0.00012232499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is high with no syntax errors or typos observed; changes are clean and consistent across multiple files. Developer level is mid-range due to straightforward navigation updates without advanced patterns or architecture. Complexity is moderate given the number of files changed (12) but limited logic or integration complexity. Estimated time reflects updating multiple HTML files manually. AI percentage is low-moderate as changes show human-like consistency but are repetitive, suggesting possible template or tool assistance.",
        "responseTime": 2.716,
        "tokensUsed": 1250,
        "cost": 0.00783
      }
    ],
    "averageCodeQuality": 4.3,
    "averageDevLevel": 1.8,
    "averageComplexity": 2.15,
    "averageEstimatedHours": 2.625,
    "averageAiPercentage": 22.5,
    "averageEstimatedHoursWithAi": 1.5625,
    "totalTokens": 6456,
    "totalCost": 0.46043332499999995,
    "avgCostPerModel": 0.11510833124999999,
    "codeAnalysis": {
      "totalLines": 11346,
      "codeLines": 9835,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.2",
      "commentPercent": "4.7",
      "textPercent": "2.2"
    },
    "analyzedAt": "2025-06-02T01:36:59.239Z"
  },
  {
    "commitHash": "a33e17cdfd82598385ce4ce14ed9b12890d2d301",
    "commitMessage": "Fix authentication stability issues",
    "timestamp": "2025-06-01T16:55:35-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 5,
    "linesAdded": 33,
    "linesDeleted": 51,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2,
        "complexity": 2.5,
        "estimatedHours": 2.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit makes targeted refactoring to improve authentication stability. The changes remove an unnecessary admin password rehash in the presence of the file and add client-side token cleanup and conditional auth checks. The code is well-structured with clear logic and error handling, reflecting a mid-level developer work. With moderate complexity across a few files, the work likely took a couple of hours manually, and AI assistance could have reduced the effort slightly.",
        "responseTime": 11.15,
        "tokensUsed": 2298,
        "cost": 0.36360000000000003
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 2.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Clean refactoring with good error handling improvements. Removes unnecessary password hashing logic, adds proper token cleanup on auth failure, and implements conditional auth checking. Code shows solid understanding of authentication patterns and defensive programming. Minor deduction for incomplete diff truncation but overall well-structured changes.",
        "responseTime": 5.552,
        "tokensUsed": 1376,
        "cost": 0.005892
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit fixes two authentication stability issues. Server-side, it corrects the users.json initialization to only create the file if it doesn't exist, preventing redundant reads/writes. Client-side, it clears local storage on auth check failure and prevents the check from running on the login page, avoiding redirect loops. Code quality is good, using standard async/await and file operations. Error handling is improved by clearing state. The specific check for '/styles.css' is slightly odd and the path comparison could be more robust, but the core fixes are solid mid-level improvements addressing common issues. Complexity is moderate due to changes across two files and logic branches.",
        "responseTime": 9.57,
        "tokensUsed": 1154,
        "cost": 0.00013604999999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is good with no syntax errors or typos, and logical structure is maintained, though minor issues like lack of detailed error handling in some areas. Developer level reflects mid-level skills with practical changes and decent error handling. Complexity is moderate due to changes across multiple files with straightforward logic. Estimated time accounts for understanding auth flow and testing. AI percentage is low as code shows human decision-making in specific logic adjustments.",
        "responseTime": 2.6,
        "tokensUsed": 1185,
        "cost": 0.007445
      }
    ],
    "averageCodeQuality": 3.875,
    "averageDevLevel": 2.225,
    "averageComplexity": 2.875,
    "averageEstimatedHours": 2.75,
    "averageAiPercentage": 31.375,
    "averageEstimatedHoursWithAi": 1.5,
    "totalTokens": 6013,
    "totalCost": 0.37707305,
    "avgCostPerModel": 0.0942682625,
    "codeAnalysis": {
      "totalLines": 11433,
      "codeLines": 9922,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.2",
      "commentPercent": "4.6",
      "textPercent": "2.2"
    },
    "analyzedAt": "2025-06-02T01:37:12.810Z"
  },
  {
    "commitHash": "30f78db6f321e68a309e4b605be52d55cd589d76",
    "commitMessage": "Implement login authentication system",
    "timestamp": "2025-06-01T16:37:18-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 10,
    "linesAdded": 791,
    "linesDeleted": 7,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 2.3,
        "complexity": 3.2,
        "estimatedHours": 4,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit presents a clean implementation of an authentication system using bcrypt, JWT, and async/await patterns along with file-based user management. Best practices like using environment variables for secrets are evident. There is a minor drawback in terms of potential incomplete error handling and a truncated function (authenticateUser), which slightly lowers the code quality score. The code reflects a mid-level developer's work, and the overall logic is moderately complex due to integrating file I/O and security components. Using AI tools could have sped up some parts, reducing overall manual development time.",
        "responseTime": 12.511,
        "tokensUsed": 2011,
        "cost": 0.29345999999999994
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 2.1,
        "complexity": 3.2,
        "estimatedHours": 4.5,
        "aiPercentage": 75,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code has a critical syntax error - incomplete function at line 51 where 'username' is truncated to 'usern'. Uses standard authentication patterns with bcrypt/JWT but has security issues like hardcoded secrets and file-based user storage. The structure and comments suggest AI generation with typical boilerplate patterns.",
        "responseTime": 5.5,
        "tokensUsed": 1386,
        "cost": 0.006030000000000001
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 2.8,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 6.5,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 2.25,
        "reasoning": "The commit implements core authentication features (hashing, JWT) using standard libraries and modern JS (async/await). However, it uses a simple, inefficient file-based JSON for user storage which is not scalable or suitable for production due to performance and concurrency issues. Loading all users on every request is a significant inefficiency. Error handling is basic. The provided diff snippet also contains a syntax error (cut-off line in `authenticateUser`). The scope of the change (10 files, ~800 lines) covers significant system logic, contributing to complexity. Code patterns are standard, suggesting potential AI assistance, though the error implies human involvement.",
        "responseTime": 33.371,
        "tokensUsed": 1152,
        "cost": 0.000135225
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.2,
        "devLevel": 2.1,
        "complexity": 3.5,
        "estimatedHours": 6,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 4,
        "reasoning": "Code quality is decent but has a noticeable typo ('usern' instead of 'username') and incomplete code in the authenticateUser function. Structure is reasonable with async file operations and bcrypt usage. Developer level reflects mid-level understanding with good practices like hashing passwords, but lacks advanced error handling. Complexity is moderate-high due to 10 files changed and integration of JWT, bcrypt, and file-based storage. Estimated time accounts for implementing a full auth system. AI percentage is moderate due to standard patterns that could be AI-assisted but with human touches like specific file handling.",
        "responseTime": 3.021,
        "tokensUsed": 1221,
        "cost": 0.007915
      }
    ],
    "averageCodeQuality": 3.2,
    "averageDevLevel": 2.2,
    "averageComplexity": 3.325,
    "averageEstimatedHours": 5.25,
    "averageAiPercentage": 43.875,
    "averageEstimatedHoursWithAi": 2.4375,
    "totalTokens": 5770,
    "totalCost": 0.30754022499999994,
    "avgCostPerModel": 0.07688505624999999,
    "codeAnalysis": {
      "totalLines": 11520,
      "codeLines": 10009,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.3",
      "commentPercent": "4.6",
      "textPercent": "2.1"
    },
    "analyzedAt": "2025-06-02T01:37:48.587Z"
  },
  {
    "commitHash": "80622eab9ab9230705540d248d2016df73cc21d4",
    "commitMessage": "Update commit analysis history with latest commits",
    "timestamp": "2025-06-01T16:32:02-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 87,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.7,
        "devLevel": 1.3,
        "complexity": 1,
        "estimatedHours": 0.25,
        "aiPercentage": 5,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "This commit appends a new JSON record to the commit history, reflecting a trivial UI change (removal of a progress bar border). The update is syntactically correct and clearly structured. The nature of the change is very simple, indicating a junior-level modification with minimal complexity and very low estimated development time, even when considering AI assistance.",
        "responseTime": 15.026,
        "tokensUsed": 2491,
        "cost": 0.39515999999999996
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 2.1,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean JSON data structure with proper formatting and consistent field naming. This is a data maintenance task adding analysis records to a history file. Moderate complexity due to structured data handling and multiple model comparisons. Mid-junior level work involving data organization and JSON manipulation. Likely human-written given the specific context and structured approach to maintaining analysis history.",
        "responseTime": 5.648,
        "tokensUsed": 1418,
        "cost": 0.00609
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.7,
        "devLevel": 1.2,
        "complexity": 1.5,
        "estimatedHours": 0.25,
        "aiPercentage": 90,
        "estimatedHoursWithAi": 0.1,
        "reasoning": "This commit involves appending structured data to a JSON file. The data itself appears to be analysis results generated by AI models. The change is a simple data addition, not involving complex logic or architecture changes. The quality is high based on the valid JSON structure shown. The complexity is low as it's a single file data update. The development time is minimal for this type of repetitive data entry/appending. The AI percentage is high because the substance of the added content (the analysis results) originates from AI models.",
        "responseTime": 15.041,
        "tokensUsed": 1119,
        "cost": 0.00012465
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.5,
        "devLevel": 1.2,
        "complexity": 1,
        "estimatedHours": 0.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.3,
        "reasoning": "The commit involves updating a JSON file with commit analysis history, which is a straightforward data entry task with no syntax errors or structural issues in the provided diff. The code quality is high due to clean formatting and consistency. The developer level is rated as junior because it involves simple data updates without complex logic or architecture decisions. Complexity is minimal as it only involves adding lines to a JSON file with no integration or logic changes. Estimated development time is low due to the simplicity of the task, and AI involvement is minimal as this appears to be a manual or automated data logging process.",
        "responseTime": 2.836,
        "tokensUsed": 1293,
        "cost": 0.008305
      }
    ],
    "averageCodeQuality": 4.525,
    "averageDevLevel": 1.375,
    "averageComplexity": 1.4,
    "averageEstimatedHours": 0.625,
    "averageAiPercentage": 32.5,
    "averageEstimatedHoursWithAi": 0.37500000000000006,
    "totalTokens": 6321,
    "totalCost": 0.40967964999999995,
    "avgCostPerModel": 0.10241991249999999,
    "codeAnalysis": {
      "totalLines": 11607,
      "codeLines": 10096,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.3",
      "commentPercent": "4.5",
      "textPercent": "2.1"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-02T01:39:25.389Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-06-02T01:38:45.498Z"
  },
  {
    "commitHash": "b109388a2c281a30bfeca2db1d0c38c6cd13b881",
    "commitMessage": "Prevent border clash between adjacent progress bar segments",
    "timestamp": "2025-06-01T01:44:11-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 4,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The commit adds a simple, well-formatted CSS rule to prevent border clashes in progress bar segments. There are no syntax or formatting issues, and the change is both minimal and effective. The implementation is straightforward, indicating a junior-level developer’s work with basic CSS knowledge. Overall, the change is low in complexity, requires very little development time, and is clearly human-written.",
        "responseTime": 10.968,
        "tokensUsed": 1834,
        "cost": 0.32244
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.3,
        "estimatedHours": 0.25,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Clean, syntactically correct CSS with proper selector usage. However, this is a very simple styling fix using basic CSS concepts. The negative margin approach to prevent border overlap is a common UI pattern. Minimal complexity with only 4 lines added to a single file.",
        "responseTime": 4.372,
        "tokensUsed": 871,
        "cost": 0.004281
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.8,
        "devLevel": 2.3,
        "complexity": 1.5,
        "estimatedHours": 1.25,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "The commit introduces a single, standard CSS rule to fix a common visual issue (border clashing) in adjacent elements. The technique of using a negative margin on subsequent elements is a well-known and effective solution for this problem in CSS. Code quality is high as the syntax is correct and the approach is clean and appropriate. Developer level is assessed as mid-level, demonstrating familiarity with common CSS layout issues and standard fixes using pseudo-classes. Complexity is low due to the minimal lines of code, single file change, and straightforward logic. Estimated time includes identifying the issue, implementing the known fix, and testing. AI percentage reflects that this is a standard problem and solution readily available online or via AI queries. Estimated hours with AI are reduced as AI could quickly provide the exact CSS rule, saving research/recall time, but testing and workflow still take time.",
        "responseTime": 16.329,
        "tokensUsed": 796,
        "cost": 0.00012225
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The code is clean with no syntax errors or typos, and the CSS change is straightforward and well-structured. However, it's a very basic adjustment (adding a negative margin to prevent border clash), indicating a junior developer level. Complexity is low due to a single file change with minimal logic. Development time is short as it's a small tweak, and AI assistance is estimated as minor due to the simplicity and common nature of the solution.",
        "responseTime": 8.853,
        "tokensUsed": 796,
        "cost": 0.00553
      }
    ],
    "averageCodeQuality": 4.5,
    "averageDevLevel": 1.775,
    "averageComplexity": 1.45,
    "averageEstimatedHours": 0.625,
    "averageAiPercentage": 25.125,
    "averageEstimatedHoursWithAi": 0.35,
    "totalTokens": 4297,
    "totalCost": 0.33237324999999995,
    "avgCostPerModel": 0.08309331249999999,
    "codeAnalysis": {
      "totalLines": 11694,
      "codeLines": 10183,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.4",
      "commentPercent": "4.5",
      "textPercent": "2.1"
    },
    "analyzedAt": "2025-06-02T01:39:04.317Z"
  },
  {
    "commitHash": "8fc5145ec4a4bbdf46fc1a3b1cc9cdd5c1272e6b",
    "commitMessage": "Add full border perimeter to progress bar segments",
    "timestamp": "2025-06-01T01:41:12-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 3,
    "linesDeleted": 3,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.5,
        "devLevel": 1.3,
        "complexity": 1.2,
        "estimatedHours": 0.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The commit makes a simple CSS modification by replacing 'border-right' with 'border' to ensure a full border is applied. The code is syntactically correct and follows clean styling practices, indicating high code quality. The change is straightforward and low in complexity, typical of a junior-level update. The estimated development time is very short and, with minimal AI assistance, could be even faster to implement.",
        "responseTime": 12.086,
        "tokensUsed": 1951,
        "cost": 0.33036
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.3,
        "complexity": 1.2,
        "estimatedHours": 0.25,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Clean, consistent CSS change with proper syntax and consistent formatting. However, this is a very basic styling modification requiring minimal technical skill - simply changing border-right to border across three similar CSS classes. Low complexity with straightforward implementation.",
        "responseTime": 4.415,
        "tokensUsed": 998,
        "cost": 0.004554
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 1.4,
        "complexity": 1.2,
        "estimatedHours": 0.25,
        "aiPercentage": 55,
        "estimatedHoursWithAi": 0.15,
        "reasoning": "Simple CSS property change in one file. Syntax is correct, but a minor inconsistency exists in using var() vs. hardcoded values across the modified rules, consistent with the original code's pattern. The task is very basic and highly automatable.",
        "responseTime": 12.104,
        "tokensUsed": 695,
        "cost": 0.000076425
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The code change is clean and straightforward, with no syntax errors or structural issues. It involves a simple CSS update to add full borders to progress bar segments. The developer level is rated as junior due to the basic nature of the change with no advanced patterns or architecture. Complexity is low as it affects only one file with minimal logic. Development time is estimated as very short due to the simplicity of the task. AI percentage is moderate as the change follows common CSS patterns that could be AI-assisted but still shows human intent.",
        "responseTime": 2.387,
        "tokensUsed": 927,
        "cost": 0.006364999999999999
      }
    ],
    "averageCodeQuality": 4.225,
    "averageDevLevel": 1.375,
    "averageComplexity": 1.275,
    "averageEstimatedHours": 0.375,
    "averageAiPercentage": 27.5,
    "averageEstimatedHoursWithAi": 0.2,
    "totalTokens": 4571,
    "totalCost": 0.341355425,
    "avgCostPerModel": 0.08533885625,
    "codeAnalysis": {
      "totalLines": 11781,
      "codeLines": 10270,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.4",
      "commentPercent": "4.5",
      "textPercent": "2.1"
    },
    "analyzedAt": "2025-06-02T01:39:18.881Z"
  },
  {
    "commitHash": "019e2421337fbe9ad4fe77255b45135767c75923",
    "commitMessage": "Style code analysis progress bars to match model badges",
    "timestamp": "2025-06-01T01:39:17-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 35,
    "linesDeleted": 7,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "This commit makes minor styling adjustments in both HTML and CSS to align progress bar text with model badges. The changes are straightforward, involve only superficial modifications, and do not introduce complex logic or error-handling, suggesting a junior-level change with clean code quality and low overall complexity.",
        "responseTime": 8.84,
        "tokensUsed": 1843,
        "cost": 0.26214
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 1.4,
        "complexity": 1.8,
        "estimatedHours": 0.75,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The diff appears incomplete/truncated in the CSS section, showing an incomplete rule '.type-header.code-type-header {' without closing. The changes are simple HTML class additions and basic CSS styling. The work is straightforward UI styling but the incomplete diff suggests potential syntax issues.",
        "responseTime": 4.978,
        "tokensUsed": 1324,
        "cost": 0.005688
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 2.5,
        "devLevel": 1.8,
        "complexity": 1.9,
        "estimatedHours": 0.75,
        "aiPercentage": 45,
        "estimatedHoursWithAi": 0.4,
        "reasoning": "The commit renames/adds classes in HTML and introduces new CSS rules. The HTML changes are valid. The provided CSS diff snippet appears to contain a syntax error (`.type-header.code-type-header { \n \n`), which impacts code quality if committed as shown. Developer level is assessed as junior/mid-level due to the nature of the change (styling/refactoring) and the potential syntax error. Complexity is low as it involves few files and simple structural/styling changes without complex logic.",
        "responseTime": 16.091,
        "tokensUsed": 1108,
        "cost": 0.00012112499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code quality is high with no syntax errors or typos, and the changes are clean and focused on styling. Developer level is mid-range due to straightforward HTML/CSS modifications without complex logic or architecture. Complexity is low as it involves minimal files and simple styling updates. Estimated time reflects a quick task for an experienced developer. AI percentage is moderate due to standard patterns that could be partially assisted by tools like code completion.",
        "responseTime": 2.772,
        "tokensUsed": 1139,
        "cost": 0.007205000000000001
      }
    ],
    "averageCodeQuality": 3.425,
    "averageDevLevel": 1.625,
    "averageComplexity": 1.6749999999999998,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 27.5,
    "averageEstimatedHoursWithAi": 0.6,
    "totalTokens": 5414,
    "totalCost": 0.275154125,
    "avgCostPerModel": 0.06878853125,
    "codeAnalysis": {
      "totalLines": 11868,
      "codeLines": 10357,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.5",
      "commentPercent": "4.4",
      "textPercent": "2.1"
    },
    "analyzedAt": "2025-06-02T01:39:37.446Z"
  },
  {
    "commitHash": "367fe57cd505a84aa4c84401e408ed591d51701c",
    "commitMessage": "Fix table scrolling by reverting to calculated max-height",
    "timestamp": "2025-06-01T01:30:46-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 2,
    "linesDeleted": 9,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 1.4,
        "complexity": 1.5,
        "estimatedHours": 0.75,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "This commit involves straightforward CSS adjustments to fix the table scrolling issue by reverting to a calculated max-height and removing some unnecessary flex properties. The changes are simple, clean, and error‐free, suggesting routine work by a junior developer with minimal complexity.",
        "responseTime": 12.448,
        "tokensUsed": 2388,
        "cost": 0.42012
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 1.8,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean CSS changes with consistent formatting and valid syntax. The commit reverts flexbox layout to a simpler calculated max-height approach for table scrolling. Changes are straightforward CSS property modifications without complex logic. Developer shows understanding of CSS layout but uses basic approach rather than advanced techniques. The revert suggests trial-and-error debugging rather than sophisticated architectural planning.",
        "responseTime": 5.251,
        "tokensUsed": 1153,
        "cost": 0.005403
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit addresses a table scrolling issue by reverting to a common pattern using `max-height` and `overflow-y: auto`, removing potentially conflicting flexbox properties from parent elements. The CSS syntax is clean, but the reliance on a hardcoded pixel offset (250px) in the `calc()` function introduces a minor maintainability risk if surrounding elements change height. This fix requires understanding CSS layout flow and debugging, typical of a mid-level developer. The complexity is moderate due to the need to coordinate changes across different rulesets to fix a specific layout problem. Debugging layout issues can take time, hence the estimated hours. The pattern of removing flex properties to fix scrolling and using `max-height` with `calc()` is frequently suggested by AI tools for this type of problem, suggesting a moderate likelihood of AI assistance.",
        "responseTime": 15.993,
        "tokensUsed": 928,
        "cost": 0.000129
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Code quality is high with no syntax errors or typos, and the changes are clean and focused on CSS adjustments for table scrolling. Developer level is mid-range junior due to straightforward CSS modifications without advanced patterns or architecture. Complexity is low as it involves a single file with simple style changes. Estimated time reflects a quick fix for an experienced developer. AI percentage is moderate due to the simplicity and common nature of CSS fixes, suggesting possible AI assistance or template use.",
        "responseTime": 2.419,
        "tokensUsed": 999,
        "cost": 0.006595
      }
    ],
    "averageCodeQuality": 4.0249999999999995,
    "averageDevLevel": 1.9,
    "averageComplexity": 2.05,
    "averageEstimatedHours": 1.625,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 0.8125,
    "totalTokens": 5468,
    "totalCost": 0.432247,
    "avgCostPerModel": 0.10806175,
    "codeAnalysis": {
      "totalLines": 11966,
      "codeLines": 10455,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.6",
      "commentPercent": "4.4",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:39:55.943Z"
  },
  {
    "commitHash": "5f636d20186634b02e07ea4943327d813560768b",
    "commitMessage": "Optimize table height to use available screen space",
    "timestamp": "2025-06-01T01:27:30-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 9,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.1,
        "devLevel": 1.8,
        "complexity": 2,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit involves a straightforward CSS optimization with clean and concise changes. The modifications correctly use flexbox properties for layout improvements without introducing syntax errors or structural issues. This kind of change typically would be handled by a junior to mid-level developer, involves low complexity with only one file affected, and would likely take about 1 hour manually (or about 0.5 hours with AI assistance). The clear, human-like structure suggests minimal AI assistance.",
        "responseTime": 9.934,
        "tokensUsed": 1910,
        "cost": 0.30666
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 2.3,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean CSS changes with consistent flexbox implementation. Code is well-structured with proper property usage (flex: 1, overflow handling). Developer shows solid understanding of CSS layout but this is a straightforward UI adjustment rather than complex architecture. The systematic approach to converting fixed heights to flexible layout suggests good planning but remains within mid-level complexity range.",
        "responseTime": 5.353,
        "tokensUsed": 1133,
        "cost": 0.005211
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit correctly applies standard flexbox patterns (display: flex, flex-direction: column, flex: 1) to manage vertical space and make the table fill the available area. Use of overflow properties is appropriate for managing content exceeding dimensions. Code is syntactically correct. The placement of the first `main` block modification before the more specific `.app-layout main` rule is slightly unconventional but functionally harmless due to CSS cascade, leading to a minor deduction in code quality. The task involves modifying layout using modern CSS features, typical of a mid-level front-end developer. Complexity is moderate as it involves nested flex containers to achieve the desired layout effect. The patterns used are common for layout tasks and could plausibly involve AI assistance.",
        "responseTime": 13.723,
        "tokensUsed": 906,
        "cost": 0.00012352499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Code is clean with no syntax errors or typos, and CSS changes are well-structured. Developer level is mid-range due to straightforward CSS adjustments without advanced patterns. Complexity is low as it involves simple styling changes in one file. Estimated time reflects a quick task for a developer familiar with CSS. AI percentage is moderate due to common patterns that could be AI-assisted but still show human intent.",
        "responseTime": 2.227,
        "tokensUsed": 978,
        "cost": 0.006350000000000001
      }
    ],
    "averageCodeQuality": 4.05,
    "averageDevLevel": 2,
    "averageComplexity": 2.3,
    "averageEstimatedHours": 1.6875,
    "averageAiPercentage": 27.625,
    "averageEstimatedHoursWithAi": 0.875,
    "totalTokens": 4927,
    "totalCost": 0.31834452500000004,
    "avgCostPerModel": 0.07958613125000001,
    "codeAnalysis": {
      "totalLines": 12053,
      "codeLines": 10542,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.6",
      "commentPercent": "4.4",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:40:12.138Z"
  },
  {
    "commitHash": "738879a28e0139aa0334dfb1074249af56904133",
    "commitMessage": "Fix sticky headers for comprehensive table on commits page",
    "timestamp": "2025-06-01T01:19:42-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 16,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.5,
        "devLevel": 1.5,
        "complexity": 1.5,
        "estimatedHours": 1,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit makes a clean, straightforward CSS update by adding sticky header properties with no syntax errors. The changes involve minor styling adjustments in a single file, indicating a basic, junior-level change with simple logic and low complexity. It likely represents a quick fix that one could complete in about one hour manually, with an even shorter time when aided by AI.",
        "responseTime": 10.866,
        "tokensUsed": 1767,
        "cost": 0.28296
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "Clean CSS implementation with proper sticky positioning, z-index layering, and background color inheritance. However, there's redundant styling (both thead and th have identical sticky properties) and the solution is straightforward frontend styling rather than complex architecture. The approach shows solid understanding of CSS positioning but represents junior-to-mid level work due to the redundancy and simplicity of the task.",
        "responseTime": 5.233,
        "tokensUsed": 1064,
        "cost": 0.005112
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 2.4,
        "estimatedHours": 2.5,
        "aiPercentage": 60,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit implements a standard fix for sticky table headers using common CSS properties like `position: sticky`, `top`, `overflow`, `z-index`, and `background-color`. The code is syntactically correct and well-formatted. Applying `position: sticky` to both `thead` and individual `th` elements is slightly redundant in most cases but not functionally incorrect here. This is a typical UI fix suitable for a mid-level developer. The complexity is moderate, involving the correct application of interacting CSS layout properties across container and header elements, but uses a widely known pattern. The nature of the solution (a standard sticky header implementation) makes it highly likely that AI could generate a very similar set of rules quickly, significantly reducing research/implementation time.",
        "responseTime": 16.495,
        "tokensUsed": 879,
        "cost": 0.0001215
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Code is clean with no syntax errors or typos, and CSS changes are well-structured for sticky headers. However, it's a straightforward fix with basic CSS properties, indicating junior to mid-level expertise. Complexity is low due to single file change and simple logic. Development time is minimal for this focused CSS adjustment, and AI assistance is estimated low due to specific, context-aware styling.",
        "responseTime": 2.322,
        "tokensUsed": 916,
        "cost": 0.006019999999999999
      }
    ],
    "averageCodeQuality": 4.1499999999999995,
    "averageDevLevel": 1.8499999999999999,
    "averageComplexity": 1.725,
    "averageEstimatedHours": 1.375,
    "averageAiPercentage": 31.25,
    "averageEstimatedHoursWithAi": 0.8125,
    "totalTokens": 4626,
    "totalCost": 0.2942135,
    "avgCostPerModel": 0.073553375,
    "codeAnalysis": {
      "totalLines": 12140,
      "codeLines": 10629,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.7",
      "commentPercent": "4.3",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:40:31.155Z"
  },
  {
    "commitHash": "6a60fede7db801ea9e7abc982fe45885c2196505",
    "commitMessage": "Implement sticky table headers for improved user experience",
    "timestamp": "2025-06-01T01:17:42-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 7,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.7,
        "devLevel": 1.8,
        "complexity": 1.2,
        "estimatedHours": 0.5,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "The commit implements a straightforward CSS update to add sticky table headers. The code is clean and free of syntax errors, affecting only a single file with a few lines changed. Its simplicity points to a relatively junior-level change with minimal integration or complexity, and it likely required only about 30 minutes of work. The patterns are typical of manual adjustments, suggesting very low AI involvement.",
        "responseTime": 12.988,
        "tokensUsed": 2083,
        "cost": 0.37193999999999994
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.4,
        "estimatedHours": 0.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "Clean CSS implementation with proper sticky positioning, consistent z-index values, and appropriate use of CSS variables. However, there's redundancy applying same properties to both thead and th elements, and the solution is straightforward junior-level work requiring minimal CSS knowledge.",
        "responseTime": 4.805,
        "tokensUsed": 949,
        "cost": 0.004479
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 2.4,
        "estimatedHours": 2.5,
        "aiPercentage": 50,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Code uses standard CSS properties for sticky positioning. Quality is slightly reduced due to redundant application of sticky, background-color, and z-index to both 'thead' and 'th', which is often unnecessary and can sometimes cause rendering issues. Developer level is mid-level as it's a common front-end task, but the redundancy suggests slightly less mastery of table layout nuances. Complexity is moderate due to the nature of layout-affecting CSS properties like 'position: sticky' which can interact with other styles, though the diff itself is minimal. The solution is highly standard, making significant AI assistance or use of tutorials/StackOverflow likely.",
        "responseTime": 17.624,
        "tokensUsed": 776,
        "cost": 0.00010612499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 1.8,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "Code is clean with no syntax errors or typos, and the implementation of sticky headers is straightforward using CSS properties. However, it's a basic change with no advanced error handling or complex logic, reflecting a mid-junior developer level. Complexity is low due to minimal files changed and simple styling rules. Development time is short as this is a quick CSS adjustment. AI percentage is moderate due to the generic nature of the CSS properties used, which could be sourced from common tutorials or AI suggestions.",
        "responseTime": 2.462,
        "tokensUsed": 866,
        "cost": 0.006
      }
    ],
    "averageCodeQuality": 4.2,
    "averageDevLevel": 1.925,
    "averageComplexity": 1.625,
    "averageEstimatedHours": 1,
    "averageAiPercentage": 28.75,
    "averageEstimatedHoursWithAi": 0.5,
    "totalTokens": 4674,
    "totalCost": 0.38252512499999997,
    "avgCostPerModel": 0.09563128124999999,
    "codeAnalysis": {
      "totalLines": 12227,
      "codeLines": 10716,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.7",
      "commentPercent": "4.3",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:40:51.250Z"
  },
  {
    "commitHash": "6937b839ee6c7f8bb00f195823815a9540e01db6",
    "commitMessage": "Restructure pages: remove Basic Information, create Productivity page",
    "timestamp": "2025-06-01T01:15:00-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 13,
    "linesAdded": 460,
    "linesDeleted": 401,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 2.4,
        "complexity": 3,
        "estimatedHours": 3.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 2,
        "reasoning": "This commit refactors the UI by removing the old Basic Information page and adding a new Productivity page across 13 files, with a substantial number of lines added and removed. The code appears well‐structured and the changes are clearly segmented, indicating a mature design approach typical of a mid-level developer. While the refactoring isn’t solving deeply complex algorithmic problems, altering multiple UI components does introduce moderate complexity. There is no strong evidence of heavy AI assistance in such a custom UI change—hence the low AI percentage and reduced estimated time with AI assistance.",
        "responseTime": 13.246,
        "tokensUsed": 2651,
        "cost": 0.4355399999999999
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 4,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 3,
        "reasoning": "Clean structural reorganization with proper JSON formatting and consistent data handling. The commit shows good organization skills by restructuring 13 files with balanced additions/deletions (460/401). However, this appears to be primarily content reorganization and page restructuring rather than complex logic implementation. The systematic approach to moving content between pages suggests human planning and decision-making about information architecture.",
        "responseTime": 5.675,
        "tokensUsed": 1408,
        "cost": 0.006144
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "This commit involves a significant restructuring by removing one page and creating another across 13 files. This indicates a complex task involving refactoring, updating routing, and potentially moving/modifying components. The complexity score reflects the number of files and the nature of page-level changes. The developer level is assessed as mid-level due to the need to understand application structure for such a refactor. Code quality is estimated based on the assumption that a functional restructuring was completed, allowing for minor potential issues in a large set of changes. The task is suitable for AI assistance in refactoring and generating boilerplate, leading to a moderate AI percentage and reduced estimated time.",
        "responseTime": 12.23,
        "tokensUsed": 1174,
        "cost": 0.00013979999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit involves restructuring pages with a significant number of lines added and deleted (460 added, 401 deleted) across 13 files, indicating a moderate level of complexity. Code quality is rated as good with minor issues assumed due to the scale of changes, though no specific errors or typos are visible in the provided diff snippet. Developer level is mid-range due to the nature of UI and structural changes which suggest competent but not highly advanced architectural decisions. AI involvement is estimated at 30% based on the balance of custom implementation and potential use of tools for repetitive tasks. Estimated time reflects the effort for restructuring multiple files, reduced slightly with AI assistance.",
        "responseTime": 2.939,
        "tokensUsed": 1295,
        "cost": 0.008465
      }
    ],
    "averageCodeQuality": 3.875,
    "averageDevLevel": 2.275,
    "averageComplexity": 3.2,
    "averageEstimatedHours": 3.4375,
    "averageAiPercentage": 26.375,
    "averageEstimatedHoursWithAi": 2.0625,
    "totalTokens": 6528,
    "totalCost": 0.45028879999999993,
    "avgCostPerModel": 0.11257219999999998,
    "codeAnalysis": {
      "totalLines": 12314,
      "codeLines": 10803,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.8",
      "commentPercent": "4.3",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:41:07.019Z"
  },
  {
    "commitHash": "90455182502bcc566b821ec49f7ce983d50ff699",
    "commitMessage": "Move Cost Analysis table from Commits page to AI Models page",
    "timestamp": "2025-06-01T01:06:08-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 4,
    "linesAdded": 240,
    "linesDeleted": 124,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.3,
        "complexity": 2,
        "estimatedHours": 2.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit cleanly removes the Cost Analysis section from one page, suggesting careful refactoring without syntax errors. The change spans four files with straightforward edits (mostly HTML modifications), keeping complexity low. The nature of the move implies a mid-level developer making a focused UI modification. Given the scope, the manual work likely took around 2.75 hours, with AI assistance potentially reducing the effort to about 1.25 hours. Overall, the work shows good code quality and appropriate developer practices.",
        "responseTime": 11.733,
        "tokensUsed": 2239,
        "cost": 0.36275999999999997
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 2.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Clean HTML structure with proper semantic elements and consistent naming conventions. The refactoring shows good organizational thinking by moving cost analysis to a more logical location. Code is well-formatted with appropriate indentation. This is primarily a structural reorganization rather than complex logic implementation, indicating mid-level developer comfort with UI architecture but relatively straightforward execution.",
        "responseTime": 5.232,
        "tokensUsed": 1267,
        "cost": 0.005685
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit involves moving a significant HTML structure (table with controls) across pages, requiring updates in 4 files. This suggests changes in HTML, CSS, and JavaScript (for table logic like pagination/search). This is a standard refactoring task (complexity 3.4) indicating a Mid-level developer's capability (dev_level 2.3). Code quality is assumed decent based on the snippet provided, but full quality assessment isn't possible without seeing all changes (code_quality 3.7 reflects this). Estimated time reflects the need to update multiple files and associated logic (2.75 hrs). The nature of moving/refactoring standard UI components and logic suggests moderate AI assistance is plausible (AI 45.5%), potentially reducing development time significantly (1.25 hrs).",
        "responseTime": 11.595,
        "tokensUsed": 1181,
        "cost": 0.00014257499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 1.8,
        "complexity": 2.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is decent with no visible syntax errors or typos in the provided diff, but the change is primarily a relocation of existing HTML content with no advanced logic or error handling. Developer level appears mid-range due to straightforward implementation without complex patterns. Complexity is moderate due to multiple files changed (4) but simple structural updates. Estimated time reflects a few hours for moving and testing UI elements. AI percentage is low-moderate as the code structure looks standard and human-driven, though some repetitive HTML patterns suggest possible AI assistance.",
        "responseTime": 2.775,
        "tokensUsed": 1130,
        "cost": 0.007379999999999999
      }
    ],
    "averageCodeQuality": 3.9000000000000004,
    "averageDevLevel": 2.125,
    "averageComplexity": 2.675,
    "averageEstimatedHours": 2.75,
    "averageAiPercentage": 28.875,
    "averageEstimatedHoursWithAi": 1.5,
    "totalTokens": 5817,
    "totalCost": 0.37596757499999994,
    "avgCostPerModel": 0.09399189374999999,
    "codeAnalysis": {
      "totalLines": 12401,
      "codeLines": 10890,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.8",
      "commentPercent": "4.2",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:41:21.194Z"
  },
  {
    "commitHash": "64708bd18695a2833862072991b1c707fa0793df",
    "commitMessage": "Add performance and cost badges to AI model cards",
    "timestamp": "2025-06-01T00:56:20-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 93,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 2.5,
        "complexity": 2.5,
        "estimatedHours": 2,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit cleanly adds a new feature that calculates and displays performance and cost badges on AI model cards. The code is well structured with clear separation of concerns and minimal issues. The logic in calculateModelBadges, which filters out error cases and determines extremes, shows intermediate-level design patterns. The change involves moderate complexity (adding a function and integrating badges in the UI) and is typical of a 2‐hour development task, which could be reduced to about 1 hour with AI assistance.",
        "responseTime": 10.199,
        "tokensUsed": 2190,
        "cost": 0.33696
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 2.5,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code has a critical syntax error - the diff is truncated mid-line with 'const minTime = Math.min(...t', indicating incomplete implementation. The badge calculation logic shows good structure but lacks proper error handling. The template literal for badge rendering is complex but functional. Overall decent mid-level work with some quality issues due to the incomplete function.",
        "responseTime": 5.181,
        "tokensUsed": 1385,
        "cost": 0.006027
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Code quality is fair but impacted by an incomplete line/syntax error in the calculateModelBadges function. Developer level is mid-range, implementing a functional feature with clear logic but lacking robustness (the error). Complexity is moderate, adding a new calculation function and integrating results into the UI rendering. Code patterns are standard and easily generatable, suggesting potential AI assistance.",
        "responseTime": 10.819,
        "tokensUsed": 1088,
        "cost": 0.00011535
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is good with clear structure and no visible syntax errors or typos; minor deduction for incomplete function snippet (calculateModelBadges cut off). Developer level reflects mid-level competence with logical badge calculation and DOM manipulation. Complexity is moderate due to integration of new badge logic and array operations across multiple models. Estimated time accounts for design and testing of badge logic. AI percentage is moderate due to structured patterns that could be AI-assisted but show human decision-making in naming and logic.",
        "responseTime": 2.822,
        "tokensUsed": 1197,
        "cost": 0.007625
      }
    ],
    "averageCodeQuality": 3.575,
    "averageDevLevel": 2.275,
    "averageComplexity": 2.9749999999999996,
    "averageEstimatedHours": 2.5625,
    "averageAiPercentage": 43.875,
    "averageEstimatedHoursWithAi": 1.3125,
    "totalTokens": 5860,
    "totalCost": 0.35072735,
    "avgCostPerModel": 0.0876818375,
    "codeAnalysis": {
      "totalLines": 12488,
      "codeLines": 10977,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.8",
      "commentPercent": "4.2",
      "textPercent": "2.0"
    },
    "analyzedAt": "2025-06-02T01:41:34.468Z"
  },
  {
    "commitHash": "82830fb7aaa2e3316a1c153b2d35d124503a50b3",
    "commitMessage": "Revert eye icon, use 'Details' text for button",
    "timestamp": "2025-05-31T05:06:00-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 3,
    "linesAdded": 93,
    "linesDeleted": 10,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 1.4,
        "complexity": 1.8,
        "estimatedHours": 1,
        "aiPercentage": 20,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "This commit reverts a previous UI change by switching from an eye icon back to a simple 'Details' text button. The change is straightforward and involves minor modifications across a few files, without introducing new logic or complexity. Overall, the implementation is clean, indicative of junior-level work, and likely required minimal AI assistance.",
        "responseTime": 10.902,
        "tokensUsed": 2347,
        "cost": 0.35087999999999997
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.5,
        "devLevel": 1.2,
        "complexity": 1.5,
        "estimatedHours": 0.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.25,
        "reasoning": "Simple UI revert changing icon back to text button. Clean JSON structure with proper formatting. Very basic change requiring minimal technical skill - just reversing a previous UI modification. Low complexity as it only involves updating button display text/icon across 3 files. Clearly human-driven decision based on UX feedback.",
        "responseTime": 5.119,
        "tokensUsed": 1493,
        "cost": 0.006255
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.1,
        "devLevel": 1.5,
        "complexity": 2.6,
        "estimatedHours": 0.75,
        "aiPercentage": 50,
        "estimatedHoursWithAi": 0.4,
        "reasoning": "Reverts a UI element from an icon back to text 'Details'. The diff includes adding a large JSON block to a history file, contributing significantly to line count but not code logic complexity. The core tasks (UI change and data addition) are simple.",
        "responseTime": 14.052,
        "tokensUsed": 1045,
        "cost": 0.00010267499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 1.4,
        "complexity": 1.9,
        "estimatedHours": 1.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 1,
        "reasoning": "Code quality is decent with no apparent syntax errors or major issues in the provided diff, though it's a simple UI change with minimal logic. Developer level is junior due to the straightforward nature of reverting an icon to text. Complexity is low as it involves minimal files and a basic text replacement. Estimated time reflects a quick UI tweak, with moderate AI assistance likely for implementation patterns.",
        "responseTime": 2.5,
        "tokensUsed": 1307,
        "cost": 0.007975000000000001
      }
    ],
    "averageCodeQuality": 4.1,
    "averageDevLevel": 1.375,
    "averageComplexity": 1.9500000000000002,
    "averageEstimatedHours": 0.9375,
    "averageAiPercentage": 28.75,
    "averageEstimatedHoursWithAi": 0.6,
    "totalTokens": 6192,
    "totalCost": 0.365212675,
    "avgCostPerModel": 0.09130316875,
    "codeAnalysis": {
      "totalLines": 12575,
      "codeLines": 11064,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.9",
      "commentPercent": "4.2",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:41:51.029Z"
  },
  {
    "commitHash": "a23fab4f0c49cf1af2ed4f8be29e97796c7f41f9",
    "commitMessage": "Add AI Models management page with comprehensive monitoring and testing",
    "timestamp": "2025-05-29T19:26:40-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 8,
    "linesAdded": 689,
    "linesDeleted": 2,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit introduces a new AI Models management page and performs minor adjustments in existing files. The update in the JavaScript file shows an API-related change from 'temperature' to 'max_completion_tokens' without apparent error handling, while the HTML modifications integrate a new navigation link and a new page for AI models. Although the changes span multiple files and add significant lines, the modifications remain straightforward with no intricate logic. This indicates mid-level development work (solid but not highly complex), and there is moderate likelihood of AI assistance, which shortens the overall development time compared to a fully manual implementation.",
        "responseTime": 9.908,
        "tokensUsed": 1961,
        "cost": 0.26886
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 2.8,
        "devLevel": 1.8,
        "complexity": 3.2,
        "estimatedHours": 4.5,
        "aiPercentage": 75,
        "estimatedHoursWithAi": 2,
        "reasoning": "The diff shows incomplete HTML file (cuts off mid-attribute), simple parameter removal in JS, and basic navigation additions. The large line count (689 added) suggests substantial UI work not visible in truncated diff. Code patterns are straightforward but the incomplete file presentation and basic changes indicate junior-level work with likely heavy AI assistance for generating the bulk HTML/CSS content.",
        "responseTime": 5.944,
        "tokensUsed": 1465,
        "cost": 0.0063750000000000005
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 0,
        "devLevel": 0,
        "complexity": 0,
        "estimatedHours": 0,
        "aiPercentage": 0,
        "estimatedHoursWithAi": 0,
        "reasoning": "Error: Unexpected token ` in JSON at position 518 (Response: \"```json\n{\n  \"code_quality\": 3.7,\n  \"dev_level\": 2.3,\n  \"complexity\": 3.4,\n  \"estimated_hours\": 9.0,\n...\")",
        "responseTime": 16.094,
        "tokensUsed": 1099,
        "cost": 0.000117525
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 3.5,
        "estimatedHours": 12,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 8,
        "reasoning": "Code quality is high with no visible syntax errors or typos in the provided diff; structure appears clean with minor issues. Developer level suggests mid-level due to practical changes and integration of new features like the AI Models page. Complexity is moderate to high given 8 files changed and 689 lines added, indicating significant feature development. Estimated hours reflect the scope of creating a comprehensive page with monitoring and testing. AI percentage is moderate as some patterns (e.g., repetitive HTML nav updates) suggest possible AI assistance, but unique implementation details indicate human effort.",
        "responseTime": 2.871,
        "tokensUsed": 1278,
        "cost": 0.00817
      }
    ],
    "averageCodeQuality": 2.625,
    "averageDevLevel": 1.575,
    "averageComplexity": 2.525,
    "averageEstimatedHours": 4.8125,
    "averageAiPercentage": 37.625,
    "averageEstimatedHoursWithAi": 2.8125,
    "totalTokens": 5803,
    "totalCost": 0.283522525,
    "avgCostPerModel": 0.07088063125,
    "codeAnalysis": {
      "totalLines": 12662,
      "codeLines": 11151,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "93.9",
      "commentPercent": "4.1",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:42:09.597Z",
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-02T01:48:17.249Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true
  },
  {
    "commitHash": "21fc68a3491be6cabb19662127fc76eb19ce6579",
    "commitMessage": "Add sidebar navigation with Users and Projects pages",
    "timestamp": "2025-05-28T19:10:36-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 7,
    "linesAdded": 489,
    "linesDeleted": 15,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.1,
        "devLevel": 2.3,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit cleanly introduces a sidebar navigation to the project with HTML structural improvements and clear separation between navigation and main content. There are no noticeable typos or syntax errors, and the changes adhere to good practices, reflecting a mid-level approach. The modification spans a moderate number of files and lines, qualifying as moderately complex. The estimated development time is around 3 hours manually, while AI assistance (likely in generating boilerplate or restructuring) could reduce this by a significant fraction.",
        "responseTime": 8.776,
        "tokensUsed": 1959,
        "cost": 0.27593999999999996
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 2.8,
        "estimatedHours": 3.5,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "Clean HTML structure with consistent navigation implementation across multiple files. The diff shows systematic addition of sidebar navigation with proper semantic markup. However, this is primarily UI restructuring work with repetitive patterns typical of AI-assisted development. The 489 lines added suggest significant boilerplate code generation, and the navigation structure follows common templating patterns.",
        "responseTime": 6.114,
        "tokensUsed": 1409,
        "cost": 0.006111
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit adds sidebar navigation, modifying existing HTML files and likely creating new ones (Users/Projects pages, CSS/JS). The visible HTML structure changes are clean and follow standard patterns for adding a layout component. Quality is good based on the provided diffs, but full quality depends on unseen CSS/JS and new files. Developer level is mid-level as it involves layout architecture and multi-file integration. Complexity is moderate due to changes across several files and adding new pages/components. Estimated hours reflect the task of implementing a standard sidebar component and creating basic page structures. AI percentage is moderate as this type of standard UI component is often generated or assisted by AI tools, significantly reducing development time for boilerplate code.",
        "responseTime": 14.316,
        "tokensUsed": 1186,
        "cost": 0.000144525
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.1,
        "complexity": 3.2,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is high with clean HTML structure and consistent styling; no syntax errors or typos observed. Developer level appears mid-level due to good practices in layout organization but lacks advanced patterns or error handling. Complexity is moderate with changes across multiple files and integration of a sidebar navigation. Estimated time reflects the effort for designing and implementing the sidebar across pages. AI percentage is low-moderate as the code shows human-like structure with potential assistance in repetitive HTML patterns.",
        "responseTime": 2.426,
        "tokensUsed": 1221,
        "cost": 0.0076950000000000005
      }
    ],
    "averageCodeQuality": 4.05,
    "averageDevLevel": 2.2,
    "averageComplexity": 3.05,
    "averageEstimatedHours": 3.1875,
    "averageAiPercentage": 41.375,
    "averageEstimatedHoursWithAi": 1.4375,
    "totalTokens": 5775,
    "totalCost": 0.28989052499999995,
    "avgCostPerModel": 0.07247263124999999,
    "codeAnalysis": {
      "totalLines": 12749,
      "codeLines": 11238,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.0",
      "commentPercent": "4.1",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:42:26.389Z"
  },
  {
    "commitHash": "f97249bbfe0ddf9f949f5a4be1970402ebda6ddf",
    "commitMessage": "Add code analysis visualization to web interface",
    "timestamp": "2025-05-28T18:47:25-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 0,
    "linesAdded": 87,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.5,
        "devLevel": 2.5,
        "complexity": 2,
        "estimatedHours": 3.25,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "The commit adds a new JSON record in a well-formatted and error‐free manner, indicating clean code. Given the nature of the change—a data record update likely feeding into a visualization feature—the work appears to be on the mid-level side (e.g., proper field usage and logical record building). Only one file is affected and the logic is relatively straightforward, so the complexity is low. Based on the change, a realistic manual implementation would take around 3.25 hours, which could be slightly reduced to about 2.5 hours with limited AI assistance (estimated AI involvement around 25%).",
        "responseTime": 14.738,
        "tokensUsed": 2989,
        "cost": 0.51522
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4,
        "devLevel": 2.2,
        "complexity": 2,
        "estimatedHours": 1.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "This is a simple data addition commit that only adds JSON entries to a history file. The JSON structure is well-formed and consistent. However, this represents basic data entry work rather than complex programming, indicating junior-level task complexity. The change is straightforward with minimal technical complexity.",
        "responseTime": 4.646,
        "tokensUsed": 1400,
        "cost": 0.005892
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.8,
        "devLevel": 1.2,
        "complexity": 1.5,
        "estimatedHours": 3,
        "aiPercentage": 85,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit's diff shows the addition of data (an AI-generated analysis of another commit) to a JSON history file. The added content is syntactically correct JSON. This task is essentially data entry, leading to high code quality for the added data, low developer level for the task, and low complexity. Estimated hours reflect the contrast between manually creating the analysis content vs. using AI-generated content. The high AI percentage is based on the source of the added content itself.",
        "responseTime": 17.894,
        "tokensUsed": 1106,
        "cost": 0.00012097499999999997
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 2.2,
        "complexity": 2.8,
        "estimatedHours": 2,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit involves adding a visualization feature to the web interface, with no syntax errors or typos visible in the provided diff. Code quality is rated moderately high with minor potential issues assumed due to lack of visible code structure. Developer level is mid-range, reflecting decent understanding but not advanced patterns in the JSON data update. Complexity is moderate due to the number of lines added, though it appears to be a straightforward data update. Estimated hours are conservative given the scope, and AI percentage is low as the JSON format suggests manual data entry or scripting.",
        "responseTime": 2.935,
        "tokensUsed": 1281,
        "cost": 0.008175
      }
    ],
    "averageCodeQuality": 4.2,
    "averageDevLevel": 2.0250000000000004,
    "averageComplexity": 2.075,
    "averageEstimatedHours": 2.4375,
    "averageAiPercentage": 37.5,
    "averageEstimatedHoursWithAi": 1.4375,
    "totalTokens": 6776,
    "totalCost": 0.529407975,
    "avgCostPerModel": 0.13235199375,
    "codeAnalysis": {
      "totalLines": 12836,
      "codeLines": 11325,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.0",
      "commentPercent": "4.1",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:42:46.763Z"
  },
  {
    "commitHash": "e02dd3335e251e4dd28f18fe01045d83e14f46fb",
    "commitMessage": "Add web interface for commit analysis visualization",
    "timestamp": "2025-05-28T13:35:44-07:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 11,
    "linesAdded": 1911,
    "linesDeleted": 44,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 2.3,
        "complexity": 3.1,
        "estimatedHours": 3.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 1.5,
        "reasoning": "The commit introduces a web interface for commit analysis visualization along with enhancements such as pricing models and token estimation. The code is cleanly written with clear variable names and inline documentation, though it could benefit from extra error handling or more robust validations in production scenarios. The changes involve multiple files and moderate integration logic, reflecting a mid-level developer's work. The work appears to be mostly human-written with some potential AI assistance to streamline repetitive patterns.",
        "responseTime": 11.087,
        "tokensUsed": 2061,
        "cost": 0.28098
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 4.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "Well-structured code with proper pricing constants, clean token estimation function, and systematic class property additions. Shows good architectural planning with cost tracking integration across multiple models. Code is readable with consistent patterns, though the diff is incomplete making full assessment limited.",
        "responseTime": 5.266,
        "tokensUsed": 1559,
        "cost": 0.006333
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 3.6,
        "estimatedHours": 25,
        "aiPercentage": 55,
        "estimatedHoursWithAi": 10,
        "reasoning": "The commit introduces a significant new web interface and integrates cost/token tracking into the analysis logic. The visible code for cost tracking is reasonably structured with constants and class extensions. The complexity score reflects the substantial lines added across multiple files for the web UI and integration. Estimated hours reflect the effort for a new feature of this scope. AI percentage and estimated hours with AI suggest significant AI assistance likely used for generating boilerplate, components, or implementing standard patterns across the 1900 lines of new code.",
        "responseTime": 15.379,
        "tokensUsed": 1132,
        "cost": 0.000128325
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.8,
        "estimatedHours": 15,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 10.5,
        "reasoning": "Code quality is high with clean structure and no visible syntax errors or typos in the provided diff. Developer level suggests mid-level expertise due to thoughtful architecture in token estimation and cost calculation. Complexity is rated high due to integration of multiple AI model pricing and token estimation logic across 11 files with significant lines added. Estimated hours reflect the scope of changes and integration effort. AI percentage is moderate as the code shows some standardized patterns but also unique logic implementation.",
        "responseTime": 5.136,
        "tokensUsed": 1332,
        "cost": 0.00825
      }
    ],
    "averageCodeQuality": 4.05,
    "averageDevLevel": 2.375,
    "averageComplexity": 3.5250000000000004,
    "averageEstimatedHours": 12,
    "averageAiPercentage": 36.25,
    "averageEstimatedHoursWithAi": 6.125,
    "totalTokens": 6084,
    "totalCost": 0.29569132499999995,
    "avgCostPerModel": 0.07392283124999999,
    "codeAnalysis": {
      "totalLines": 12923,
      "codeLines": 11412,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.1",
      "commentPercent": "4.0",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:43:04.667Z",
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-02T01:48:08.920Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true
  },
  {
    "commitHash": "22f2521f7912063dc356e5605646c36db9bb2bdc",
    "commitMessage": "Refactor from Python to Node.js",
    "timestamp": "2025-05-27T11:02:08-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 10,
    "linesAdded": 1213,
    "linesDeleted": 693,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 2.7,
        "complexity": 3.5,
        "estimatedHours": 10,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 6,
        "reasoning": "The commit represents a complete refactor from Python to Node.js, which involves significant changes across ten files, updating configurations and documentation. The changes appear clean and well-structured with appropriate modifications (e.g., updating .gitignore and README instructions), though the migration between languages naturally adds complexity. The scope and scale imply a mid-to-senior level effort executed deliberately. A manual refactor of this magnitude could realistically take around 10 hours, but with AI assistance, time might be cut to approximately 6 hours. The overall AI-generated code is estimated to be minimal, around 15%, reflecting a mostly human-crafted refactor.",
        "responseTime": 12.895,
        "tokensUsed": 2414,
        "cost": 0.37739999999999996
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 3.8,
        "estimatedHours": 6.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 4,
        "reasoning": "Complete language migration from Python to Node.js with proper project structure updates. Clean refactoring with updated documentation, package management, and gitignore. Shows good architectural decisions and systematic approach to migration. High complexity due to full stack conversion affecting 10 files with significant line changes.",
        "responseTime": 5.36,
        "tokensUsed": 1476,
        "cost": 0.006216
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.9,
        "devLevel": 2.4,
        "complexity": 4.1,
        "estimatedHours": 35,
        "aiPercentage": 65,
        "estimatedHoursWithAi": 10,
        "reasoning": "Large-scale refactor involving a complete language switch from Python to Node.js, impacting 10 files with significant line changes. Visible changes in .gitignore and README are correct, indicating proper setup for the new environment. Complexity is high due to the scope and language change. Estimated hours reflect the effort for such a migration, with high AI assistance potential for code translation and boilerplate generation leading to significant time savings.",
        "responseTime": 13.99,
        "tokensUsed": 1097,
        "cost": 0.00011894999999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.5,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit involves a significant refactor from Python to Node.js, updating documentation and configuration files like .gitignore and README.md. Code quality is good with no visible syntax errors or typos in the provided diff, though minor issues could exist in unshown files. Developer level reflects mid-level competence due to the structured approach to refactoring. Complexity is moderate to high given the language transition and multiple file changes (10 files). Estimated hours account for the time to update scripts and documentation. AI percentage is moderate as the changes appear systematic but not heavily automated.",
        "responseTime": 3.116,
        "tokensUsed": 1272,
        "cost": 0.00813
      }
    ],
    "averageCodeQuality": 3.9749999999999996,
    "averageDevLevel": 2.425,
    "averageComplexity": 3.7249999999999996,
    "averageEstimatedHours": 13.625,
    "averageAiPercentage": 33.75,
    "averageEstimatedHoursWithAi": 5.5,
    "totalTokens": 6259,
    "totalCost": 0.39186495,
    "avgCostPerModel": 0.0979662375,
    "codeAnalysis": {
      "totalLines": 13010,
      "codeLines": 11499,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.1",
      "commentPercent": "4.0",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:43:21.233Z",
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-02T01:48:02.792Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true
  },
  {
    "commitHash": "d5e9839aceb91f02f05e0cc16fa54335b8431682",
    "commitMessage": "Add AI code percentage and time estimation metrics",
    "timestamp": "2025-05-27T10:52:39-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 42,
    "linesDeleted": 13,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4,
        "devLevel": 2.3,
        "complexity": 2.5,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "The commit cleanly adds new metrics for AI code percentage and adjusted estimated hours. The changes are straightforward with minor modifications in two files and no apparent errors, suggesting clean code. The work is typical of a mid-level developer making incremental functional enhancements, which is reflected in the moderate complexity and estimated time metrics. The AI involvement score indicates moderate use, and the reduced hours with AI is consistent with the efficiency improvement expected.",
        "responseTime": 8.972,
        "tokensUsed": 1897,
        "cost": 0.24738
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.3,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Clean structural changes adding new fields consistently across dataclasses and prompt templates. Good naming conventions and logical placement. Mid-level work showing understanding of system architecture, though relatively straightforward additions.",
        "responseTime": 4.306,
        "tokensUsed": 1440,
        "cost": 0.005868
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.2,
        "complexity": 2,
        "estimatedHours": 0.75,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit adds new fields to data structures and updates the prompt and parsing logic to include metrics for AI percentage and estimated time with AI. The code is clean, correctly structured, and implements the required additions without apparent errors. The changes are relatively simple, involving standard class updates and string manipulation/parsing, indicative of a mid-level developer task with low complexity. The manual development time is estimated based on the straightforward nature of adding fields and updating associated logic/text. The specific content of the prompt and field names suggests a low percentage of code generated by AI, as it's highly tailored context, and AI assistance would likely offer minor time savings for this particular set of changes.",
        "responseTime": 10.015,
        "tokensUsed": 1178,
        "cost": 0.00014235
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 2.7,
        "estimatedHours": 3.25,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit introduces new metrics for AI code percentage and time estimation, showing a clear understanding of the codebase. Code quality is good with no apparent errors or typos, though error handling for new fields isn't explicitly shown. Developer level reflects mid-level competence with logical additions. Complexity is moderate due to straightforward changes in data structures. Estimated time accounts for understanding and integrating new metrics. AI percentage is estimated at 30% due to structured but generic code patterns that could be AI-assisted.",
        "responseTime": 2.913,
        "tokensUsed": 1307,
        "cost": 0.008175
      }
    ],
    "averageCodeQuality": 4.125,
    "averageDevLevel": 2.275,
    "averageComplexity": 2.375,
    "averageEstimatedHours": 2.0625,
    "averageAiPercentage": 28.875,
    "averageEstimatedHoursWithAi": 1.125,
    "totalTokens": 5822,
    "totalCost": 0.26156535,
    "avgCostPerModel": 0.0653913375,
    "codeAnalysis": {
      "totalLines": 13097,
      "codeLines": 11586,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.1",
      "commentPercent": "4.0",
      "textPercent": "1.9"
    },
    "analyzedAt": "2025-06-02T01:43:33.732Z"
  },
  {
    "commitHash": "e70911ad2bab81b5f3a5bce0f9394eec8a50df92",
    "commitMessage": "Clean up project to focus on multimodel analyzer",
    "timestamp": "2025-05-27T10:29:25-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 19,
    "linesAdded": 117,
    "linesDeleted": 2893,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.3,
        "devLevel": 2.3,
        "complexity": 3,
        "estimatedHours": 3.5,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit shows a clean, well-formatted update to the documentation and setup instructions for the multimodel analyzer, with no noticeable typos or syntax errors, hence a high code quality score. The changes reflect a mid-level developer approach—good integration of new API keys, environment setup, and clear example commands—but do not involve advanced patterns. The overall complexity is moderate due to modifications across many files (19) and significant line deletions, which indicate a broad cleanup without intricate logic. The estimated time reflects a realistic, non-trivial refactoring effort that would take around 3.5 hours manually, while using AI assistance could cut that down to about 1.0 hour. The low AI percentage suggests that the work appears largely human-authored.",
        "responseTime": 16.628,
        "tokensUsed": 2557,
        "cost": 0.41406
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.8,
        "devLevel": 2.4,
        "complexity": 3.2,
        "estimatedHours": 4.5,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 2.8,
        "reasoning": "Well-structured refactoring with clear documentation improvements and proper project reorganization. The README shows good technical writing with proper setup instructions and API key management. The massive line deletion (2893 vs 117 added) indicates thoughtful code cleanup and focus. Multi-model integration approach shows solid architectural thinking, though implementation details aren't visible in the diff.",
        "responseTime": 5.625,
        "tokensUsed": 1423,
        "cost": 0.006213
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.4,
        "estimatedHours": 2.75,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 1.25,
        "reasoning": "Evaluation is heavily based on the commit message, file stats (19 files changed, significant lines deleted), and the context of a large-scale project cleanup/refactor, as the extensive code diff was not provided. The provided diff only shows changes to README.md, which are clean and well-formatted (contributing positively to assumed overall quality). The large number of deletions across many files indicates complex work involving understanding project structure and removing unused/unrelated code, suggesting Mid-level skill. The complexity score reflects the difficulty of such a large-scale deletion and refactor. Estimated time reflects the effort required for significant code removal and adjustment. AI assistance likely helped in identifying code for removal or rewriting surrounding code, but the strategic decision-making and validation of deletions were likely human-driven.",
        "responseTime": 10.583,
        "tokensUsed": 1207,
        "cost": 0.000150825
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.8,
        "devLevel": 2.2,
        "complexity": 3.2,
        "estimatedHours": 3,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 2,
        "reasoning": "README.md is well-structured with clear setup and usage instructions, though it lacks detailed error handling or edge case documentation. Developer level reflects mid-tier organization and clarity in documentation updates. Complexity is moderate due to significant refactoring across 19 files and a net reduction of over 2700 lines. AI percentage is estimated at 35% due to polished phrasing that suggests some AI assistance in documentation.",
        "responseTime": 2.322,
        "tokensUsed": 1213,
        "cost": 0.007535
      }
    ],
    "averageCodeQuality": 3.9000000000000004,
    "averageDevLevel": 2.3,
    "averageComplexity": 3.2,
    "averageEstimatedHours": 3.4375,
    "averageAiPercentage": 32.625,
    "averageEstimatedHoursWithAi": 1.7625,
    "totalTokens": 6400,
    "totalCost": 0.42795882500000004,
    "avgCostPerModel": 0.10698970625000001,
    "codeAnalysis": {
      "totalLines": 13184,
      "codeLines": 11673,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.2",
      "commentPercent": "4.0",
      "textPercent": "1.8"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-02T01:47:54.121Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-06-02T01:43:52.922Z"
  },
  {
    "commitHash": "374835a72950b6cfb18f04495e8bc0daffce434d",
    "commitMessage": "Add Grok support and improve scoring precision",
    "timestamp": "2025-05-27T10:22:44-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 2,
    "linesAdded": 63,
    "linesDeleted": 216,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.1,
        "devLevel": 2.4,
        "complexity": 2.3,
        "estimatedHours": 2,
        "aiPercentage": 15,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "The commit cleanly integrates a new Grok support feature by conditionally adding the Grok client, and it improves the scoring instructions by requiring decimal precision. The modifications show careful attention to detail and a good understanding of proper configuration handling, though the changes are relatively straightforward. The overall quality is high with only minor issues, reflecting a mid-level developer approach. Work on such a focused feature patch is likely to take around 2 hours manually, with minimal AI assistance.",
        "responseTime": 11.642,
        "tokensUsed": 2392,
        "cost": 0.35951999999999995
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 1.5,
        "aiPercentage": 25,
        "estimatedHoursWithAi": 0.75,
        "reasoning": "Clean implementation adding Grok API integration with proper environment variable handling and error checking. The prompt improvements show good attention to detail. Code follows established patterns and includes appropriate safeguards. Net deletion of 153 lines suggests refactoring/cleanup occurred alongside the addition.",
        "responseTime": 9.225,
        "tokensUsed": 1631,
        "cost": 0.008409
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 4.5,
        "devLevel": 2.2,
        "complexity": 1.8,
        "estimatedHours": 0.75,
        "aiPercentage": 35,
        "estimatedHoursWithAi": 0.5,
        "reasoning": "The commit adds Grok model integration via the OpenAI client pattern and significantly refines the prompt instructions to require decimal scoring and add new metrics (AI percentage, time with AI). The added code is clean and standard. The changes are self-contained and simple in complexity, primarily involving adding a configuration block and updating text within the prompt string. The task of adding a new API client and refining prompt instructions aligns with a mid-level developer's skill set.",
        "responseTime": 6.83,
        "tokensUsed": 1108,
        "cost": 0.00012157499999999999
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 4.2,
        "devLevel": 2.4,
        "complexity": 2.8,
        "estimatedHours": 3.5,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "The commit introduces Grok support with clean integration into the existing AIModels class, showing good structure and conditional API key validation. Scoring precision improvements are evident with the shift to decimal-based metrics, indicating attention to detail. However, significant deletion of lines (216) without detailed context in the diff raises minor concerns about potential loss of functionality. The changes appear moderately complex due to API integration but are focused on a small number of files.",
        "responseTime": 2.77,
        "tokensUsed": 1334,
        "cost": 0.008239999999999999
      }
    ],
    "averageCodeQuality": 4.25,
    "averageDevLevel": 2.35,
    "averageComplexity": 2.425,
    "averageEstimatedHours": 1.9375,
    "averageAiPercentage": 26.25,
    "averageEstimatedHoursWithAi": 1,
    "totalTokens": 6465,
    "totalCost": 0.37629057499999996,
    "avgCostPerModel": 0.09407264374999999,
    "codeAnalysis": {
      "totalLines": 13271,
      "codeLines": 11760,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.2",
      "commentPercent": "3.9",
      "textPercent": "1.8"
    },
    "analyzedAt": "2025-06-02T01:44:07.037Z"
  },
  {
    "commitHash": "2c412ae0c0c7416e86a7dc02ef9045578caec5f8",
    "commitMessage": "Initial commit for testing",
    "timestamp": "2025-05-27T09:40:20-06:00",
    "user": "Marlon Espinosa",
    "project": "multi-model-commit-analyzer",
    "fileChanges": 27,
    "linesAdded": 3951,
    "linesDeleted": 0,
    "modelScores": [
      {
        "modelName": "GPT-4",
        "provider": "OpenAI",
        "codeQuality": 4.2,
        "devLevel": 2.3,
        "complexity": 2,
        "estimatedHours": 3,
        "aiPercentage": 10,
        "estimatedHoursWithAi": 1,
        "reasoning": "The commit is an initial scaffolding with a well-formatted README and a standard .gitignore, showing organized, clean work with no syntax errors or evident typos. Although 27 files and almost 4000 added lines might seem high, most of this is boilerplate and documentation rather than complex business logic. This reflects a mid-level developer approach. The work appears primarily handcrafted with little to no AI assistance.",
        "responseTime": 19.854,
        "tokensUsed": 3354,
        "cost": 0.61092
      },
      {
        "modelName": "Claude Sonnet 4",
        "provider": "Anthropic",
        "codeQuality": 3.2,
        "devLevel": 1.8,
        "complexity": 2.1,
        "estimatedHours": 4,
        "aiPercentage": 75,
        "estimatedHoursWithAi": 2.5,
        "reasoning": "Initial commit with basic project structure. README has incomplete example output (cuts off mid-sentence). Standard .gitignore patterns suggest template usage. Large line count (3951) for initial setup indicates boilerplate/generated code. Basic project organization but lacks sophisticated architecture patterns typical of senior developers.",
        "responseTime": 5.342,
        "tokensUsed": 1372,
        "cost": 0.0059039999999999995
      },
      {
        "modelName": "Gemini 2.5 Flash Preview",
        "provider": "Google",
        "codeQuality": 3.7,
        "devLevel": 2.3,
        "complexity": 3.8,
        "estimatedHours": 7,
        "aiPercentage": 45.5,
        "estimatedHoursWithAi": 3,
        "reasoning": "Analysis is severely limited as the diff for 25 out of 27 files (and nearly all lines) was not provided. Scores are based primarily on the metadata (27 files, 3951 lines) and the content of the README, which describes a complex tool. Complexity is high due to the large number of files and lines in an initial commit. Code quality and dev level are estimated assuming some level of structure based on the clear README, but cannot be verified without the actual code. Estimated hours reflect the significant volume of changes (3951 lines across 27 files), which is substantial even for an initial commit, suggesting multiple days of work. AI percentage and time with AI are speculative based on the nature of the project described and typical development patterns for complex tools.",
        "responseTime": 19.85,
        "tokensUsed": 1174,
        "cost": 0.00014227499999999998
      },
      {
        "modelName": "Grok 3",
        "provider": "xAI",
        "codeQuality": 3.5,
        "devLevel": 1.8,
        "complexity": 2.8,
        "estimatedHours": 3,
        "aiPercentage": 30,
        "estimatedHoursWithAi": 2,
        "reasoning": "Code quality is decent with no visible syntax errors or typos in the provided diff, but lacks advanced error handling or structure in the shown files (.gitignore and README.md). Developer level is mid-range due to basic setup patterns with no complex logic or architecture decisions. Complexity is moderate given the number of files changed (27) and lines added (3951), though the shown content is simple. Estimated hours reflect time for initial project setup across multiple files. AI percentage is moderate as the README structure and content show some generic patterns that could be AI-assisted.",
        "responseTime": 2.855,
        "tokensUsed": 1216,
        "cost": 0.00787
      }
    ],
    "averageCodeQuality": 3.6500000000000004,
    "averageDevLevel": 2.05,
    "averageComplexity": 2.675,
    "averageEstimatedHours": 4.25,
    "averageAiPercentage": 40.125,
    "averageEstimatedHoursWithAi": 2.125,
    "totalTokens": 7116,
    "totalCost": 0.624836275,
    "avgCostPerModel": 0.15620906875,
    "codeAnalysis": {
      "totalLines": 13358,
      "codeLines": 11847,
      "commentLines": 491,
      "textLines": 229,
      "blankLines": 791,
      "codePercent": "94.3",
      "commentPercent": "3.9",
      "textPercent": "1.8"
    },
    "statusLog": [
      {
        "previousStatus": "ok",
        "newStatus": "ok",
        "changedBy": "User",
        "timestamp": "2025-06-02T01:47:42.955Z",
        "reason": "Manual status change"
      }
    ],
    "status": "ok",
    "manuallyReviewed": true,
    "analyzedAt": "2025-06-02T01:44:29.330Z"
  }
]